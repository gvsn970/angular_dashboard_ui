{"version":3,"sources":["webpack:///./src/app/Components/sections/sections.component.html","webpack:///./src/app/Components/sections/section-filter.pipe.ts","webpack:///./src/app/Components/sections/sections.component.css","webpack:///./src/app/Components/sections/sections.component.ts","webpack:///./src/app/Modules/sections/sections-routing.module.ts","webpack:///./src/app/Modules/sections/sections.module.ts"],"names":[],"mappings":"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","file":"default~Modules-sections-sections-module~Modules-test-setup-test-setup-module.js","sourcesContent":["module.exports = \"<block-ui>\\n\\n</block-ui>\\n   <div class=\\\"sections\\\">\\n       <div class=\\\"row\\\" *ngIf=\\\"flag\\\">\\n           <div class=\\\"col-sm-12 report_txt\\\">\\n               <h4 style=\\\"padding:0rem;padding-top: 1rem;color: #707070;\\\">\\n                   <p>List of Sections</p>\\n               </h4>\\n               <hr class=\\\"m-0\\\">\\n           </div>\\n       </div>\\n       <div *ngIf=\\\"!flag\\\" pt-4 pb-4>\\n           <div class=\\\"row\\\">\\n               <div class=\\\"col-6\\\">\\n                   <h4><span style=\\\"color:#434b4a;font-size: 20px;margin-left: -1.25rem;\\\">Test Instance Creation</span></h4>\\n   \\n   \\n   \\n               </div>\\n   \\n   \\n               <div class=\\\"col-6\\\">\\n   \\n                   <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"    background: #3D70B2;border: 1px solid #3D70B2;height: 30px;line-height: 17px;border-radius: 0px;width: 200px;font-weight: 600;font-size: 15px;margin: 1rem;float: right;margin-right: 7rem;\\\" (click)=\\\"createTestInstance()\\\">Create Test Instance </button>\\n   \\n   \\n   \\n   \\n               </div>\\n           </div>\\n   \\n           <div class=\\\"row\\\" style=\\\"padding: 0rem 4rem;margin-left: -5rem;margin-right: 1rem;\\\">\\n               <div class=\\\"col\\\">\\n   \\n   \\n                   <div class=\\\"form-group\\\">\\n                           <popover-content #namePop title=\\\"\\\"placement=\\\"right\\\"[animation]=\\\"true\\\"  style=\\\"box-shadow: 10px 10px 5px #aaaaaa;\\\">\\n                           <span style=\\\"color: #646363;\\\"> Add a name/number to identify your test.</span>  \\n                           \\n                           </popover-content>\\n                       <label for=\\\"Title\\\">Test Instance Name <span><i style=\\\"    font-size: 13px;color: #969696;top: 2px;\\\"  [popoverOnHover]=\\\"true\\\" [popover]=\\\"namePop\\\" class=\\\"material-icons\\\">info</i></span></label>\\n                       <input *ngIf=\\\"testSetupData\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"testInstanceAliasName\\\"  value={{testSetupData.testInstanceAliasName}} name=\\\"testSetupTitle\\\"  disabled>\\n                   </div>\\n   \\n                   <div class=\\\"form-group\\\">\\n                           <popover-content #aliasNamePop title=\\\"\\\"placement=\\\"right\\\"[animation]=\\\"true\\\"  style=\\\"box-shadow: 10px 10px 5px #aaaaaa;\\\">\\n                           <span style=\\\"color: #646363;\\\">  Create a descriptive name for you to easily identify the test. </span>  \\n                           \\n                           </popover-content>\\n                       <label for=\\\"Title\\\">Test Instance Alias Name <span><i style=\\\"    font-size: 13px;color: #969696;top: 2px;\\\"  [popoverOnHover]=\\\"true\\\" [popover]=\\\"aliasNamePop\\\" class=\\\"material-icons\\\">info</i></span></label>\\n                       <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Title\\\" placeholder=\\\"\\\" name=\\\"testInstanceName\\\" (input)=\\\"testInstanceName=$event.target.value\\\">\\n                   </div>\\n   \\n               </div>\\n               <div class=\\\"col\\\">\\n   \\n                   <div class=\\\"form-group\\\">\\n                       <label for=\\\"Title\\\">Test Master</label>\\n                       <input *ngIf=testSetup type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"testMaster\\\" placeholder=\\\"\\\" value={{testSetup}} name=\\\"testSetupTitle\\\"   disabled>\\n                   </div>\\n                   <div class=\\\"form-group\\\">\\n                       <label for=\\\"Title\\\">Category </label>\\n                       <input *ngIf=testSetupData type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"category\\\" placeholder=\\\"\\\" value={{testSetupData.testCategoryName}} name=\\\"testSetupTitle\\\" disabled>\\n                   </div>\\n   \\n               </div>\\n   \\n           </div>\\n           <div class=\\\"row\\\" >\\n               <div class=\\\"col-md-11\\\">\\n                       <div class=\\\"form-group\\\">\\n                   \\n                               <label for=\\\"Title\\\">Tags<span style=\\\"font-size:x-small;color: #051d0a;\\\">(Max Tags Limit:10)</span></label>\\n                               <tag-input theme='bootstrap' [(ngModel)]=\\\"itemsAsObjects\\\" [onlyFromAutocomplete]=\\\"false\\\"  [addOnBlur]=true (identifyBy)=0 [identifyBy]=\\\"'instanceModelTagId'\\\" [displayBy]=\\\"'instanceModelTagName'\\\" [maxItems]=10 (onAdd)=\\\"onItemAdded($event)\\\" >\\n                                       <!-- <tag-input-dropdown [showDropdownIfEmpty]=\\\"true\\\"\\n                                       [autocompleteItems]=\\\"items\\\">\\n                   </tag-input-dropdown> -->\\n                               </tag-input>\\n                           </div>\\n               </div>\\n               \\n           </div>\\n   \\n       </div>\\n      \\n       <div *ngIf=\\\"flag\\\" class=\\\"row\\\" style=\\\"padding-top: 2rem;\\\">\\n        <div class=\\\"form-group col-md-6\\\">\\n\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search By Sections\\\" [(ngModel)]=\\\"serachBySection\\\" style=\\\"border-radius: 0px;box-shadow: 1px 2px 3px 2px #c2c2c2;\\\">\\n\\n\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-4\\\">\\n\\n                    <span>\\n                        <b>Filter By Test Master :</b>\\n                    </span>\\n                </div>\\n                <div class=\\\"col-sm-7 p-0\\\">\\n                    <div id=\\\"mul_close\\\">\\n                            <angular2-multiselect name=\\\"testInsSections2\\\" [data]=\\\"dropdownListMaster\\\" [(ngModel)]=\\\"selectedMaster\\\" [settings]=\\\"dropdownCateg\\\" (onSelect)=\\\"onMasterSelect($event)\\\"\\n                            (onDeSelectAll)=\\\"onRemoveAll()\\\" (onDeSelect)=\\\"onRemoveAll()\\\" (onSelect)=\\\"clickDiv()\\\"></angular2-multiselect>\\n                    </div>\\n                    \\n                </div>\\n            </div>\\n\\n        </div>\\n\\n    </div>\\n\\n   \\n       <div *ngIf=\\\"flag\\\" class=\\\"row justify-content-end\\\" style=\\\"padding-right:6.5rem\\\">\\n   \\n   \\n   \\n   \\n       </div>\\n   \\n       <h4 *ngIf=\\\"!flag\\\"><span style=\\\"color:#434b4a;font-size: 20px;margin-left: -1.25rem;\\\">Sections</span></h4>\\n   \\n       <div class=\\\"row \\\" style=\\\"margin-left: -2rem;\\\">\\n           <div *ngIf=false class=\\\"card col-md-4\\\" id=\\\"add\\\" style=\\\" cursor: pointer;   border: 1px dashed;background: transparent;\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">\\n   \\n               <i class=\\\"material-icons mx-auto\\\" style=\\\"background: #DEDBDB;margin-top: 3.5rem;color: #2C2C2C;width: fit-content;border-radius: 50%;font-size: 30px;padding: 0.3rem;\\\">add</i>\\n               <p style=\\\"text-align: center\\\">Add New Section</p>\\n   \\n           </div>\\n           <div *ngIf=!flag class=\\\"card col-md-4\\\" id=\\\"add\\\" style=\\\" cursor: pointer;   border: 1px dashed;background: transparent;\\\" data-toggle=\\\"modal\\\" data-target=\\\"#sectionModal\\\">\\n   \\n            <i class=\\\"material-icons mx-auto\\\" style=\\\"background: #DEDBDB;margin-top: 3.5rem;color: #2C2C2C;width: fit-content;border-radius: 50%;font-size: 30px;padding: 0.3rem;\\\">add</i>\\n            <p style=\\\"text-align: center\\\">Add New Section</p>\\n\\n        </div>\\n   \\n           <!-- The Modal -->\\n           <!-- The Modal -->\\n           <div class=\\\"modal\\\" id=\\\"myModal\\\">\\n               <div class=\\\"modal-dialog\\\">\\n                   <div class=\\\"modal-content\\\">\\n   \\n                       <!-- Modal Header -->\\n                       <div class=\\\"modal-header\\\">\\n                           <h4 class=\\\"modal-title\\\">Create Section</h4>\\n                           <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                       </div>\\n   \\n                       <!-- Modal body -->\\n                       <div class=\\\"modal-body\\\">\\n                       <form #myForm1=\\\"ngForm\\\" (ngSubmit)=\\\"flag ? addSection(myForm1.value):addSectionByTestInsatanceId(myForm1.value)\\\">\\n                       \\n                               <div class=\\\"form-group\\\">\\n   \\n                                   <select class=\\\"form-control\\\" name=\\\"categoryId\\\" (change)=\\\"onSeletedCatAndSub($event.target.value)\\\">\\n                                    <option disabled>Please Select Category</option>\\n                                   <option   *ngFor=\\\"let arr of categoryAndSubCategoryArr;let i = index\\\"   value={{i}}><span style=\\\"color:#34bd6f\\\" *ngIf=\\\"arr.type==2\\\" >&#xf07c; {{arr.name}} </span> <span   *ngIf=\\\"arr.type==1\\\">&#xf07c; {{arr.name}} </span></option>\\n                                   <!-- <option   value=\\\"type={{arr.type}},id={{arr.id}}\\\"  *ngFor=\\\"let arr of categoryAndSubCategoryArr\\\" > &#xf022; {{arr.name}} </option> -->\\n                                   \\n                             </select>\\n                               </div>\\n   \\n                               <div class=\\\"form-group\\\">\\n   \\n                                   <label for=\\\"exampleFormControlInput1\\\">{{this.heirarchy}}</label>\\n   \\n                               </div>\\n                               <div class=\\\"form-group\\\">\\n                                   <label for=\\\"exampleFormControlInput1\\\">Section Name</label>\\n                                   <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"seactionName\\\" ngModel placeholder=\\\"section name\\\">\\n                               </div>\\n                               <!-- Modal footer -->\\n                               <div class=\\\"modal-footer\\\">\\n                                   <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add Section</button>\\n                               </div>\\n   \\n                               <div class=\\\"alert alert-success\\\" *ngIf=\\\"this.seactionSuccessMessage\\\">\\n                                   {{this.sectionStatusMessage}}\\n                               </div>\\n                               <div class=\\\"alert alert-danger\\\" *ngIf=\\\"this.seactionFailMessage\\\">\\n                                   {{this.sectionStatusMessage}}\\n                               </div>\\n   \\n                           </form>\\n   \\n                       </div>\\n   \\n                   </div>\\n               </div>\\n           </div>\\n            <!-- The TI Sectiom Modal -->\\n           <div class=\\\"modal\\\" id=\\\"sectionModal\\\">\\n            <div class=\\\"modal-dialog\\\">\\n                <div class=\\\"modal-content\\\">\\n\\n                    <!-- Modal Header -->\\n                    <div class=\\\"modal-header\\\">\\n                        <h4 class=\\\"modal-title\\\">Create Section</h4>\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                    </div>\\n\\n                    <!-- Modal body -->\\n                    <div class=\\\"modal-body\\\">\\n                    <form #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"flag ? addSection(myForm.value):addSectionByTestInsatanceId(myForm.value)\\\">\\n                    \\n                            <div class=\\\"form-group\\\">\\n                                <div *ngIf=\\\"imgFlag\\\">\\n                                        <span class=\\\"blue\\\" style=\\\"padding: 2rem;\\\">\\n                                                <i style=\\\"position: absolute;\\\" class=\\\"material-icons\\\">folder </i> <span style=\\\"color:rgb(168, 165, 165);padding-left: 2rem \\\"  >(Category)</span> \\n                                             </span>\\n                                             <span  style=\\\"padding: 2rem; color: seagreen\\\">\\n                                                <i style=\\\"position: absolute;\\\" class=\\\"material-icons\\\">folder </i> <span style=\\\"color:rgb(168, 165, 165);padding-left: 2rem \\\" >(Sub-Category)</span>\\n                                             </span>\\n                                </div>\\n                                    \\n                          <angular2-multiselect name=\\\"testInsSections\\\" (onOpen)=\\\"imgFlag=$event\\\" (onClose)=\\\"imgFlag=$event\\\" (onDeSelectAll)=\\\"onDeSelectAll($event)\\\" (onSelect)=\\\"onItemSelect($event)\\\" [data]=\\\"testSectionList\\\"  [settings]=\\\"dropdownCateg2\\\" [(ngModel)]=\\\"selectedItems\\\" >\\n                               \\n                            \\n                            <c-item>\\n                                <ng-template let-item=\\\"item\\\">\\n                                        \\n                                        <span class=\\\"blue\\\" *ngIf=\\\"item.type==1\\\" >\\n                                                <i    title=\\\"category\\\" class=\\\"material-icons\\\">folder </i> \\n                                             </span>\\n                                             <span  style=\\\"  color: seagreen\\\" *ngIf=\\\"item.type==2\\\">\\n                                                <i title=\\\"sub-category\\\" class=\\\"material-icons\\\">folder </i> \\n                                             </span>\\n                                             <label style=\\\"color: #333;min-width: 50px;\\\"></label>\\n                                  <label style=\\\"color: #333;\\\">{{item.itemName}} </label>\\n                                  \\n                                </ng-template>\\n                        </c-item>  \\n                          </angular2-multiselect>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n\\n                                <label for=\\\"exampleFormControlInput1\\\">{{this.heirarchy}}</label>\\n\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <!-- <label for=\\\"exampleFormControlInput1\\\">Section Name</label> -->\\n                                <input type=\\\"text\\\" id=\\\"section_input\\\" class=\\\"form-control\\\" name=\\\"seactionName\\\" ngModel placeholder=\\\"section name\\\">\\n                            </div>\\n                            <div class=\\\"form-group\\\" style=\\\"padding:2rem\\\" *ngIf=testSetupData>\\n                                <!-- <label for=\\\"exampleFormControlInput1\\\">Section Name</label> -->\\n                                <input *ngIf=\\\"testSetupData.isOwner==1\\\" id=\\\"check\\\" class=\\\"mt-2 mr-2\\\" type=\\\"checkbox\\\" name=\\\"addToMaster\\\" ngModel><span *ngIf=\\\"testSetupData.isOwner==1\\\" >Add to Master</span> \\n                                \\n                                <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"seactionName\\\" ngModel placeholder=\\\"section name\\\"> -->\\n                            </div>\\n                            <!-- Modal footer -->\\n                            <div class=\\\"modal-footer\\\">\\n                                <button  *ngIf=heirarchy type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add Section</button>\\n                            </div>\\n\\n                           \\n\\n                        </form>\\n\\n                    </div>\\n\\n                </div>\\n            </div>\\n        </div>\\n   \\n   \\n   \\n   \\n           <div class=\\\"card col-md-4\\\" style=\\\"border-bottom:3px solid #41D6C3\\\" *ngFor=\\\"let i=index;let section of sectionsData | sectionFilter:serachBySection\\\">\\n               <div class=\\\"card-body\\\" *ngIf=\\\"section.hierarchy\\\">\\n                   <label class=\\\"container\\\">\\n                                     <input type=\\\"checkbox\\\" [attr.checked]=\\\"section.isSectionActive==1 ? 'checked' : null\\\" (change)=selectSection(i); *ngIf=\\\"!flag\\\">\\n                                     <span class=\\\"checkmark\\\" *ngIf=\\\"!flag\\\"></span>\\n                                 </label>\\n                   <h5 class=\\\"card-title\\\">{{section.sectionName}}</h5>\\n                   <h6 class=\\\"card-subtitle mb-2 text-muted\\\">No. of Questions: {{section.totalNoOfQuestions}}</h6>\\n                   <p class=\\\"card-text\\\">Section Code: <span style=\\\"color:green\\\">{{section.sectionCode}}</span></p>\\n   \\n                   <p class=\\\"card-text\\\">Last modified: {{section.modifiedOn =='null' ? \\\" \\\" : section.modifiedOn | date }}</p>\\n                   <p class=\\\"card-text\\\" style=\\\"cursor: pointer\\\" title={{section.hierarchy}} *ngIf=\\\"section.hierarchy.length>=40\\\">{{section.hierarchy | slice:0:40}}..</p>\\n                   <p class=\\\"card-text\\\" *ngIf=\\\"section.hierarchy.length<40\\\">{{section.hierarchy }}</p>\\n                   <hr>\\n   \\n                   <!-- <a href=\\\"#\\\" class=\\\"card-link\\\" style=\\\"float: right;\\\" (click)=\\\"onSection($event,section.sectionId);getTemplateLink()\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\">+ Add New Question</a> -->\\n                   <button class=\\\"btn btn-link\\\" style=\\\"float: right;\\\" (click)=\\\"onSection($event,section.sectionId);getTemplateLink();sectionId=section.sectionId\\\" data-toggle=\\\"modal\\\"\\n                   data-target=\\\"#exampleModalCenter\\\" [disabled]=\\\"!section.isOwner\\\">+ Add Questions</button>\\n   \\n   \\n                   \\n   \\n               </div>\\n   \\n           </div>\\n   \\n   \\n   \\n       </div>\\n   \\n   \\n   \\n   \\n   </div>\\n   \\n\\n   <div id=\\\"UploadedQuesModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n        <div class=\\\"modal-dialog\\\">\\n    \\n            <!-- Modal content-->\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h4 class=\\\"modal-title\\\">Bulk Upload Status</h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                </div>\\n    \\n                <div class=\\\"modal-body pt-0 pb-0\\\">\\n    \\n                    <div class=\\\"row pt-4 pb-4\\\">\\n                        <div class=\\\"col-sm-4\\\">\\n                            <label><b>Total no of questions :</b></label>\\n                            <span class=\\\"pl-3 quesCountSize tot_count\\\">{{totalQuestionsCount}}</span>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <label><b>No .of success questions :</b></label>\\n                            <span class=\\\"pl-3 quesCountSize succ_count\\\">{{questionsSuccessCount}}</span>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <label><b>No .of already exist questions :</b></label>\\n                            <span class=\\\"pl-3 quesCountSize exist_count\\\">{{questionsExistCount}}</span>\\n                        </div>\\n                    </div>\\n    \\n                    <div class=\\\"row\\\">\\n                        <table class=\\\"table text-center\\\" *ngIf=\\\"uploadedQues && !uploadedQues['questionResponseList'].length\\\">\\n                            <tr class=\\\"text-center errorTxt\\\">\\n                                <th colspan=\\\"3\\\">No Questions Uploaded</th>\\n                            </tr>\\n                        </table>\\n                        <table class=\\\"table text-center\\\" *ngIf=\\\"uploadedQues && uploadedQues['questionResponseList'].length\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th>Question</th>\\n                                    <!-- <th>Status</th> -->\\n                                    <th>Message</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let ques of uploadedQues['questionResponseList']\\\">\\n                                    <td>{{ques.questionName}}</td>\\n                                    <!-- <td>\\n                                                <p *ngIf=\\\"ques.statusCode == 0\\\">Failed</p>\\n                                                <p *ngIf=\\\"ques.statusCode == 1\\\">Uploaded</p>\\n                                                <p *ngIf=\\\"ques.statusCode == 2\\\">Already Exists !</p>\\n                                            </td> -->\\n                                    <td [ngClass]=\\\"{'red_col': ques.statusCode == 0, 'green_col':ques.statusCode == 1, 'yellow_col':ques.statusCode == 2}\\\">{{ques.statusMessage}}</td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                </div>\\n            </div>\\n    \\n        </div>\\n    </div>\\n\\n    <!-- Modal -->\\n   \\n    <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" role=\\\"dialog\\\">\\n        <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n\\n                <div class=\\\"modal-body\\\">\\n\\n                        <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-8 text-center\\\">\\n                                    <!-- <h4 class=\\\"blueColor\\\">Add Questions</h4> -->\\n                                </div>\\n                                <div class=\\\"col-sm-4\\\">\\n                                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\n                                        <span class=\\\"boxShadow\\\">\\n                                            <i class=\\\"material-icons\\\">\\n                                                clear\\n                                            </i>\\n                                        </span>\\n            \\n                                    </button>\\n                                </div>\\n                                <!-- <div class=\\\"col-sm-12\\\">\\n                                    <hr>\\n                                </div> -->\\n                            </div>\\n\\n                    <ul class=\\\"nav nav-tabs\\\" id=\\\"myTab\\\" role=\\\"tablist\\\">\\n                        <li class=\\\"nav-item col\\\" (click)=\\\"toggleBulk('1')\\\">\\n                            <a [ngClass]=\\\"{'nav-link':true,'active':!bulkUpload}\\\" style=\\\"text-align: center;\\\" id=\\\"home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#home\\\" role=\\\"tab\\\" aria-controls=\\\"home\\\" aria-selected=\\\"true\\\">Add Questions</a>\\n                        </li>\\n                        <li class=\\\"nav-item col\\\" (click)=\\\"toggleBulk('2')\\\">\\n                            <a [ngClass]=\\\"{'nav-link':true,'active':bulkUpload}\\\" id=\\\"profile-tab\\\" style=\\\"text-align: center;\\\" data-toggle=\\\"tab\\\" href=\\\"#profile\\\" role=\\\"tab\\\" aria-controls=\\\"profile\\\" aria-selected=\\\"false\\\">Bulk Upload</a>\\n                        </li>\\n\\n                    </ul>\\n\\n                    <div class=\\\"tab-content\\\" id=\\\"myTabContent\\\" *ngIf=\\\"!bulkUpload\\\">\\n\\n                        <div class=\\\"tab-pane fade show active\\\" id=\\\"home\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"home-tab\\\">\\n\\n                            <!-- <div class=\\\"p-4 text-center\\\">\\n                            <h4 class=\\\"blueColor\\\">Add Questions</h4>\\n                            <hr>\\n                        </div>\\n         -->\\n                            <!-- Created Question -->\\n                            <div class=\\\"createdQuestion.length\\\">\\n                                <div *ngFor=\\\"let ques of createdQuestion\\\">\\n                                    <div class=\\\"pl-4 pr-4\\\">\\n                                        <h4 class=\\\"blueColor\\\">Q. {{ques.qustionText}}</h4>\\n                                        <div *ngIf=\\\"ques.questionTypeId == '1' || ques.questionTypeId == '2'\\\">\\n                                            <p *ngFor=\\\"let opt of ques['optionsList'];let i=index\\\">\\n                                                <b>{{i+1}}. </b>\\n                                                <span class=\\\"pl-4\\\">{{opt.optionText}}</span>\\n                                            </p>\\n                                        </div>\\n                                    </div>\\n                                    <div *ngIf=\\\"ques.questionTypeId == '3' || ques.questionTypeId == '4' || ques.questionTypeId == '5' || ques.questionTypeId == '6'\\\">\\n                                        <!-- <textarea rows=\\\"6\\\" cols=\\\"40\\\" name=\\\"answer\\\" [(ngModel)]=\\\"ques.answer\\\"></textarea> -->\\n                                        <p>\\n                                            {{ques.answer}}\\n                                        </p>\\n                                    </div>\\n                                    <hr>\\n                                </div>\\n                            </div>\\n                            <!-- End Created QUestion -->\\n\\n\\n                            <!-- <ul class=\\\"nav nav-tabs\\\" id=\\\"myTab\\\" role=\\\"tablist\\\">\\n                            <li class=\\\"nav-item col\\\">\\n                                <a class=\\\"nav-link active\\\" style=\\\"text-align: center;\\\" id=\\\"home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#home\\\" role=\\\"tab\\\" aria-controls=\\\"home\\\"\\n                                    aria-selected=\\\"true\\\">Add Questions</a>\\n                            </li>\\n                            <li class=\\\"nav-item col\\\">\\n                                <a class=\\\"nav-link\\\" id=\\\"profile-tab\\\" style=\\\"text-align: center;\\\" data-toggle=\\\"tab\\\" href=\\\"#profile\\\" role=\\\"tab\\\" aria-controls=\\\"profile\\\"\\n                                    aria-selected=\\\"false\\\">Bulk Upload</a>\\n                            </li>\\n        \\n                        </ul> -->\\n\\n                            <div class=\\\"tab-content\\\" id=\\\"myTabContent\\\">\\n\\n                                <div class=\\\"tab-pane fade show active\\\" id=\\\"home\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"home-tab\\\">\\n\\n                                    <form #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"addQuestion(myForm)\\\">\\n\\n\\n                                        <div style=\\\"padding: 2rem 3rem;\\n            text-align: left;\\n            font-size: 14px;\\\">\\n                                            <div class=\\\"form-row\\\">\\n                                                <div class=\\\"form-group col-md-6\\\">\\n                                                    <div class=\\\"form-row\\\">\\n\\n                                                        <div class=\\\"col-md-10\\\">\\n                                                                \\n\\n                                                            <label for=\\\"firstName\\\">Question Title  <sup class=\\\"errorTxt\\\">*</sup></label>\\n                                                            <!-- <input type=\\\"hidden\\\" name=\\\"sectionId\\\" #sectionId=\\\"ngModel\\\" ngModel/> -->\\n                                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"questionTitle\\\" name=\\\"questionText\\\" ngModel placeholder=\\\"\\\" required>\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-md-2\\\" style=\\\"padding-top: 2rem;\\\">\\n                                                            <!-- <i class=\\\"material-icons\\\" (click)=\\\"questionImg()\\\" style=\\\"cursor: pointer;\\\">\\n                                                            image\\n                                                        </i> -->\\n                                                            <!-- <input type=\\\"file\\\" [hidden]=\\\"true\\\" (change)=\\\"onSelectedQuestionImage($event)\\\" id=\\\"imageId\\\"> -->\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group col-md-3\\\">\\n                                                        <popover-content #questionTypePop \\n                                                        title=\\\"\\\"\\n                                                        placement=\\\"right\\\"\\n                                                        [animation]=\\\"true\\\" \\n                                                         style=\\\"box-shadow: 10px 10px 5px #aaaaaa;\\\">\\n                                                        <span style=\\\"color: #646363;\\\"> Define the type of question.Eg.Multiple choice, descriptive,True/False etc</span>  \\n                                                        \\n                                                        </popover-content>\\n                                                    <label for=\\\"lastName\\\">Question type <span><i style=\\\"    font-size: 13px;color: #969696;top: 2px;\\\"  [popoverOnHover]=\\\"true\\\" [popover]=\\\"questionTypePop\\\" class=\\\"material-icons\\\">info</i></span> <sup class=\\\"errorTxt\\\">*</sup></label>\\n\\n                                                    <select class=\\\"form-control\\\" id=\\\"questionType\\\" name=\\\"questionTypeId\\\" #questionTypeId=ngModel ngModel (change)=\\\"setType(questionTypeId.value)\\\" required>\\n                                                    <option value=\\\"\\\"> Select Type</option>\\n                                                    <option value=\\\"{{questionType.questionTypeId}}\\\" *ngFor=\\\"let questionType of questionTypeArr\\\">{{questionType.questionType}}</option>\\n                                                </select>\\n                                                </div>\\n                                                <div class=\\\"form-group col-md-3\\\">\\n                                                        <popover-content #complexity \\n                                                        title=\\\"\\\"\\n                                                        placement=\\\"right\\\"\\n                                                        [animation]=\\\"true\\\" \\n                                                         style=\\\"box-shadow: 10px 10px 5px #aaaaaa;\\\">\\n                                                        <span style=\\\"color: #646363;\\\"> Identify the level of difficulty of the question. Easy/Basic, medium, Advanced etc </span>  \\n                                                        \\n                                                        </popover-content>\\n                                                    <label for=\\\"lastName\\\">Complexity <span><i style=\\\"    font-size: 13px;color: #969696;top: 2px;\\\"  [popoverOnHover]=\\\"true\\\" [popover]=\\\"complexity\\\" class=\\\"material-icons\\\">info</i></span> <sup class=\\\"errorTxt\\\">*</sup></label>\\n                                                    <select class=\\\"form-control\\\" id=\\\"complexity\\\" name=\\\"complexityId\\\" ngModel required>\\n                                                    <option value=\\\"\\\">Select </option>\\n                                                    <option value=\\\"{{complex.complexityId}}\\\" *ngFor=\\\"let complex of complexityArr\\\">{{complex.complexity}} </option>\\n                                                </select>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"form-row\\\">\\n                                                <div class=\\\"form-group col-md-6\\\">\\n                                                    <p>\\n                                                            <popover-content #additionalData \\n                                                            title=\\\"\\\"\\n                                                            placement=\\\"right\\\"\\n                                                            [animation]=\\\"true\\\" \\n                                                             style=\\\"box-shadow: 10px 10px 5px #aaaaaa;\\\">\\n                                                            <span style=\\\"color: #646363;\\\"> Use this to add specific instructions on the questions.Eg.Answer one of two.</span>  \\n                                                            \\n                                                            </popover-content>\\n                                                        <a (click)=\\\"onAccordion()\\\" style=\\\"float: right;margin-right: 4rem;\\\" data-toggle=\\\"collapse\\\" href=\\\"#collapseExample\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseExample\\\">\\n                                                        + Additional data <span><i style=\\\"    font-size: 13px;color: #969696;top: 2px;\\\"  [popoverOnHover]=\\\"true\\\" [popover]=\\\"additionalData\\\" class=\\\"material-icons\\\">info</i></span>\\n                                                    </a>\\n\\n                                                    </p>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"collapse\\\" id=\\\"collapseExample\\\">\\n                                                <div style=\\\"border: 1px solid #c2c1e1;border-radius: 5px;\\\">\\n                                                    <ul class=\\\"nav nav-tabs\\\" id=\\\"myTab2\\\" role=\\\"tablist\\\">\\n                                                        <!-- <li class=\\\"nav-item col\\\">\\n                                                        <a (click)=\\\"onAccordion()\\\" class=\\\"nav-link active\\\" style=\\\"text-align: center;\\\" id=\\\"text-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#text\\\"\\n                                                            role=\\\"tab\\\" aria-controls=\\\"text\\\" aria-selected=\\\"true\\\">Text</a>\\n                                                    </li> -->\\n                                                        <li class=\\\"nav-item col\\\">\\n                                                            <a (click)=\\\"onCode()\\\" class=\\\"nav-link\\\" id=\\\"code-tab\\\" style=\\\"text-align: center;\\\" data-toggle=\\\"tab\\\" href=\\\"#code\\\" role=\\\"tab\\\" aria-controls=\\\"code\\\" aria-selected=\\\"false\\\">Text/Code</a>\\n                                                        </li>\\n\\n                                                    </ul>\\n                                                    <div class=\\\"tab-content\\\">\\n                                                        <div class=\\\"tab-pane active\\\" id=\\\"text\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"text-tab\\\" style=\\\"padding:1rem\\\">\\n\\n                                                            <textarea id=\\\"txtarea\\\" class=\\\"form-control \\\" style=\\\"border:none\\\" spellcheck=\\\"false\\\" placeholder=\\\"Add description..\\\"></textarea>\\n\\n\\n\\n                                                        </div>\\n                                                        <div class=\\\"tab-pane fade\\\" id=\\\"code\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"code-tab\\\" style=\\\"padding:1rem\\\">\\n                                                            <textarea id=\\\"txtarea2\\\" class=\\\"form-control \\\" name=\\\"questionCode\\\" ngModel style=\\\"border:none\\\" spellcheck=\\\"false\\\" placeholder=\\\"Add Code..\\\"></textarea>\\n\\n                                                        </div>\\n                                                    </div>\\n\\n                                                </div>\\n                                            </div>\\n\\n                                            <div *ngIf=\\\"questionType == 1 || questionType == 2\\\">\\n                                                <div *ngIf=\\\"optionList.length\\\">\\n                                                <h5>Options</h5>\\n                                                <hr>\\n                                                </div>\\n                                               \\n                                                <mat-radio-group class=\\\"example-radio-group\\\">\\n                                                <div *ngFor=\\\"let opt of optionList;let i=index\\\">\\n                                                <div class=\\\"form-row pt-4\\\" (mouseover)=\\\"showDelete(i)\\\" (mouseleave)=\\\"hideDelete(i)\\\">\\n                                                <div *ngIf=\\\"questionType == '1'\\\" class=\\\"col-sm-1\\\">\\n                                               \\n                                                <mat-radio-button class=\\\"example-radio-button\\\" (click)=\\\"setMcqAns(i)\\\" [value]=\\\"i\\\" class=\\\"correct_radio\\\">\\n                                               \\n                                                </mat-radio-button>\\n                                                </div>\\n                                                <div *ngIf=\\\"questionType == '2'\\\" class=\\\"check_green\\\">\\n                                                <mat-checkbox class=\\\"example-margin\\\" (click)=\\\"checkboxAns(i)\\\"></mat-checkbox>\\n                                                </div>\\n                                                <div class=\\\"form-group col-md-4\\\">\\n                                                <!-- <label for=\\\"email\\\">Option</label> -->\\n                                                <!-- <input type=\\\"hidden\\\" class=\\\"form-control\\\" name=\\\"tempId\\\" ngModel=\\\"{{this.tempOptionImageId}}\\\"> -->\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"optionObj[i].optionText\\\" [ngModelOptions]=\\\"{standalone:true}\\\">\\n                                                <span id=\\\"close_{{i}}\\\" class=\\\"close_icon\\\" (click)=\\\"deleteOption(i)\\\" [hidden]=\\\"optionList.length == 1\\\">\\n                                                <i class=\\\"material-icons\\\">\\n                                                close\\n                                                </i>\\n                                                </span>\\n                                               \\n                                                </div>\\n                                               \\n                                                <div class=\\\" col-md-2 \\\" style=\\\"padding-top: 2.25rem; \\\">\\n                                               \\n                                                <i class=\\\"material-icons\\\" (click)=\\\"optionImg(i)\\\" style=\\\"cursor:pointer;\\\" *ngIf=\\\"questionType == '7'\\\">\\n                                                image\\n                                                </i>\\n                                                <input type=\\\"file\\\" [hidden]=\\\"true \\\" (change)=\\\"onSelectedOptionImage($event,i)\\\" id=\\\"optionImageId{{i}}\\\">\\n                                               \\n                                                </div>\\n                                               \\n                                               \\n                                                </div>\\n                                                <button class=\\\"btn btn-link \\\" (click)=\\\"incOptionList()\\\" style=\\\"margin-left: 18%;\\\" *ngIf=\\\"optionList.length == i+1\\\">\\n                                                + Add another option\\n                                                </button>\\n                                                </div>\\n                                                </mat-radio-group>\\n                                                </div>\\n                                               \\n                                               \\n                                               \\n                                                \\n                                                <div class=\\\"form-row\\\">\\n                                                <div class=\\\"form-group col-md-4 \\\">\\n                                                <div *ngIf=\\\"questionType == 3 || questionType == 4 || questionType == 5 || questionType == 6\\\">\\n                                                <label for=\\\"te \\\">Answer</label>\\n                                                </div>\\n                                                <div *ngIf=\\\"questionType == 3 || questionType == 4 || questionType == 5 || questionType == 6\\\">\\n                                                <textarea rows=\\\"6\\\" cols=\\\"40\\\" name=\\\"answer\\\" ngModel></textarea>\\n                                                </div>\\n                                                <!-- <div *ngIf=\\\"questionType == 1 || questionType == 2\\\">\\n                                                <input type=\\\"text \\\" class=\\\"form-control \\\" name=\\\"answer\\\" ngModel placeholder=\\\" \\\">\\n                                                </div> -->\\n                                                </div>\\n                                                </div>\\n\\n\\n\\n                                            <!-- <div class=\\\"form-row \\\">\\n            <div class=\\\"form-group col-md-4 \\\">\\n            <label for=\\\"email \\\">Option</label>\\n            <input type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"option \\\" name=\\\"optionText \\\" [(ngModel)]=\\\"this.optionObj \\\" placeholder=\\\" \\\">\\n            </div>\\n           \\n            <div class=\\\"col-md-2 \\\" style=\\\"padding-top: 2.25rem; \\\"> <i class=\\\"material-icons \\\" (click)=\\\"optionImg() \\\" style=\\\"cursor: pointer; \\\">\\n            image\\n            </i>\\n            <input type=\\\"file \\\" [hidden]=\\\"true \\\" (change)=\\\"onSelectedOptionImage($event) \\\" id=\\\"optionImageId \\\">\\n            </div>\\n           \\n            </div> -->\\n                                            <!-- <div class=\\\"form-row \\\">\\n            <div class=\\\"form-group col-md-4 \\\">\\n            <label for=\\\"email \\\">Option</label>\\n            <input type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"option \\\" placeholder=\\\" \\\">\\n            <a href=\\\"JavaScript:Void(0); \\\" style=\\\"float: right \\\">\\n            + Add another option\\n            </a>\\n            </div>\\n            <div class=\\\"col-md-2 \\\" style=\\\"padding-top: 2.25rem; \\\"> <i class=\\\"material-icons \\\" (click)=\\\"optionImg1() \\\" style=\\\"cursor: pointer; \\\">\\n            image\\n            </i>\\n            <input type=\\\"file \\\" [hidden]=\\\"true \\\" (change)=\\\"onSelectedOptionImage($event) \\\" id=\\\"optionImageId1 \\\">\\n            </div>\\n            </div> -->\\n                                             \\n                                            <div class=\\\"col-md-12 pt-5 pl-0\\\">\\n                                                <div style=\\\"float:left;margin-left: -2rem \\\">\\n                                                    <!-- <label>Mandatory</label> -->\\n                                                    <!-- <label class=\\\"container-mand\\\">\\n                                                            <popover-content #manditoryPop \\n                                                            title=\\\"\\\"\\n                                                            placement=\\\"right\\\"\\n                                                            [animation]=\\\"true\\\" \\n                                                             style=\\\"box-shadow: 10px 10px 5px #aaaaaa;\\\">\\n                                                            <span style=\\\"color: #646363;\\\"> Specify questions must be answered before progressing to the next question.</span>  \\n                                                            \\n                                                            </popover-content>\\n                                                    <input id=\\\"check\\\" class=\\\"mt-2 mr-2\\\" type=\\\"checkbox\\\" name=\\\"isMandate\\\" ngModel>Mandatory<span><i style=\\\"    font-size: 13px;color: #969696;top: 2px;\\\"  [popoverOnHover]=\\\"true\\\" [popover]=\\\"manditoryPop\\\" class=\\\"material-icons\\\">info</i></span> \\n                                                  \\n                                                </label>-->\\n\\n                                                </div>\\n                                                <div class=\\\"float-left mt-1 ml-4\\\">\\n                                                    <section class=\\\"example-section\\\">\\n                                                            <popover-content #globalPop \\n                                                            title=\\\"\\\"\\n                                                            placement=\\\"right\\\"\\n                                                            [animation]=\\\"true\\\" \\n                                                             style=\\\"box-shadow: 10px 10px 5px #aaaaaa;\\\">\\n                                                            <span style=\\\"color: #646363;\\\"> Here you get the option to contribute your question to the global catalogue and help enrich the community.</span>  \\n                                                            \\n                                                            </popover-content>\\n                                                        <mat-slide-toggle class=\\\"example-margin\\\" [color]=\\\"color\\\" [checked]=\\\"true\\\" data-toggle=\\\"toggle\\\" name=\\\"globaleShare\\\" ngModel>\\n                                                            Contribute to Global Question Catalouge <span><i style=\\\"    font-size: 13px;color: #969696;top: 2px;\\\"  [popoverOnHover]=\\\"true\\\" [popover]=\\\"globalPop\\\" class=\\\"material-icons\\\">info</i></span>\\n                                                        </mat-slide-toggle>\\n                                                    </section>\\n                                                </div>\\n                                                <div style=\\\"float: right; \\\">\\n\\n                                                    <!-- <button type=\\\"button \\\" class=\\\"btn btn-primary \\\" style=\\\"background: #fff;color: #3D70B2;margin-right:2rem; border: 1px solid #3D70B2; height: 30px; line-height: 17px; border-radius: 0px; font-weight:\\n            600; font-size: 15px; \\\" routerLink=\\\"sections \\\">+ Add Another Question</button>\\n                                                <button type=\\\"button \\\" class=\\\"btn btn-primary \\\" style=\\\"background: #fff;color: #3D70B2;margin-right:2rem; border: 1px solid #3D70B2; height: 30px; line-height: 17px; border-radius: 0px; font-weight:\\n            600; font-size: 15px; \\\" routerLink=\\\"sections \\\">Create New Section</button> -->\\n\\n                                                    <button type=\\\"submit \\\" class=\\\"btn btn-primary add_ques_btn\\\" [disabled]=\\\"!myForm.valid\\\" [ngClass]=\\\"{'cursor_not':!myForm.valid}\\\">\\n                                                    Add Question</button>\\n                                                </div>\\n\\n                                            </div>\\n                                        </div>\\n                                    </form>\\n                                    <!-- <div class=\\\"alert alert-success\\\" style=\\\"text-align:center\\\" *ngIf=\\\"questionSuccesMessage\\\">\\n                                        <span style=\\\"text-align:center\\\">{{this.statusMessage}}</span>\\n                                    </div>\\n                                    <div class=\\\"alert alert-danger\\\" style=\\\"text-align:center\\\" *ngIf=\\\"questionFailMessage\\\">\\n                                        <span>{{this.statusMessage}}</span>\\n                                    </div> -->\\n\\n\\n\\n                                    <div class=\\\"alert alert-success\\\" style=\\\"text-align:center\\\" *ngIf=\\\"optionImageSuccess\\\">\\n                                        <span style=\\\"text-align:center\\\">{{this.optionStatusMessage}}</span>\\n                                    </div>\\n                                    <div class=\\\"alert alert-danger\\\" style=\\\"text-align:center\\\" *ngIf=\\\"optionImageFail\\\">\\n                                        <span>{{this.optionStatusMessage}}</span>\\n                                    </div>\\n\\n                                </div>\\n                                <div class=\\\"tab-pane fade \\\" id=\\\"profile \\\" role=\\\"tabpanel \\\" aria-labelledby=\\\"profile-tab \\\">...</div>\\n\\n                            </div>\\n\\n\\n                        </div>\\n                        <div class=\\\"tab-pane fade \\\" id=\\\"profile \\\" role=\\\"tabpanel \\\" aria-labelledby=\\\"profile-tab \\\">...</div>\\n\\n                    </div>\\n                    <div *ngIf=\\\"bulkUpload\\\">\\n                        <div class=\\\"text-center\\\">\\n                            <div class=\\\"pt-4\\\">\\n                                <button class=\\\"btn btn-primary\\\" (click)=\\\"clickUpload()\\\">\\n                                        <i class=\\\"material-icons\\\">\\n                                            vertical_align_top\\n                                        </i>\\n                                        Choose File\\n                                    </button>\\n                                <small *ngIf=\\\"filesToUpload.length\\\" class=\\\"pl-5 blueColor\\\">{{filesToUpload[0].name}}</small>\\n                                <small *ngIf=\\\"filesToUpload.length\\\" class=\\\"pl-3 redCol\\\">{{getSize(filesToUpload[0].size)}}</small>\\n                                <input id=\\\"upload_file_btn\\\" [hidden]=\\\"true\\\" type=\\\"file\\\" (change)=\\\"uploadFile($event)\\\">\\n                            </div>\\n                            <div class=\\\"mt-5 mb-5\\\">\\n                                <button class=\\\"btn btn-success\\\" (click)=\\\"uploadBulkQues()\\\">\\n                                        Upload\\n                                    </button>\\n                            </div>\\n                            <div class=\\\"mt-4 mb-4\\\">\\n                                <button class=\\\"btn btn-link float-left\\\">\\n                                        <a [href]=\\\"templateLink\\\" download> Download Template for Questions Bulk Upload </a>\\n                                    </button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\"","\r\nimport { PipeTransform, Pipe } from \"@angular/core\";\r\n \r\n@Pipe({\r\n    name:'sectionFilter'\r\n})\r\nexport class SectionFilterPipe implements PipeTransform{\r\n\r\n    \r\n    transform(sectionsData :any[],serachBySection:String) {\r\n\r\n        if(!sectionsData || !serachBySection){\r\n            return sectionsData;\r\n        }\r\n        var arr:any[] =  sectionsData.filter(section =>{\r\n            return section.sectionName.toLowerCase().includes(serachBySection.toLowerCase())  })\r\n            // console.log(\"arr\",arr)\r\n            return arr;\r\n    }\r\n}\r\n","module.exports = \"  \\n.modal-lg{\\n    max-width: 1000px;\\n}\\n.card {\\n    padding: 0rem;\\n    border: none;\\n    margin-left: 2rem;\\n    box-shadow: 0px 1px 6px 2px #cec9c9;\\n}\\nhr {\\n    margin: 0rem -1.2rem;\\n    border-top: 2px solid rgba(4, 2, 2, 0.31);\\n}\\n.card-body {\\n    padding-bottom: 0rem;\\n}\\n.card-link {\\n    padding: 0.5rem;\\n    color: #3D70B2;\\n    text-decoration: none;\\n    background-color: transparent;\\n    font-size: 12px;\\n}\\n.card-body {\\n    font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n}\\n.card-title {\\n    font-size: 18px;\\n    font-weight: 700;\\n    color: #2C2C2C;\\n    padding-bottom: 0.4rem;\\n    margin-top: -1.5rem;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    width: 250px;\\n}\\n.card-subtitle {\\n    font-size: 14px;\\n    color: #707070!important;\\n    padding-bottom: 0.4rem;\\n}\\n.card-text {\\n    font-size: 12px;\\n    opacity: 0.7;\\n    color: #707070!important;\\n    margin: 2px 0px;\\n    \\n}\\n.col-md-4 {\\n    flex: 0 0 27.333333%;\\n    max-width: 33.333333%;\\n    margin-bottom: 1rem;\\n}\\nh4{\\n    padding: 1rem;\\n    color: #3D70B2;\\n    font-size: 24px;\\n    font-weight: 300;\\n}\\nhr{\\n    border-top: 1px solid #707070;\\n    margin-top: 0px;\\n}\\n/* The container */\\n.container {\\n    display: block;\\n    position: relative;\\n    padding-left: 35px;\\n    padding-top: 10px;\\n    margin-bottom: 12px;\\n    /* cursor: pointer; */\\n    font-size: 12px;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -ms-user-select: none;\\n    user-select: none;\\n}\\n/* Hide the browser's default checkbox */\\n.container input {\\n    position: absolute;\\n    opacity: 0;\\n    cursor: pointer;\\n    height: 0;\\n    width: 0;\\n}\\n.container-mand input {\\n    /* position: absolute;\\n    cursor: pointer;\\n    left: 15px;\\n    top: 12px; */\\n}\\n/* Create a custom checkbox */\\n.checkmark {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    height: 20px;\\n    width: 20px;\\n    margin-top: -3px;\\n    background-color: #fff;\\n    border: 1px solid black;\\n}\\n/* On mouse-over, add a grey background color */\\n.container:hover input~.checkmark {\\n    background-color: #fff;\\n    border: 1px solid black;\\n}\\n/* When the checkbox is checked, add a blue background */\\n.container input:checked~.checkmark {\\n    background-color: #fff;\\n    border: 1px solid black;\\n}\\n/* Create the checkmark/indicator (hidden when not checked) */\\n.checkmark:after {\\n    content: \\\"\\\";\\n    position: absolute;\\n    display: none;\\n}\\n/* Show the checkmark when checked */\\n.container input:checked~.checkmark:after {\\n    display: block;\\n}\\n/* Style the checkmark/indicator */\\n.container .checkmark:after {\\n    left: 6px;\\n    top: 0px;\\n    width: 7px;\\n    height: 15px;\\n    border: solid #000;\\n    border-width: 0 2px 2px 0;\\n    -webkit-transform: rotate(45deg);\\n    transform: rotate(45deg);\\n}\\n#ad {\\n    display: -ms-flexbox;\\n    -ms-flex-pack: center;\\n    -ms-flex-align: center;\\n    /* Firefox */\\n    display: -moz-box;\\n    -moz-box-pack: center;\\n    -moz-box-align: center;\\n    /* Safari, Opera, and Chrome */\\n    display: -webkit-box;\\n    -webkit-box-pack: center;\\n    -webkit-box-align: center;\\n}\\n.add_anoth_option{\\n    background: inherit;\\n    line-height: inherit;\\n    color: #007ad9;\\n    border-radius: inherit;\\n    box-shadow: inherit;\\n}\\n.close_icon{\\n    position: absolute;\\n    color: #f44336;\\n    right: -30px;\\n    z-index: 9999;\\n    top: 5px;\\n    transition-delay: 0.2s;\\n    visibility: hidden;\\n}\\n.close_icon i{\\n    font-size:18px;\\n    cursor: pointer;\\n    font-weight:bold;\\n}\\n#exampleModalCenter .close span{\\n    background-color: #41D6C3;\\n    color: #fff;\\n    padding: 2px 5px 0px 5px;\\n    border-radius: 21px;\\n}\\n#exampleModalCenter .close span i{\\n    font-size:20px;\\n}\\n#UploadedQuesModal .modal-dialog{\\n    max-width: 1000px;\\n}\\n.quesCountSize{\\n    font-size:20px;\\n}\\n.tot_count{\\n    color:#fc7b03\\n}\\n.succ_count{\\n    color:#20BF6B;\\n}\\n.exist_count{\\n    color:#f70800;\\n}\\n.red_col{\\n    color:#c0392b;\\n}\\n.green_col{\\n    color:#2ecc71;\\n}\\n.yellow_col{\\n    color:#f1c40f;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit } from '@angular/core';\nimport { AllServicesService } from '../../Services/AllServices/all-services.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BlockUI, NgBlockUI } from 'ng-block-ui';\nimport { NgForm } from '@angular/forms';\n \ndeclare var $;\n \n@Component({\n  selector: 'app-sections',\n  templateUrl: './sections.component.html',\n  styleUrls: ['./sections.component.css']\n})\nexport class SectionsComponent implements OnInit {\n\n  questionsSuccessCount:any;\n  questionsExistCount:any;\n  totalQuestionsCount:any;\n  public uploadedQues: object;\n\n  dropdownCateg = {\n    singleSelection: true,\n    text: \"Select Test Master\",\n    selectAllText: 'Select All',\n    unSelectAllText: 'UnSelect All',\n    enableSearchFilter: true,\n    classes: \"myclass custom-class\",\n    'showCheckbox':false\n  };\n  selectedItems:any[] = [];\n\n  dropdownCateg2 = {\n    singleSelection: true,\n    text: \"Select \",\n    showCheckbox:false,\n    enableSearchFilter: true,\n     \n  };\n\n  onDeSelectAll(event){\n    this.heirarchy=undefined;\n  }\n\n  onItemSelect(event){\n    // console.log(event.type)\n    this.obj=event;\n    this.service.getAll(\"testmanagement/getsubcategorylist?token=\" + localStorage.getItem('token') + \"&type=\" + event.type + \"&id=\" + event.id).subscribe(\n      (data) => {\n        if (data['statusCode'] == 1) {\n          // console.log(data)\n          this.heirarchy = data['categoryName'];\n          this.categoryId = data['categoryId'];\n        } else {\n\n        }\n      },\n      (error) => {\n        // console.log(error)\n      },\n      () => { }\n    );\n  }\n\n\n\n   selectedMaster:any[] = [];\n   dropdownListMaster = [];\n   testSectionList=[];\n\n\n   onClosed(event){\n// console.log(event);\n   }\n   onOpened(event){\n// console.log(event);\n  }\n\n  templateLink: any;\n  filesToUpload: Array<File> = [];\n  bulkUpload:boolean;\n  color:any = 'accent';\n  checked = true;\n  itemsAsObjects = [];\n  // items=[{value: '0', display: 'Angular'}, {value: '1', display: 'React'}];\n  onInputBlur(event){\n    if(event!=\"\"){\n      this.itemsAsObjects.push({instanceModelTagId: \"0\",instanceModelTagName: event});\n    }\n\n  }\n  onItemAdded(event){\n    // this.itemsAsObjects.forEach(element => {\n    //   element.id=0;\n    // });\n    // this.itemsAsObjects.push({instanceModelTagId: \"0\",instanceModelTagName: event})\n\n    // console.log(this.itemsAsObjects);\n    // console.log(event);\n  }\n  public optionObj: any = {\n    '0': {\n      'optionText': null,\n      'tempId': null\n    }\n  };\n  public optionList: any[] = [\"\"];\n\n  public heirarchy: String;\n  public categoryId;\n\n  routeId = 0;\n  constructor(private service: AllServicesService, private route: Router, private activeRoute: ActivatedRoute) {\n\n    this.activeRoute.params.subscribe(params => {\n      this.routeId = params['id'];\n    })\n  }\n  public sectionsData: any[];\n  serachBySection: String;\n  getAllSections() {\n    this.blockUI.start('Please Wait ...');\n    this.service.getAll(\"reports/questions/getsections?token=\" + localStorage.getItem('token')).subscribe(\n      (data) => {\n        // console.log(data)\n        if (data['statusCode'] == 1) {\n          this.sectionsData = data['sectionsList']\n        } else {\n\n        }\n      },\n      (error) => {\n        // console.log(error)\n        this.blockUI.stop();\n      },\n      () => {\n        this.blockUI.stop();\n       }\n    );\n  }\n  testSetup;\n  testSetupData;\n  getAllSectionsByTestId() {\n\n    this.service.getAll(\"testmanagement/testsetup/listofsectionsbytestsetupid?token=\" + localStorage.getItem('token') + \"&testSetupId=\" + this.routeId).subscribe(\n      (data) => {\n        \n        if (data['statusCode'] == 1) {\n          // console.log(data)\n          this.testSetupData=data;\n          this.sectionsData = data['sectionsList']\n          this.testSetup = data['testSetupTitle']\n\n          // console.log(this.sectionsData )\n        } else {\n\n        }\n      },\n      (error) => {\n        // console.log(error)\n      },\n      () => { }\n    );\n  }\n  public complexityArr: any[];\n  getComplexCity() {\n    this.service.getAll(\"reports/questions/getcomplexity?token=\" + localStorage.getItem('token')).subscribe(\n      (data) => {\n        if (data['statusCode'] == 1) {\n          this.complexityArr = data['compelxityTypeDTO'];\n        } else {\n\n        }\n      },\n      (error) => {\n        // console.log(error)\n      },\n      () => {\n\n      }\n    );\n  }\n  public questionTypeArr: any[];\n  getQuestionType() {\n    this.service.getAll(\"reports/questions/getquestiontype?token=\" + localStorage.getItem('token')).subscribe(\n      (data) => {\n        if (data['statusCode'] == 1) {\n          // console.log(data)\n          this.questionTypeArr = data['questionType'];\n        }\n      },\n      (error) => {\n        // console.log(error)\n      },\n      () => { }\n    );\n  }\n\n\n\n  public categoryAndSubCategoryArr: any[] = [];\n  public subCategoryArr: any[] = [];\n  getCategoryAndSubCategoryList() {\n\n                   var   url;\n                   if(this.flag){\n                    url=\"testmanagement/globalcategorylist?token=\" + localStorage.getItem('token')\n                   }\n                   else{\n                     url=\"testmanagement/testsetup/listoftestmasterrootconfigs?token=\"+localStorage.getItem('token')+\"&testSetupId=\"+this.routeId\n                   }\n                   \n\n    this.service.getAll(url).subscribe(\n      (data) => {\n        if (data['statusCode'] == 1) {\n          console.log(this.flag);\n          if(this.flag){\n            this.categoryAndSubCategoryArr = data['globalCategoryList']\n            console.log(this.categoryAndSubCategoryArr);\n          }\n          else{\n            this.categoryAndSubCategoryArr = data['testMasterConfigList']\n             \n            for(let i=0;i<data['testMasterConfigList'].length;i++){\n              this.testSectionList.push({\n                id: data['testMasterConfigList'][i].id,\n                itemName: data['testMasterConfigList'][i].name,\n                type:data['testMasterConfigList'][i].type\n              })\n            }\n          }\n          \n          // console.log(data)\n        }\n      },\n      (error) => {\n        // console.log(error)\n      },\n      () => {\n\n      }\n    )\n  }\n\n\n\n\n  public id: number;\n  public type: number;\n  public obj: {\n    \"type\": null,\n    \"id\": null\n  };\n  subcategoryId;\n  onSeletedCatAndSub(arr) {\n    // console.log(\"sss\"+arr)\n    this.obj = this.categoryAndSubCategoryArr[arr];\n    // // console.log(\"Type=\" + this.obj.type)\n    // // console.log(\"Id=\" + this.obj.id)\n    if (this.obj.type != 0 && this.obj.id != 0) {\n      this.service.getAll(\"testmanagement/getsubcategorylist?token=\" + localStorage.getItem('token') + \"&type=\" + this.obj.type + \"&id=\" + this.obj.id).subscribe(\n        (data) => {\n          if (data['statusCode'] == 1) {\n            // console.log(data)\n            this.heirarchy = data['categoryName'];\n            this.categoryId = data['categoryId'];\n          } else {\n\n          }\n        },\n        (error) => {\n          // console.log(error)\n        },\n        () => { }\n      );\n    }\n  }\n\n  flag = true;\n\n\n\n  ngOnInit() {\n    if (this.routeId) {\n      this.flag = false;\n      this.getAllSectionsByTestId();\n      $('.ng2-tag-input__text-input').focusout(function(){\n        // console.log(\"its working...........\");\n      });\n    } else {\n      // this.getAllSections();\n      this.getTestMasters();\n\n\n    }\n\n    var self = this;\n\n    $('#UploadedQuesModal').on('show.bs.modal', function () {\n      $(\"body\").css('overflow', 'hidden');\n      $('.modal').css('overflow', 'auto');\n    })\n    \n    $('#UploadedQuesModal').on(\"hidden.bs.modal\", function () {\n      $(\"body\").css('overflow', 'auto');\n      $('.modal').css('overflow', 'hidden');\n    });\n\n    $('#exampleModalCenter').on(\"show.bs.modal\", function () {\n      self.filesToUpload = [];\n      self.toggleBulk('1');\n    });\n\n    // console.log(this.routeId);\n    \n    \n      this.getComplexCity();\n      this.getQuestionType();\n      this.getCategoryAndSubCategoryList();\n  \n   \n\n   \n    \n\n  }\n\n\n  \n  public sectionId: any;\n  onSection(event, sectionId) {\n    if(this.sectionId != sectionId){\n        if(this.createdQuestion.length){\n          this.createdQuestion = []\n        }\n    }\n    this.sectionId = sectionId;\n  }\n\n  createdQuestion: any[] = [];\n\n  dropdownList = [];\n  // selectedItems = [];\n  dropdownSettings = {\n    singleSelection: true,\n    text: \"Select Sections\",\n    selectAllText: 'Select All',\n    unSelectAllText: 'UnSelect All',\n    enableSearchFilter: true,\n    classes: \"myclass custom-class\"\n  };\n\n  @BlockUI() blockUI: NgBlockUI;\n  mcaAns: any;\n  checkboxList: any[] = [];\n\n  questionImageSelectedFile = null;\n  onSelectedQuestionImage(event) {\n    this.questionImageSelectedFile = event.target.files[0];\n    // console.log(this.questionImageSelectedFile)\n  }\n\n  public questionOptionImageFile = null;\n  public optionImageSuccess: boolean = false;\n  public optionImageFail: boolean = false;\n  public optionStatusMessage: String;\n  public tempOptionImageId: Number;\n  onSelectedOptionImage(event, ind) {\n    this.optionImageSuccess = false;\n    this.optionImageFail = false;\n\n    this.questionOptionImageFile = event.target.files[0];\n    const formData = new FormData();\n    formData.append(\"files\", this.questionOptionImageFile);\n    formData.append('token', localStorage.getItem('token'));\n    // console.log(this.questionOptionImageFile)\n    this.service.postData(\"notification/image/option/add\", formData).subscribe(\n      (data) => {\n        alert(data['statusMessage']);\n        if (data['statusCode'] == 1) {\n          // this.tempOptionImageId=data['tempoptionImageId'];\n          this.optionObj[ind].tempId = data['tempoptionImageId'];\n          // console.log(this.tempOptionImageId)\n          this.optionImageSuccess = true;\n          this.optionStatusMessage = data['statusMessage']\n          setTimeout(\n            () => {\n              this.optionImageSuccess = false;\n            }, 3000\n          )\n        } else {\n          this.optionImageFail = true;\n          this.optionStatusMessage = data['statusMessage'];\n          setTimeout(\n            () => {\n              this.optionImageFail = false;\n            }, 3000\n          )\n        }\n\n      },\n      (error) => {\n        // console.log(error)\n      },\n      () => { }\n    );\n\n  }\n\n  public statusMessage: String;\n  public questionSuccesMessage: boolean = false;\n  public questionFailMessage: boolean = false;\n  addQuestion(myForm: NgForm) {\n    var questionCode =$('#txtarea').val();\n    // console.log(questionCode);\n    // console.log(this.checkboxList)\n    // console.log(this.mcaAns)\n    this.blockUI.start('Please Wait ...');\n    var data = myForm.value;\n    this.questionFailMessage = false;\n    this.questionSuccesMessage = false;\n    var formListOptions: any[] = [];\n    // options\n    for (var key in this.optionObj) {\n      if (this.optionObj.hasOwnProperty(key)) {\n        var optionFilled: number = 0;\n        if (this.optionObj[key]['optionText'] != null && this.optionObj[key]['optionText'].trim() != \"\") {\n          optionFilled = 1;\n        }\n        formListOptions.push({\n          \"tempId\": this.optionObj[key]['tempId'],\n          \"optionText\": this.optionObj[key]['optionText']\n        })\n      }\n    }\n\n\n    \n\n    // console.log(formListOptions)\n    // end\n    // if(!optionFilled){\n    //     this.service.errorAlert(\"Please Enter the Options\");\n    //     this.blockUI.stop();\n    //     return false\n    // }\n    const formData = new FormData();\n    formData.append(\"optionList\", JSON.stringify(formListOptions))\n    formData.append(\"sectionId\", this.sectionId)\n    formData.append(\"questionText\", data.questionText)\n    formData.append(\"questionImage\", this.questionImageSelectedFile)\n    formData.append(\"questionTypeId\", data.questionTypeId)\n    formData.append(\"complexityId\", data.complexityId)\n    formData.append(\"questionCode\", questionCode)\n    if(data.globaleShare){\n      formData.append(\"globaleShare\", 'yes')\n    }else{\n      formData.append(\"globaleShare\", 'no')\n    }\n    \n    if (data.questionTypeId == '1' || data.questionTypeId == '2') {\n      if (!optionFilled) {\n        this.service.errorAlert(\"Please Enter the Options\");\n        this.blockUI.stop();\n        return false\n      }\n    }\n    if (data.questionTypeId == \"1\") {\n      if (this.mcaAns == \"0\" || this.mcaAns) {\n        formData.append(\"answer\", this.mcaAns)\n      } else {\n        this.service.errorAlert(\"Please Select the Answer\");\n        this.blockUI.stop();\n        return false\n      }\n    } else if (data.questionTypeId == \"2\") {\n      if (this.checkboxList.length) {\n        var checkboxSting = this.checkboxList.sort((a, b) => {\n          return a - b\n        })\n      } else {\n        this.service.errorAlert(\"Please Select the Answer\");\n        this.blockUI.stop();\n        return false\n      }\n      formData.append(\"answer\", checkboxSting.join(','))\n      // console.log(checkboxSting)\n    } else {\n      formData.append(\"answer\", data.answer)\n    }\n\n    formData.append(\"token\", localStorage.getItem('token'))\n    if (data.isMandate) {\n      formData.append(\"isMandate\", \"1\")\n    } else {\n      formData.append(\"isMandate\", \"0\")\n    }\n    //formData.append(\"\")\n    // console.log(data)\n\n    this.service.postData(\"reports/questions/addquestion\", formData).subscribe(\n      (data) => {\n        // console.log(data['statusMessage'])\n        if (data['statusCode'] == 1) {\n          $('#exampleModalCenter').modal('hide')\n          this.mcaAns = null;\n          this.ngOnInit();\n          // get ques by id\n          this.service.getAll('reports/questions/getquestionsbyquestionid?token=' + localStorage.getItem('token') + '&questionid=' + data['questionId'])\n            .subscribe(res => {\n              this.blockUI.stop()\n              this.createdQuestion = res['questionsList'];\n            }, error => {\n\n            })\n          //  end\n          this.checkboxList= [];\n          myForm.reset();\n          delete this.optionObj;\n          this.selectedItems = []\n          this.optionList = [];\n          this.optionObj = {\n            '0': {\n              'optionText': null,\n              'tempId': 0\n            }\n          };\n          // this.questionSuccesMessage = true;\n          // this.statusMessage = data['statusMessage'];\n          // this.ngOnInit();\n          // setTimeout(() => {\n          //   this.questionSuccesMessage = false;\n          //   this.statusMessage = null\n          // }, 4000)\n          this.service.successAlert(data['statusMessage'])\n          if(this.routeId){\n            this.updateSections();\n\n          }\n        } else {\n          this.blockUI.stop();\n          this.questionFailMessage = true;\n          this.service.errorAlert(data['statusMessage']);\n          // this.statusMessage = data['statusMessage']\n          setTimeout(() => {\n            this.questionFailMessage = false;\n            // this.statusMessage = null\n          }, 3000)\n        }\n      },\n      (error) => {\n        // console.log(error)\n        this.blockUI.stop()\n      },\n      () => { \n        // $('#exampleModalCenter').modal('toggle');\n        // this.ngOnInit();\n      }\n    );\n  }\n  testInstanceName;\n  createTestInstance(){\n    this.blockUI.start('Loading....')\n    this.itemsAsObjects.forEach(element => {\n      element.instanceModelTagId=0;\n    });\n  // console.log(this.testInstanceName);\n    this.service.postData(\"testmanagement/testsetup/createtestinstance?token=\" + localStorage.getItem('token'),{\n      \"instanceAliasTitle\": this.testSetupData.testInstanceAliasName,\n      \"instanceId\": 0,\n      \"instanceTitle\": this.testInstanceName,\n      \"listOfTestSections\":this.sectionsData,\n      \"instanceTags\":this.itemsAsObjects,\n      \"testId\": this.routeId\n    }).subscribe(\n      data => {\n        // console.log(data);\n        if(data[\"statusCode\"]==1){\n          this.route.navigate(['/test-setup/instance',data['testInstanceId']])\n        }else{\n          this.service.errorAlert(data[\"statusMessage\"]);\n        }\n      },\n      error => {\n        // console.log(error);\n        this.blockUI.stop()\n      },\n      () => {\n        this.blockUI.stop()\n      });\n  }\n  selectSection(index){\n   \n    if(this.sectionsData[index].isSectionActive==0){\n     this.sectionsData[index].isSectionActive=1;\n    }\n     else{\n       this.sectionsData[index].isSectionActive=0;\n     }\n    \n    //  var temp =0\n    //  this.sectionsData.forEach(element => {\n       \n    //    if(element.isSectionActive==1){\n    //      temp+=element.totalNumberOfQuestions\n    //    }\n      // this.sectionsData.totalNumberOfAllSectionQuestions=temp;\n\n    //  });\n   }\n  onAccordion() {\n    document.getElementById('txtarea').addEventListener('keyup', function () {\n      this.style.overflow = 'hidden';\n      this.style.height = '0';\n      this.style.height = this.scrollHeight + 'px';\n    }, false);\n\n  }\n\n  onCode() {\n    \n    document.getElementById('txtarea2').addEventListener('keyup', function () {\n      // console.log(\"hi\");\n      this.style.overflow = 'hidden';\n      this.style.height = '0';\n      this.style.height = this.scrollHeight + 'px';\n       \n    }, false);\n\n  }\n\n  questionImg() {\n    document.getElementById('imageId').click();\n  }\n\n  optionImg(i) {\n    document.getElementById('optionImageId' + i).click();\n  }\n\n  incOptionList() {\n    this.optionList.push(\"\")\n    this.optionObj[this.optionList.length - 1] = {\n      'optionText': null,\n      'tempId': 0\n    }\n\n    // console.log(this.optionObj)\n  }\n\n  public questionType: any;\n  setType(qType) {\n    if (qType != 'Select Type') {\n      this.optionList = [\"\"];\n      this.optionObj = {\n        '0': {\n          'optionText': null,\n          'tempId': 0\n        }\n      };\n      this.questionType = qType;\n    }\n  }\n\n  checkboxAns(i) {\n    if (!this.checkboxList.includes(i)) {\n      this.checkboxList.push(i)\n    } else {\n      var ind = this.checkboxList.indexOf(i);\n      this.checkboxList.splice(ind, 1)\n    }\n  }\n  setMcqAns(ind) {\n    this.mcaAns = ind;\n  }\n\n  public seactionSuccessMessage: boolean = false;\n  public seactionFailMessage: boolean = false;\n  public sectionStatusMessage: String;\n\n  addSectionByTestInsatanceId(data){\n    // console.log(data);\n\n    const formData = new FormData();\n    formData.append(\"id\", this.obj.id);\n    formData.append(\"type\", this.obj.type);\n    formData.append(\"testSectionName\", data.seactionName);\n    formData.append(\"isMasterSection\",data.addToMaster ? '1' : '0' );\n\n    formData.append(\"testSetupId\", ''+this.routeId);\n    \n    \n\n\n\n    formData.append(\"token\", localStorage.getItem('token'))\n    \n    this.service.postData(\"testmanagement/testsetup/createinstancesection\", formData).subscribe(\n      data=>{\n        // console.log(data);\n        if(data['statusCode']==1){\n          this.sectionsData.push(data['testInstanceSection']);\n          this.service.successAlert(data['statusMessage']);\n          $('#section_input').val('');\n          $('#sectionModal').modal('toggle');\n          \n          this.selectedItems=[];\n        }else{\n          this.service.errorAlert(data['statusMessage']);\n          \n        }\n        \n      },\n      error=>{\n        // console.log(error);\n      },\n      ()=>{\n\n      }\n    );\n  }\n\n\n\n  addSection(data) {\n    this.blockUI.start('Please Wait , We Are Creating Section ...')\n    this.seactionSuccessMessage = false;\n    this.seactionFailMessage = false;\n    // console.log(data)\n    const formData = new FormData();\n    if (this.obj.type != 0) {\n      this.type = this.obj.type;\n      this.subcategoryId = this.obj.id\n      if (this.type == 2) {\n        formData.append(\"testCategoryId\", this.categoryId)\n        formData.append(\"testSubCategoryId\", this.subcategoryId)\n      } if (this.type == 1) {\n        this.subcategoryId = 0;\n        formData.append(\"testCategoryId\", this.categoryId)\n        formData.append(\"testSubCategoryId\", this.subcategoryId)\n      }\n    }\n    formData.append(\"testSectionName\", data.seactionName);\n    formData.append(\"token\", localStorage.getItem('token'))\n    \n    this.service.postData(\"testmanagement/createsection\", formData).subscribe(\n      (data) => {\n        if (data['statusCode'] == 1) {\n          this.blockUI.stop();\n          this.seactionSuccessMessage = true;\n          this.sectionStatusMessage = data['statusMessage'];\n          // this.route.navigate(['sections'])\n          setTimeout(() => {\n            this.seactionSuccessMessage = false;\n            $('#myModal').modal('hide');\n            this.ngOnInit();\n          }, 2000)\n          // this.ngOnInit();\n        } else {\n          this.blockUI.stop();\n          this.seactionFailMessage = true;\n          this.sectionStatusMessage = data['statusMessage'];\n          setTimeout(() => {\n            this.seactionFailMessage = false;\n          }, 3000)\n        }\n      },\n      (error) => {\n        // console.log(error)\n        this.blockUI.stop();\n      },\n      () => { \n        \n      }\n    );\n  }\n\n  toggleBulk(tab){\n    if(tab == '1'){\n      this.bulkUpload = false;\n    }else if(tab == '2'){\n      this.bulkUpload = true;\n    }\n  }\n  clickUpload() {\n    document.getElementById('upload_file_btn').click();\n  }\n  uploadFile(fileInput: any) {\n    this.filesToUpload = <Array<File>>fileInput.target.files;\n    // console.log(this.filesToUpload)\n  }\n\n  uploadBulkQues() {\n    this.blockUI.start('Please Wait We Are Uploading ')\n    var formData: any = new FormData();\n    const files: Array<File> = this.filesToUpload;\n    if (this.filesToUpload.length == 0) {\n      this.blockUI.stop()\n      this.service.errorAlert(\"No file selected!\");\n      return\n    }\n    // console.log(files[0])\n    formData.append(\"files\", files[0], files[0]['name']);\n    formData.append(\"token\", localStorage.getItem('token'));\n    formData.append(\"sectionid\", this.sectionId);\n\n    if(this.service.cfs){\n \n      var cfsformData: any = new FormData();\n     // cfsformData.append(\"access-token\",this.service.secretKey);\n      cfsformData.append(\"files\",files[0]);\n      this.service.postDataCfs(cfsformData).subscribe(\n        res=>{\n          // console.log(res);\n          if(res.status==200){\n            formData.append(\"cfsId\",res.body[0].id);\n            formData.append(\"cfsViewURL\",res.body[0].selfLink.view);\n            formData.append(\"cfsDownloadURL\",res.body[0].selfLink.download);\n\n            this.service.postData('notification/cfs/bulkquestions', formData)\n      .subscribe(res => {\n        if (!res['statusCode']) {\n          this.blockUI.stop()\n          this.service.errorAlert(res['statusMessage']);\n        } else {\n          $('#exampleModalCenter').modal('toggle');\n          this.blockUI.stop()\n          this.filesToUpload = []\n          this.ngOnInit();\n          \n          this.uploadedQues = res;\n\n          this.filesToUpload = []\n          this.questionsSuccessCount=res['questionsSuccessCount'];\n          this.questionsExistCount=res['questionsExistCount'];\n          this.totalQuestionsCount=res['totalQuestionsCount'];\n          $('#UploadedQuesModal').modal('show');\n\n          if(this.routeId){\n            this.updateSections();\n\n          }\n\n          // document.getElementById('close_bul_btn').click()\n          this.service.successAlert(res['statusMessage']);\n        }\n\n      }, error => {\n        this.blockUI.stop()\n      },\n      () => { \n        // $('#exampleModalCenter').modal('toggle');\n        //this.ngOnInit();\n      })\n\n          }else{\n            this.service.errorAlert(files[0].name+\"Upload Failed\");\n          }\n\n        },\n        error=>{\n          // console.log(error);\n        },\n        ()=>{\n\n        }\n      );\n\n\n      \n\n    }else{\n\n      this.service.postData('notification/upload/bulkquestions', formData)\n      .subscribe(res => {\n        if (!res['statusCode']) {\n          this.blockUI.stop()\n          this.service.errorAlert(res['statusMessage']);\n        } else {\n          $('#exampleModalCenter').modal('toggle');\n          this.blockUI.stop()\n          this.filesToUpload = []\n          this.ngOnInit();\n          this.uploadedQues = res;\n\n          this.filesToUpload = []\n          this.questionsSuccessCount=res['questionsSuccessCount'];\n          this.questionsExistCount=res['questionsExistCount'];\n          this.totalQuestionsCount=res['totalQuestionsCount'];\n          $('#UploadedQuesModal').modal('show');\n         \n          if(this.routeId){\n            this.updateSections();\n\n          }\n\n          // document.getElementById('close_bul_btn').click()\n          this.service.successAlert(res['statusMessage']);\n        }\n\n      }, error => {\n        this.blockUI.stop()\n      },\n      () => { \n        // $('#exampleModalCenter').modal('toggle');\n        //this.ngOnInit();\n      })\n    }\n    \n  }\n\n  getSize(bytes, decimals = 2) {\n    if (bytes === 0) return '0 Bytes';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n\n  getTemplateLink() {\n\n    \n    if(this.service.cfs){\n     this.templateLink =this.service.cfsUrl + this.service.questionTemplateUrl;\n    }else{\n     this.templateLink = this.service.url + 'notification/template/download?filetype=question&fileId=1&token=' + localStorage.getItem('token')\n    }\n \n   }\n \n\n  \n deleteOption(i) {\n  if (this.optionList.length > 1) {\n  this.optionList.splice(i, 1)\n  delete this.optionObj[i]\n \n  var alignObj = {}\n  var objList = Object.keys(this.optionObj);\n  for(let i=0;i<objList.length;i++){\n  alignObj[i] = this.optionObj[objList[i]]\n  }\n  this.optionObj = alignObj;\n \n  }\n \n  }\n   \n    showDelete(i) {\n    $('#close_' + i).css('visibility', 'visible')\n    }\n   \n    hideDelete(i) {\n    $('#close_' + i).css('visibility', 'hidden')\n    }\n\n    onMasterSelect(event){\n      this.service.getAll('reports/questions/getsectionsbymaterid?token='+localStorage.getItem('token')+'&masterId='+event.id)\n        .subscribe(res=>{\n          this.sectionsData = res['sectionsList']\n        },error=>{\n  \n        })\n    }\n    onRemoveAll(){\n      // alert(\"hi\")\n      // var esc = $.Event(\"keydown\", { keyCode: 27 });\n      // $(\"body\").trigger(esc);\n      // // $.event.trigger({ type : 'keypress', which : 27 });\n      document.getElementById('mul_close').click();\n        // this.getAllSections();\n        this.sectionsData=[];\n    }\n    clickDiv(){\n      document.getElementById('mul_close').click();\n    }\n  \n    getTestMasters(){\n      this.dropdownListMaster = []\n      this.service.getAll('testmanagement/testsetup/listoftestsetups?token='+localStorage.getItem('token'))\n        .subscribe(res=>{\n          if(res['statusCode']=='1'){\n            for(let i=0;i<res['listOfTestSetups'].length;i++){\n              this.dropdownListMaster.push({\n                id: res['listOfTestSetups'][i].testSetupId,\n                itemName: res['listOfTestSetups'][i].testSetupTitle\n              })\n            }\n\n            if(this.dropdownListMaster.length){\n              this.selectedMaster[0] = this.dropdownListMaster[0];              \n               this.onMasterSelect(this.selectedMaster[0]);\n             }\n\n            \n          }else{\n            this.service.errorAlert(res['statusMessage'])\n            \n          }\n         \n        },error=>{\n  \n        })\n      \n    }\n\n\n  updateSections(){\n    this.service.postData(\"testmanagement/testsetup/instancetempsections?token=\" + localStorage.getItem('token'),this.sectionsData\n   ).subscribe(\n      data=>{\n        this.sectionsData=data['sectionsList'];\n      },\n      error=>{\n\n      },\n      ()=>{\n\n      }\n    );\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\n//import { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SectionsComponent } from './../../Components/sections/sections.component';\nimport {SectionFilterPipe} from './../../Components/sections/section-filter.pipe';\nimport { BlockUIModule } from 'ng-block-ui';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {PopoverModule} from \"ngx-smart-popover\";\nimport { TagInputModule } from 'ngx-chips';\n//import { BrowserAnimationsModule } from '@angular/platform-browser/animations'; // this is needed!\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nconst routes: Routes = [\n  {\n  path : \"\",\n  component : SectionsComponent\n  }\n  \n];\n\n@NgModule({\n  declarations:[SectionsComponent,\n    SectionFilterPipe],\n  imports: [RouterModule.forChild(routes),CommonModule,TagInputModule, \n    FormsModule,ReactiveFormsModule,BlockUIModule.forRoot(),\n    AngularMultiSelectModule,PopoverModule,MatCheckboxModule,MatRadioModule,MatSlideToggleModule],\n  exports: [RouterModule]\n})\nexport class SectionsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SectionsRoutingModule } from './sections-routing.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    \n    SectionsRoutingModule\n  ]\n})\nexport class SectionsModule { }\n"],"sourceRoot":""}