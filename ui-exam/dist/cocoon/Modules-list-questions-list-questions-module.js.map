{"version":3,"sources":["webpack:///./src/app/Components/list-questions/list-questions.component.html","webpack:///./src/app/Components/list-questions/list-questions.component.css","webpack:///./src/app/Components/list-questions/list-questions.component.ts","webpack:///./src/app/Modules/list-questions/list-questions-routing.module.ts","webpack:///./src/app/Modules/list-questions/list-questions.module.ts","webpack:///./src/app/Pipes/question-filter.pipe.ts"],"names":[],"mappings":"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","file":"Modules-list-questions-list-questions-module.js","sourcesContent":["module.exports = \"<block-ui>\\n\\n</block-ui>\\n\\n<div class=\\\"ques_tabs p-4\\\">\\n    <div class=\\\"col-sm-12 text-right\\\">\\n        <span class=\\\"pr-4\\\">{{tenantName | titlecase}} Questions</span>\\n        <mat-slide-toggle class=\\\"example-margin\\\" [color]=\\\"color\\\" [checked]=\\\"checked\\\" (change)=\\\"onLinkClick($event)\\\">\\n        </mat-slide-toggle>\\n        <span class=\\\"pl-4\\\">Global Questions</span>\\n        <hr>\\n    </div>\\n    <div *ngIf=\\\"!isGlobal\\\">\\n        <button class=\\\"btn btn-primary mr-4\\\" data-toggle=\\\"modal\\n                \\\" data-target=\\\"#exampleModalCenter\\\" id=\\\"edit_ques\\\">\\n            <i class=\\\"material-icons\\\">\\n                add\\n            </i>\\n            Add Questions</button>\\n        <!-- <div class=\\\"row m-0 add_ques_Sec pt-4 \\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                        <input class=\\\"form-control search_ques\\\" [(ngModel)]=\\\"globalSearchKey\\\" placeholder=\\\"Search By Category\\\" (input)=\\\"pickGlobalQUestions(globalSearchKey)\\\">\\n                    </div>\\n                    <div class=\\\"col-sm-6 text-right\\\">\\n                        <button class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#globQuesModal\\\" *ngIf=\\\"importQuesArr.length\\\">Import</button>\\n                    </div>\\n                </div> -->\\n\\n        <div class=\\\"row m-0 add_ques_Sec pt-4 \\\">\\n            <div class=\\\"col-sm-8\\\">\\n                <!-- <h4>Categories</h4> -->\\n                <h4 *ngFor=\\\"let catPath of categoryPath;let i = index\\\" class=\\\"cat_h4\\\">\\n                    <span class=\\\"catpath_arrow\\\" *ngIf=\\\"i!=0\\\">\\n                        <i class=\\\"material-icons\\\">\\n                            chevron_right\\n                        </i>\\n                    </span>\\n                    <span *ngIf=\\\"catPath && catPath.testCategoryName\\\" (click)=\\\"gotoPath(catPath,i)\\\" class=\\\"pointer\\\">{{catPath.testCategoryName}}</span>\\n                    <span *ngIf=\\\"catPath && catPath.name\\\" (click)=\\\"gotoPath(catPath,i)\\\" class=\\\"pointer\\\">{{catPath.name}}</span>\\n\\n                </h4>\\n            </div>\\n            <div class=\\\"col-sm-4\\\">\\n\\n                <button class=\\\"btn btn-primary mr-4\\\" id=\\\"add_ques_modal\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\">\\n                    <i class=\\\"material-icons\\\">\\n                        add\\n                    </i>\\n                    Add Questions</button>\\n\\n                <button class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#bulkUploadModal\\\" (click)=\\\"getTemplateLink()\\\">\\n                    <i class=\\\"material-icons\\\">\\n                        vertical_align_top\\n                    </i>\\n                    Bulk Upload</button>\\n\\n\\n\\n                <!-- <form>\\n                            <div class=\\\"input-group global_search\\\">\\n                                <input class=\\\"form-control search_ques\\\" [(ngModel)]=\\\"globalSearchKey\\\" placeholder=\\\"Search By Category\\\" (input)=\\\"pickGlobalQUestions(globalSearchKey)\\\"\\n                                    [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                <span class=\\\"input-group-addon\\\">\\n                                    <i class=\\\"material-icons\\\">\\n                                        search\\n                                    </i>\\n                                </span>\\n                            </div>\\n                        </form> -->\\n            </div>\\n\\n            <div class=\\\"col-sm-12 mt-4 mb-4\\\">\\n                <div class=\\\"alphabets_cat\\\">\\n                    <span *ngFor=\\\"let alpha of alphaArr\\\" [ngClass]=\\\"{'alpha_letters':true,'alpha_all':alpha=='All'}\\\" (click)=\\\"getByAlpha(alpha)\\\">\\n                        <h5>{{alpha}}</h5>\\n                    </span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"col-sm-12 mt-4 mb-4 categ_ques_tbl\\\" *ngIf=\\\"!isQues\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <tr *ngIf=\\\"allCategory && allCategory['listOfTestCategory']\\\">\\n                            <th>Category Title</th>\\n                            <th>Created On</th>\\n                            <!-- <th>Owner</th> -->\\n                        </tr>\\n                        <tr *ngIf=\\\"(allCategory && allCategory['listOfTestSubCategory'])\\\">\\n                            <!-- <th></th> -->\\n                            <th>Title</th>\\n                            <th>Type</th>\\n                            <th>Hierarchy</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody *ngIf=\\\"allCategory && allCategory['listOfTestCategory'] && allCategory['listOfTestCategory'].length\\\">\\n                        <tr *ngFor=\\\"let cat of allCategory['listOfTestCategory'] | paginate: { itemsPerPage: 10, currentPage: p_two,id: cat_page_id};let i=index\\\" (click)=\\\"getSubCategories(cat)\\\">\\n                            <td>{{cat.testCategoryName}}</td>\\n                            <td>\\n                                <span *ngIf=\\\"cat.createdOn != 'null'\\\">{{cat.createdOn | date:'medium'}}</span>\\n                                <span *ngIf=\\\"!cat.createdOn\\\">-</span>\\n                                <span *ngIf=\\\"cat.createdOn == 'null'\\\">-</span>\\n                            </td>\\n                            <!-- <td>{{cat.testCategoryOwner}}</td> -->\\n                        </tr>\\n                    </tbody>\\n                    <tbody *ngIf=\\\"(allCategory && allCategory['listOfTestCategory'] && !allCategory['listOfTestCategory'].length)\\\">\\n                        <tr>\\n                            <td colspan=\\\"3\\\" class=\\\"errorTxt text-center\\\">{{allCategory.statusMessage}}</td>\\n                        </tr>\\n                    </tbody>\\n                    <tbody *ngIf=\\\"allCategory && allCategory['listOfTestSubCategory'] && allCategory['listOfTestSubCategory'].length\\\">\\n                        <tr *ngFor=\\\"let cat of allCategory['listOfTestSubCategory'] | paginate: { itemsPerPage: 10, currentPage: p_three,id:subcat_page_id};let i=index\\\" (click)=\\\"getSubCategoriesBy(cat)\\\" [ngClass]=\\\"{'sec_tr':cat.type == '3'}\\\">\\n                            <!-- <td>\\n                                        <span class=\\\"sub_cat_icon\\\" *ngIf=\\\"cat.type=='2'\\\">\\n                                            <i class=\\\"material-icons\\\">\\n                                                folder\\n                                            </i>\\n                                        </span>\\n                                        <span class=\\\"sec_icon\\\" *ngIf=\\\"cat.type=='3'\\\">\\n                                            <i class=\\\"material-icons\\\">\\n                                                folder\\n                                            </i>\\n                                        </span>\\n                                    </td> -->\\n                            <td>\\n                                <span class=\\\"sub_cat_icon\\\" *ngIf=\\\"cat.type=='2'\\\">\\n                                    <i class=\\\"material-icons\\\">\\n                                        folder\\n                                    </i>\\n                                </span>\\n                                <span class=\\\"sec_icon\\\" *ngIf=\\\"cat.type=='3'\\\">\\n                                    <i class=\\\"material-icons\\\">\\n                                        folder\\n                                    </i>\\n                                </span> {{cat.name}}\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"cat.type == '2'\\\">Sub-Category</span>\\n                                <span *ngIf=\\\"cat.type == '3'\\\"> Section</span>\\n                                <span *ngIf=\\\"cat.type == '3'\\\" class=\\\"badge badge-success ml-3\\\" [popoverOnHover]=\\\"true\\\" [popover]=\\\"questionCount\\\">{{cat.questionsCount}}</span>\\n\\n                                <popover-content #questionCount title=\\\"\\\" placement=\\\"right\\\" [animation]=\\\"true\\\" style=\\\"box-shadow: 10px 10px 5px #aaaaaa;\\\">\\n                                    <span *ngIf=\\\"cat.type == '3'\\\" style=\\\"color: #646363;\\\">Total Questions - {{cat.questionsCount}}</span>\\n\\n                                </popover-content>\\n                            </td>\\n                            <td>{{cat.heirarchy}}</td>\\n                        </tr>\\n                    </tbody>\\n                    <tbody *ngIf=\\\"(allCategory && allCategory['listOfTestSubCategory'] && !allCategory['listOfTestSubCategory'].length)\\\">\\n                        <tr>\\n                            <td colspan=\\\"3\\\" class=\\\"errorTxt text-center\\\">Categories Not Found</td>\\n                        </tr>\\n                    </tbody>\\n                    <!-- <tbody *ngIf=\\\"allCategory && allCategory['listOfAllSections'] && allCategory['listOfAllSections'].length\\\">\\n                                <tr *ngFor=\\\"let sec of allCategory['listOfAllSections']\\\" (click)=\\\"getSubCategoriesBy(cat)\\\">\\n                                    <td>\\n                                        <span class=\\\"sec_icon\\\">\\n                                            <i class=\\\"material-icons\\\">\\n                                                folder\\n                                            </i>\\n                                        </span>\\n                                    </td>\\n                                    <td>{{sec.testSectionName}}</td>\\n                                    <td>{{sec.sectionHeirarchy}}</td>\\n                                </tr>\\n                            </tbody> -->\\n                </table>\\n\\n                <div class=\\\"ques_sec_div col-sm-12 text-center\\\" *ngIf=\\\"allCategory && allCategory['listOfTestCategory'] && allCategory['listOfTestCategory'].length\\\">\\n                    <pagination-controls (pageChange)=\\\"p_two = $event\\\" previousLabel=\\\"<\\\" nextLabel=\\\">\\\" [id]=\\\"cat_page_id\\\"></pagination-controls>\\n                </div>\\n                <div class=\\\"ques_sec_div col-sm-12 text-center\\\" *ngIf=\\\"allCategory && allCategory['listOfTestSubCategory'] && allCategory['listOfTestSubCategory'].length\\\">\\n                    <pagination-controls (pageChange)=\\\"p_three = $event\\\" previousLabel=\\\"<\\\" nextLabel=\\\">\\\" [id]=\\\"subcat_page_id\\\"></pagination-controls>\\n                </div>\\n\\n            </div>\\n\\n        </div>\\n\\n        <div class=\\\"row mr-3 ml-3 mt-4 mb-4\\\" *ngIf=\\\"isQues\\\">\\n            <div class=\\\"col-sm-12\\\">\\n                <h5 class=\\\"text-center ques_sec_name\\\">\\n                    <!-- <span *ngIf=\\\"catPath && catPath.testCategoryName\\\" (click)=\\\"gotoPath(catPath,i)\\\" class=\\\"pointer\\\">{{catPath.testCategoryName}}</span> -->\\n                    <span *ngIf=\\\"categoryPath.length\\\">{{categoryPath[categoryPath.length-1].name}}</span>\\n\\n                </h5>\\n                <hr class=\\\"ques_sec_hr\\\" *ngIf=\\\"categoryPath.length\\\">\\n            </div>\\n            <!-- <div class=\\\"col-sm-2 text-right p-0\\\">\\n                        <button class=\\\"btn btn-primary import_ques_btn\\\" data-toggle=\\\"modal\\\" data-target=\\\"#globQuesModal\\\" [disabled]=\\\"!importQuesArr.length\\\">Import</button>\\n                    </div> -->\\n        </div>\\n\\n        <div class=\\\"row boxShadow table_div mr-3 ml-3 mt-4 mb-4\\\" *ngIf=\\\"isQues\\\">\\n\\n            <!-- <table class=\\\"table\\\">\\n                        <thead>\\n                            <tr class=\\\"tbl_hdng\\\">\\n                                <th class=\\\"border-0\\\">S.No</th>\\n                                <th class=\\\"border-0\\\">Questions</th>\\n                                <th class=\\\"border-0\\\">Category</th>\\n                                <th class=\\\"border-0\\\">Select</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody *ngIf=\\\"globalQues && globalQues['listOfQuestions'].length\\\">\\n                            <tr *ngFor=\\\"let ques of globalQues['listOfQuestions'];let i=index\\\" class=\\\"pointer glob_ques\\\" id=\\\"glob_ques_id{{i}}\\\" (mouseover)=\\\"setPos(i,ques)\\\">\\n                                <td class=\\\"\\\">\\n                                    <span>{{i+1}}</span>\\n                                </td>\\n    \\n    \\n                                <td *ngIf=\\\"ques.questionTitle.length < 84\\\" title=\\\"{{ques.questionTitle}}\\\">{{ques.questionTitle}}</td>\\n                                <td *ngIf=\\\"ques.questionTitle.length >= 84\\\" title=\\\"{{ques.questionTitle}}\\\">{{ques.questionTitle | slice:0:84}} ...</td>\\n                                <td *ngIf=\\\"ques.hierarchy?.length < 12 && ques.hierarchy!='null'\\\" title=\\\"{{ques.hierarchy}}\\\" class=\\\"\\\">{{ques.hierarchy}}</td>\\n                                <td *ngIf=\\\"ques.hierarchy?.length < 12 && ques.hierarchy=='null'\\\" title=\\\"{{ques.hierarchy}}\\\" class=\\\"\\\">-</td>\\n                                <td *ngIf=\\\"ques.hierarchy?.length >= 12\\\" title=\\\"{{ques.hierarchy}}\\\" class=\\\"\\\">{{ques.hierarchy | slice:0:12}} ...</td>\\n    \\n                                <td>\\n                                    <mat-checkbox [color]=\\\"color\\\" class=\\\"example-margin\\\" [(ngModel)]=\\\"impQues[i]\\\" (click)=\\\"importQues(ques,impQues[i])\\\"></mat-checkbox>\\n                                </td>\\n                                <div id=\\\"menu_content\\\">\\n                                    <table class=\\\"table\\\" *ngIf=\\\"hoverGlobQues\\\">\\n                                        <tr>\\n                                            <th>Question</th>\\n                                            <th>Category</th>\\n                                            <th>Options</th>\\n                                            <th>Answer</th>\\n                                        </tr>\\n                                        <tr>\\n                                            <td class=\\\"maxWidth240\\\">{{ hoverGlobQues.questionTitle}}</td>\\n                                            <td class=\\\"maxWidth320\\\">{{hoverGlobQues.hierarchy}}</td>\\n                                            <td>\\n                                                <p *ngFor=\\\"let opt of hoverGlobQues?.optionsList\\\">{{opt.optionText}}</p>\\n                                            </td>\\n                                            <td>\\n                                                <div *ngFor=\\\"let opt of hoverGlobQues?.optionsList\\\">\\n                                                    <p *ngIf=\\\"opt.answer\\\"> {{opt.optionText}}</p>\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <button class=\\\"btn btn-link\\\" (click)=\\\"editQuestion(hoverGlobQues)\\\">Edit</button>\\n                                            </td>\\n    \\n                                        </tr>\\n                                    </table>\\n                                </div>\\n                            </tr>\\n                        </tbody>\\n                        <tbody *ngIf=\\\"!globalQues ||( globalQues && !globalQues['listOfQuestions'].length)\\\">\\n                            <tr class=\\\"errorTxt text-center\\\">\\n                                <td colspan=\\\"4\\\">Questions Not Found</td>\\n                            </tr>\\n                        </tbody>\\n                    </table> -->\\n\\n            <table class=\\\"table sec_ques text-center\\\">\\n                <thead>\\n                    <tr class=\\\"tbl_hdng\\\">\\n                        <th class=\\\"border-0\\\">S.No</th>\\n                        <th class=\\\"border-0\\\">Question Title</th>\\n                        <th class=\\\"border-0\\\">Type</th>\\n                        <th class=\\\"border-0\\\">Complexity</th>\\n                        <!-- <th class=\\\"border-0 sel_all_che\\\">\\n                                    <mat-checkbox [color]=\\\"color\\\" class=\\\"example-margin\\\" [(ngModel)]=\\\"impAllQues\\\" (click)=\\\"importAllQues(impAllQues)\\\" [checked]=\\\"checkAllImported()\\\">Select All</mat-checkbox>\\n                                </th> -->\\n\\n                    </tr>\\n                </thead>\\n\\n                <tbody *ngIf=\\\"globalQues && globalQues['questionsList'].length\\\">\\n                    <tr *ngFor=\\\"let ques of globalQues['questionsList']  | paginate: { itemsPerPage: 10,currentPage: p_one,id: sec_ques_local};let i=index\\\" class=\\\"pointer glob_ques\\\" id=\\\"glob_ques_id{{i}}\\\" data-toggle=\\\"modal\\\" data-target=\\\"#quesViewModal\\\" (click)=\\\"viewQuestion(ques)\\\">\\n                        <td>\\n                            <span class=\\\"ques_cunt_circle\\\" *ngIf=\\\"p_one==1\\\">{{i+1}}</span>\\n                            <span class=\\\"ques_cunt_circle\\\" *ngIf=\\\"p_one>1\\\">{{(p_one-1)*10+i+1}}</span>\\n                        </td>\\n\\n\\n\\n                        <td *ngIf=\\\"ques.qustionText.length < 50\\\" title=\\\"{{ques.qustionText}}\\\">{{ques.qustionText}}</td>\\n                        <td *ngIf=\\\"ques.qustionText.length >= 50\\\" title=\\\"{{ques.qustionText}}\\\">{{ques.qustionText | slice:0:50}} ...</td>\\n\\n                        <td title=\\\"{{ques.questionType}}\\\">{{ques.questionType}}</td>\\n                        <td title=\\\"{{ques.questionComplexityType}}\\\">{{ques.questionComplexityType}}</td>\\n                        <!-- <td class=\\\"\\\">\\n                                    <mat-checkbox [color]=\\\"color\\\" class=\\\"example-margin\\\" (change)=\\\"importQues(ques,impQues[i],$event)\\\" (click)=\\\"stopProp($event)\\\"\\n                                        [checked]=\\\"checkImport(ques)\\\"></mat-checkbox>\\n    \\n                                </td> -->\\n                        <!-- <div id=\\\"menu_content\\\">\\n                                    <table class=\\\"table\\\" *ngIf=\\\"hoverGlobQues\\\">\\n                                        <tr>\\n                                            <th>Question</th>\\n                                            <th>Category</th>\\n                                            <th>Options</th>\\n                                            <th>Answer</th>\\n                                        </tr>\\n                                        <tr>\\n                                            <td class=\\\"maxWidth240\\\">{{ hoverGlobQues.questionTitle}}</td>\\n                                            <td class=\\\"maxWidth320\\\">{{hoverGlobQues.hierarchy}}</td>\\n                                            <td>\\n                                                <p *ngFor=\\\"let opt of hoverGlobQues?.optionsList\\\">{{opt.optionText}}</p>\\n                                            </td>\\n                                            <td>\\n                                                <div *ngFor=\\\"let opt of hoverGlobQues?.optionsList\\\">\\n                                                    <p *ngIf=\\\"opt.answer\\\"> {{opt.optionText}}</p>\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <button class=\\\"btn btn-link\\\" (click)=\\\"editQuestion(hoverGlobQues)\\\">Edit</button>\\n                                            </td>\\n    \\n                                        </tr>\\n                                    </table>\\n                                </div> -->\\n                    </tr>\\n                </tbody>\\n                <tbody *ngIf=\\\"!globalQues ||( globalQues && !globalQues['questionsList'].length)\\\">\\n                    <tr class=\\\"errorTxt text-center\\\">\\n                        <td colspan=\\\"4\\\">Questions Not Found</td>\\n                    </tr>\\n                </tbody>\\n\\n            </table>\\n\\n            <div class=\\\"ques_sec_div col-sm-12 text-center\\\" *ngIf=\\\"globalQues && globalQues['questionsList'] && globalQues['questionsList'].length\\\">\\n                <pagination-controls (pageChange)=\\\"p_one = $event\\\" previousLabel=\\\"<\\\" nextLabel=\\\">\\\" [id]=\\\"sec_ques_local\\\"></pagination-controls>\\n            </div>\\n\\n            <!-- <div class=\\\"col-sm-12 p-4 text-center\\\" *ngIf=\\\"globalQues && globalQues['questionsList'].length\\\">\\n                        <button class=\\\"btn btn-primary mr-4\\\" (click)=\\\"getPrevGlob()\\\" [disabled]=\\\"offset<0\\\">Previous</button>\\n                        <button class=\\\"btn btn-primary ml-4\\\" (click)=\\\"getNextGlob()\\\">Next</button>\\n                    </div> -->\\n\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"isGlobal\\\">\\n        <button class=\\\"btn btn-primary mr-4\\\" data-toggle=\\\"modal\\n                \\\" data-target=\\\"#exampleModalCenter\\\" id=\\\"edit_ques\\\">\\n            <i class=\\\"material-icons\\\">\\n                add\\n            </i>\\n            Add Questions</button>\\n        <!-- <div class=\\\"row m-0 add_ques_Sec pt-4 \\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                        <input class=\\\"form-control search_ques\\\" [(ngModel)]=\\\"globalSearchKey\\\" placeholder=\\\"Search By Category\\\" (input)=\\\"pickGlobalQUestions(globalSearchKey)\\\">\\n                    </div>\\n                    <div class=\\\"col-sm-6 text-right\\\">\\n                        <button class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#globQuesModal\\\" *ngIf=\\\"importQuesArr.length\\\">Import</button>\\n                    </div>\\n                </div> -->\\n\\n        <div class=\\\"row m-0 add_ques_Sec pt-4 \\\">\\n            <div class=\\\"col-sm-12\\\">\\n                <!-- <h4>Categories</h4> -->\\n                <h4 *ngFor=\\\"let catPath of categoryGlobalPath;let i = index\\\" class=\\\"cat_h4\\\">\\n                    <span class=\\\"catpath_arrow\\\" *ngIf=\\\"i!=0\\\">\\n                        <i class=\\\"material-icons\\\">\\n                            chevron_right\\n                        </i>\\n                    </span>\\n                    <span *ngIf=\\\"catPath && catPath.categoryName\\\" (click)=\\\"gotoPathGlobal(catPath,i)\\\" class=\\\"pointer\\\">{{catPath.categoryName}}</span>\\n                    <span *ngIf=\\\"catPath && catPath.type == '2'\\\" (click)=\\\"gotoPathGlobal(catPath,i)\\\" class=\\\"pointer\\\">{{catPath.subCategoryName}}</span>\\n                    <span *ngIf=\\\"catPath && catPath.type == '3'\\\" (click)=\\\"gotoPathGlobal(catPath,i)\\\" class=\\\"pointer\\\">{{catPath.sectionName}}</span>\\n\\n                </h4>\\n            </div>\\n            <!-- <div class=\\\"col-sm-4\\\">\\n\\n                    <button class=\\\"btn btn-primary mr-4\\\" id=\\\"add_ques_modal\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\">\\n                        <i class=\\\"material-icons\\\">\\n                            add\\n                        </i>\\n                        Add Questions</button>\\n\\n                    <button class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#bulkUploadModal\\\" (click)=\\\"getTemplateLink()\\\">\\n                        <i class=\\\"material-icons\\\">\\n                            vertical_align_top\\n                        </i>\\n                        Bulk Upload</button>\\n\\n\\n                </div> -->\\n\\n            <div class=\\\"col-sm-12 mt-4 mb-4\\\">\\n                <div class=\\\"alphabets_cat\\\">\\n                    <span *ngFor=\\\"let alpha of alphaArr\\\" [ngClass]=\\\"{'alpha_letters':true,'alpha_all':alpha=='All'}\\\" (click)=\\\"getByAlphaGlob(alpha)\\\">\\n                        <h5>{{alpha}}</h5>\\n                    </span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"col-sm-12 mt-4 mb-4 categ_ques_tbl\\\" *ngIf=\\\"!isGlobQues\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <tr *ngIf=\\\"allGlobalCategory && allGlobalCategory['globalCategoriesList']\\\">\\n                            <th>Category Title</th>\\n                            <th>Created On</th>\\n                            <!-- <th>Hierarchy</th> -->\\n                        </tr>\\n                        <tr *ngIf=\\\"(allGlobalCategory && allGlobalCategory['listOfGlobalSubCategory'])\\\">\\n                            <!-- <th></th> -->\\n                            <th>Title</th>\\n                            <th>Type</th>\\n                            <th>Hierarchy</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody *ngIf=\\\"allGlobalCategory && allGlobalCategory['globalCategoriesList'] && allGlobalCategory['globalCategoriesList'].length\\\">\\n                        <tr *ngFor=\\\"let cat of allGlobalCategory['globalCategoriesList'] | paginate: { itemsPerPage: 10, currentPage: p_glob_1,id: glob_page_1};let i=index\\\" (click)=\\\"getGlobalSubCategories(cat)\\\">\\n                            <td>{{cat.categoryName}}</td>\\n                            <td>\\n                                <span *ngIf=\\\"cat.creadtedOn != 'null'\\\">{{cat.creadtedOn | date:'medium'}}</span>\\n                                <span *ngIf=\\\"!cat.creadtedOn\\\">-</span>\\n                                <span *ngIf=\\\"cat.creadtedOn == 'null'\\\">-</span>\\n                            </td>\\n                            <!-- <td>{{cat.hierarchy}}</td> -->\\n                        </tr>\\n                    </tbody>\\n                    <tbody *ngIf=\\\"(allGlobalCategory && allGlobalCategory['globalCategoriesList'] && !allGlobalCategory['globalCategoriesList'].length)\\\">\\n                        <tr>\\n                            <td colspan=\\\"3\\\" class=\\\"errorTxt text-center\\\">{{allGlobalCategory.statusMessage}}</td>\\n                        </tr>\\n                    </tbody>\\n                    <tbody *ngIf=\\\"allGlobalCategory && allGlobalCategory['listOfGlobalSubCategory'] && allGlobalCategory['listOfGlobalSubCategory'].length\\\">\\n                        <tr *ngFor=\\\"let cat of allGlobalCategory['listOfGlobalSubCategory'] | paginate: { itemsPerPage: 10, currentPage: p_glob_2,id:glob_page_2};let i=index\\\" (click)=\\\"getGlobalSubCategoriesBy(cat)\\\" [ngClass]=\\\"{'sec_tr':cat.type == '3'}\\\">\\n                            <!-- <td>\\n                                        <span class=\\\"sub_cat_icon\\\" *ngIf=\\\"cat.type=='2'\\\">\\n                                            <i class=\\\"material-icons\\\">\\n                                                folder\\n                                            </i>\\n                                        </span>\\n                                        <span class=\\\"sec_icon\\\" *ngIf=\\\"cat.type=='3'\\\">\\n                                            <i class=\\\"material-icons\\\">\\n                                                folder\\n                                            </i>\\n                                        </span>\\n                                    </td> -->\\n                            <td>\\n                                <span class=\\\"sub_cat_icon\\\" *ngIf=\\\"cat.type=='2'\\\">\\n                                    <i class=\\\"material-icons\\\">\\n                                        folder\\n                                    </i>\\n                                </span>\\n                                <span class=\\\"sec_icon\\\" *ngIf=\\\"cat.type=='3'\\\">\\n                                    <i class=\\\"material-icons\\\">\\n                                        folder\\n                                    </i>\\n                                </span>\\n                                <span *ngIf=\\\"cat.type=='2'\\\">\\n                                    {{cat.subCategoryName}}\\n                                </span>\\n                                <span *ngIf=\\\"cat.type=='3'\\\">\\n                                    {{cat.sectionName}}\\n                                </span>\\n\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"cat.type == '2'\\\">Sub-Category</span>\\n                                <span *ngIf=\\\"cat.type == '3'\\\">Section</span>\\n                                <span *ngIf=\\\"cat.type == '3'\\\" class=\\\"badge badge-success ml-3\\\" [popoverOnHover]=\\\"true\\\" [popover]=\\\"questionCount1\\\">{{cat.questionCount}}</span>\\n                                <popover-content #questionCount1 title=\\\"\\\" placement=\\\"right\\\" [animation]=\\\"true\\\" style=\\\"box-shadow: 10px 10px 5px #aaaaaa;\\\">\\n                                    <span *ngIf=\\\"cat.type == '3'\\\" style=\\\"color: #646363;\\\">Total Questions - {{cat.questionCount}}</span>\\n\\n                                </popover-content>\\n                            </td>\\n                            <td>{{cat.hierarchy}}</td>\\n                        </tr>\\n                    </tbody>\\n                    <tbody *ngIf=\\\"(allGlobalCategory && allGlobalCategory['listOfGlobalSubCategory'] && !allGlobalCategory['listOfGlobalSubCategory'].length)\\\">\\n                        <tr>\\n                            <td colspan=\\\"3\\\" class=\\\"errorTxt text-center\\\">Categories Not Found</td>\\n                        </tr>\\n                    </tbody>\\n                    <!-- <tbody *ngIf=\\\"allCategory && allCategory['listOfAllSections'] && allCategory['listOfAllSections'].length\\\">\\n                                <tr *ngFor=\\\"let sec of allCategory['listOfAllSections']\\\" (click)=\\\"getSubCategoriesBy(cat)\\\">\\n                                    <td>\\n                                        <span class=\\\"sec_icon\\\">\\n                                            <i class=\\\"material-icons\\\">\\n                                                folder\\n                                            </i>\\n                                        </span>\\n                                    </td>\\n                                    <td>{{sec.testSectionName}}</td>\\n                                    <td>{{sec.sectionHeirarchy}}</td>\\n                                </tr>\\n                            </tbody> -->\\n                </table>\\n\\n                <div class=\\\"ques_sec_div col-sm-12 text-center\\\" *ngIf=\\\"allGlobalCategory && allGlobalCategory['globalCategoriesList'] && allGlobalCategory['globalCategoriesList'].length\\\">\\n                    <pagination-controls (pageChange)=\\\"p_glob_1 = $event\\\" previousLabel=\\\"<\\\" nextLabel=\\\">\\\" [id]=\\\"glob_page_1\\\"></pagination-controls>\\n                </div>\\n                <div class=\\\"ques_sec_div col-sm-12 text-center\\\" *ngIf=\\\"allGlobalCategory && allGlobalCategory['listOfGlobalSubCategory'] && allGlobalCategory['listOfGlobalSubCategory'].length\\\">\\n                    <pagination-controls (pageChange)=\\\"p_glob_2 = $event\\\" previousLabel=\\\"<\\\" nextLabel=\\\">\\\" [id]=\\\"glob_page_2\\\"></pagination-controls>\\n                </div>\\n\\n            </div>\\n\\n        </div>\\n\\n        <div class=\\\"row mr-3 ml-3 mt-4 mb-4\\\" *ngIf=\\\"isGlobQues\\\">\\n            <div class=\\\"col-sm-10\\\">\\n                <h5 class=\\\"text-center ques_sec_name\\\">\\n                    <!-- <span *ngIf=\\\"catPath && catPath.testCategoryName\\\" (click)=\\\"gotoPath(catPath,i)\\\" class=\\\"pointer\\\">{{catPath.testCategoryName}}</span> -->\\n                    <span *ngIf=\\\"categoryGlobalPath.length\\\">{{categoryGlobalPath[categoryGlobalPath.length-1].sectionName}}</span>\\n\\n                </h5>\\n                <hr class=\\\"ques_sec_hr\\\" *ngIf=\\\"categoryGlobalPath.length\\\">\\n            </div>\\n            <div class=\\\"col-sm-2 text-right p-0\\\">\\n                <button class=\\\"btn btn-primary import_ques_btn\\\" (click)=\\\"impQuestoSec()\\\" data-toggle=\\\"modal\\\" data-target=\\\"#globQuesModal\\\" [disabled]=\\\"!importQuesArr.length\\\">Import</button>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row boxShadow table_div mr-3 ml-3 mt-4 mb-4\\\" *ngIf=\\\"isGlobQues\\\">\\n\\n            <!-- <table class=\\\"table\\\">\\n                        <thead>\\n                            <tr class=\\\"tbl_hdng\\\">\\n                                <th class=\\\"border-0\\\">S.No</th>\\n                                <th class=\\\"border-0\\\">Questions</th>\\n                                <th class=\\\"border-0\\\">Category</th>\\n                                <th class=\\\"border-0\\\">Select</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody *ngIf=\\\"globalQues && globalQues['listOfQuestions'].length\\\">\\n                            <tr *ngFor=\\\"let ques of globalQues['listOfQuestions'];let i=index\\\" class=\\\"pointer glob_ques\\\" id=\\\"glob_ques_id{{i}}\\\" (mouseover)=\\\"setPos(i,ques)\\\">\\n                                <td class=\\\"\\\">\\n                                    <span>{{i+1}}</span>\\n                                </td>\\n    \\n    \\n                                <td *ngIf=\\\"ques.questionTitle.length < 84\\\" title=\\\"{{ques.questionTitle}}\\\">{{ques.questionTitle}}</td>\\n                                <td *ngIf=\\\"ques.questionTitle.length >= 84\\\" title=\\\"{{ques.questionTitle}}\\\">{{ques.questionTitle | slice:0:84}} ...</td>\\n                                <td *ngIf=\\\"ques.hierarchy?.length < 12 && ques.hierarchy!='null'\\\" title=\\\"{{ques.hierarchy}}\\\" class=\\\"\\\">{{ques.hierarchy}}</td>\\n                                <td *ngIf=\\\"ques.hierarchy?.length < 12 && ques.hierarchy=='null'\\\" title=\\\"{{ques.hierarchy}}\\\" class=\\\"\\\">-</td>\\n                                <td *ngIf=\\\"ques.hierarchy?.length >= 12\\\" title=\\\"{{ques.hierarchy}}\\\" class=\\\"\\\">{{ques.hierarchy | slice:0:12}} ...</td>\\n    \\n                                <td>\\n                                    <mat-checkbox [color]=\\\"color\\\" class=\\\"example-margin\\\" [(ngModel)]=\\\"impQues[i]\\\" (click)=\\\"importQues(ques,impQues[i])\\\"></mat-checkbox>\\n                                </td>\\n                                <div id=\\\"menu_content\\\">\\n                                    <table class=\\\"table\\\" *ngIf=\\\"hoverGlobQues\\\">\\n                                        <tr>\\n                                            <th>Question</th>\\n                                            <th>Category</th>\\n                                            <th>Options</th>\\n                                            <th>Answer</th>\\n                                        </tr>\\n                                        <tr>\\n                                            <td class=\\\"maxWidth240\\\">{{ hoverGlobQues.questionTitle}}</td>\\n                                            <td class=\\\"maxWidth320\\\">{{hoverGlobQues.hierarchy}}</td>\\n                                            <td>\\n                                                <p *ngFor=\\\"let opt of hoverGlobQues?.optionsList\\\">{{opt.optionText}}</p>\\n                                            </td>\\n                                            <td>\\n                                                <div *ngFor=\\\"let opt of hoverGlobQues?.optionsList\\\">\\n                                                    <p *ngIf=\\\"opt.answer\\\"> {{opt.optionText}}</p>\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <button class=\\\"btn btn-link\\\" (click)=\\\"editQuestion(hoverGlobQues)\\\">Edit</button>\\n                                            </td>\\n    \\n                                        </tr>\\n                                    </table>\\n                                </div>\\n                            </tr>\\n                        </tbody>\\n                        <tbody *ngIf=\\\"!globalQues ||( globalQues && !globalQues['listOfQuestions'].length)\\\">\\n                            <tr class=\\\"errorTxt text-center\\\">\\n                                <td colspan=\\\"4\\\">Questions Not Found</td>\\n                            </tr>\\n                        </tbody>\\n                    </table> -->\\n\\n            <table class=\\\"table sec_ques text-center\\\">\\n                <thead>\\n                    <tr class=\\\"tbl_hdng\\\">\\n                        <th class=\\\"border-0\\\">S.No</th>\\n                        <th class=\\\"border-0\\\">Question Title</th>\\n                        <th class=\\\"border-0\\\">Type</th>\\n                        <th class=\\\"border-0\\\">Complexity</th>\\n                        <th class=\\\"border-0 sel_all_che\\\">\\n                            <mat-checkbox [color]=\\\"color\\\" class=\\\"example-margin\\\" [(ngModel)]=\\\"impAllQues\\\" (click)=\\\"importAllQues(impAllQues)\\\">Select All</mat-checkbox>\\n                        </th>\\n\\n                    </tr>\\n                </thead>\\n                <!-- <tbody *ngIf=\\\"globalQues && globalQues['listOfQuestions'].length\\\">\\n                            <tr *ngFor=\\\"let ques of globalQues['listOfQuestions'];let i=index\\\" class=\\\"pointer glob_ques\\\" id=\\\"glob_ques_id{{i}}\\\" (mouseover)=\\\"setPos(i,ques)\\\">\\n                                <td class=\\\"\\\">\\n                                        <mat-checkbox [color]=\\\"color\\\" class=\\\"example-margin\\\" [(ngModel)]=\\\"impQues[i]\\\" (click)=\\\"importQues(ques,impQues[i])\\\"></mat-checkbox> \\n                                        <span class=\\\"ques_cunt_circle\\\">{{i+1}}</span>\\n                                </td>\\n    \\n    \\n                                <td *ngIf=\\\"ques.questionTitle.length < 84\\\" title=\\\"{{ques.questionTitle}}\\\">{{ques.questionTitle}}</td>\\n                                <td *ngIf=\\\"ques.questionTitle.length >= 84\\\" title=\\\"{{ques.questionTitle}}\\\">{{ques.questionTitle | slice:0:84}} ...</td>\\n                               \\n                                <td title=\\\"{{ques.questionTitle}}\\\">{{ques.questionTypeName}}</td>\\n                                <td title=\\\"{{ques.questionTitle}}\\\">{{ques.questionComplexity}}</td>\\n    \\n                                <div id=\\\"menu_content\\\">\\n                                    <table class=\\\"table\\\" *ngIf=\\\"hoverGlobQues\\\">\\n                                        <tr>\\n                                            <th>Question</th>\\n                                            <th>Category</th>\\n                                            <th>Options</th>\\n                                            <th>Answer</th>\\n                                        </tr>\\n                                        <tr>\\n                                            <td class=\\\"maxWidth240\\\">{{ hoverGlobQues.questionTitle}}</td>\\n                                            <td class=\\\"maxWidth320\\\">{{hoverGlobQues.hierarchy}}</td>\\n                                            <td>\\n                                                <p *ngFor=\\\"let opt of hoverGlobQues?.optionsList\\\">{{opt.optionText}}</p>\\n                                            </td>\\n                                            <td>\\n                                                <div *ngFor=\\\"let opt of hoverGlobQues?.optionsList\\\">\\n                                                    <p *ngIf=\\\"opt.answer\\\"> {{opt.optionText}}</p>\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <button class=\\\"btn btn-link\\\" (click)=\\\"editQuestion(hoverGlobQues)\\\">Edit</button>\\n                                            </td>\\n    \\n                                        </tr>\\n                                    </table>\\n                                </div>\\n                            </tr>\\n                        </tbody>\\n                        <tbody *ngIf=\\\"!globalQues ||( globalQues && !globalQues['listOfQuestions'].length)\\\">\\n                            <tr class=\\\"errorTxt text-center\\\">\\n                                <td colspan=\\\"4\\\">Questions Not Found</td>\\n                            </tr>\\n                        </tbody> -->\\n\\n                <tbody *ngIf=\\\"newGlobQues && newGlobQues['questionsList'].length\\\">\\n                    <tr *ngFor=\\\"let ques of newGlobQues['questionsList']  | paginate: { itemsPerPage: 10, currentPage: p_glob_3,id: sub_glob_ques};let i=index\\\" class=\\\"pointer glob_ques\\\" id=\\\"glob_ques_id{{i}}\\\" data-toggle=\\\"modal\\\" data-target=\\\"#quesViewModal\\\" (click)=\\\"viewQuestion(ques)\\\">\\n                        <td>\\n                            <span class=\\\"ques_cunt_circle\\\" *ngIf=\\\"p_glob_3==1\\\">{{i+1}}</span>\\n                            <span class=\\\"ques_cunt_circle\\\" *ngIf=\\\"p_glob_3>1\\\">{{(p_glob_3-1)*10+i+1}}</span>\\n                        </td>\\n\\n\\n\\n                        <td *ngIf=\\\"ques.qustionText.length < 50\\\" title=\\\"{{ques.qustionText}}\\\">{{ques.qustionText}}</td>\\n                        <td *ngIf=\\\"ques.qustionText.length >= 50\\\" title=\\\"{{ques.qustionText}}\\\">{{ques.qustionText | slice:0:50}} ...</td>\\n\\n                        <td title=\\\"{{ques.questionType}}\\\">{{ques.questionType}}</td>\\n                        <td title=\\\"{{ques.questionComplexityType}}\\\">{{ques.questionComplexityType}}</td>\\n                        <td class=\\\"\\\">\\n                            <mat-checkbox [color]=\\\"color\\\" class=\\\"example-margin\\\" (change)=\\\"importQues(ques,impQues[i],$event,i)\\\" (click)=\\\"stopProp($event)\\\" [checked]=\\\"checkImport(ques)\\\"></mat-checkbox>\\n\\n                        </td>\\n                        <!-- <div id=\\\"menu_content\\\">\\n                                    <table class=\\\"table\\\" *ngIf=\\\"hoverGlobQues\\\">\\n                                        <tr>\\n                                            <th>Question</th>\\n                                            <th>Category</th>\\n                                            <th>Options</th>\\n                                            <th>Answer</th>\\n                                        </tr>\\n                                        <tr>\\n                                            <td class=\\\"maxWidth240\\\">{{ hoverGlobQues.questionTitle}}</td>\\n                                            <td class=\\\"maxWidth320\\\">{{hoverGlobQues.hierarchy}}</td>\\n                                            <td>\\n                                                <p *ngFor=\\\"let opt of hoverGlobQues?.optionsList\\\">{{opt.optionText}}</p>\\n                                            </td>\\n                                            <td>\\n                                                <div *ngFor=\\\"let opt of hoverGlobQues?.optionsList\\\">\\n                                                    <p *ngIf=\\\"opt.answer\\\"> {{opt.optionText}}</p>\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <button class=\\\"btn btn-link\\\" (click)=\\\"editQuestion(hoverGlobQues)\\\">Edit</button>\\n                                            </td>\\n    \\n                                        </tr>\\n                                    </table>\\n                                </div> -->\\n                    </tr>\\n                </tbody>\\n                <tbody *ngIf=\\\"!newGlobQues ||( newGlobQues && !newGlobQues['questionsList'].length)\\\">\\n                    <tr class=\\\"errorTxt text-center\\\">\\n                        <td colspan=\\\"4\\\">Questions Not Found</td>\\n                    </tr>\\n                </tbody>\\n\\n            </table>\\n\\n            <div class=\\\"ques_sec_div col-sm-12 text-center\\\" *ngIf=\\\"newGlobQues && newGlobQues['questionsList'] && newGlobQues['questionsList'].length\\\">\\n                <pagination-controls (pageChange)=\\\"p_glob_3 = $event\\\" previousLabel=\\\"<\\\" nextLabel=\\\">\\\" [id]=\\\"sub_glob_ques\\\"></pagination-controls>\\n            </div>\\n\\n            <!-- <div class=\\\"col-sm-12 p-4 text-center\\\" *ngIf=\\\"globalQues && globalQues['questionsList'].length\\\">\\n                        <button class=\\\"btn btn-primary mr-4\\\" (click)=\\\"getPrevGlob()\\\" [disabled]=\\\"offset<0\\\">Previous</button>\\n                        <button class=\\\"btn btn-primary ml-4\\\" (click)=\\\"getNextGlob()\\\">Next</button>\\n                    </div> -->\\n\\n        </div>\\n    </div>\\n</div>\\n\\n<!-- \\n<div class=\\\"ques_tabs p-4\\\">\\n    <mat-tab-group (selectedTabChange)=\\\"onLinkClick($event)\\\">\\n        <mat-tab label=\\\"Tenant Questions Catalogue\\\">\\n\\n        </mat-tab>\\n        <mat-tab label=\\\"Global Questions Catalogue\\\">\\n\\n\\n        </mat-tab>\\n    </mat-tab-group>\\n</div> -->\\n\\n\\n<!-- The Modal -->\\n<div class=\\\"modal\\\" id=\\\"bulkUploadModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\"> Bulk Upload</h4>\\n                <button id=\\\"close_bul_btn\\\" type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <!-- Modal body -->\\n            <div class=\\\"modal-body text-center\\\" *ngIf=\\\"oldSection\\\">\\n\\n                <div class=\\\"row pl-0\\\">\\n                    <div class=\\\"col-sm-4\\\">\\n                        <label class=\\\"float-right\\\">Test Instance : </label>\\n                    </div>\\n                    <div class=\\\"col-sm-5\\\">\\n                        <div id=\\\"mul_close\\\">\\n                            <angular2-multiselect [data]=\\\"dropdownListInstance\\\" [(ngModel)]=\\\"selectedItemsInstance\\\" [settings]=\\\"dropdownSettingsInstance\\\" (onSelect)=\\\"pushSections($event)\\\" (onDeSelect)=\\\"removeSections();selectedItemsInstance = []\\\" (onDeSelectAll)=\\\"removeSections();selectedItemsInstance = []\\\"></angular2-multiselect>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-2\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"row pl-0 mt-4\\\">\\n                    <div class=\\\"col-sm-2 offset-sm-2\\\">\\n                        <label class=\\\"float-right\\\">Section : </label>\\n                    </div>\\n                    <div class=\\\"col-sm-5\\\">\\n                        <div [ngClass]=\\\"{'cursor_not':!dropdownList.length}\\\" id=\\\"sec_mul\\\">\\n                            <angular2-multiselect [data]=\\\"dropdownList\\\" [(ngModel)]=\\\"selectedItems\\\" [settings]=\\\"dropdownSettings\\\" (onSelect)=\\\"addSec()\\\" (onDeSelect)=\\\"removeSec()\\\" (onDeSelectAll)=\\\"removeSec()\\\"></angular2-multiselect>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-2\\\">\\n                        <span title=\\\"Add New Section\\\" class=\\\"add_new_sec\\\" *ngIf=\\\"selectedItemsInstance.length && selectedItemsInstance[0].isGlobal == '0'\\\" (click)=\\\"toggleOldNewSections();removeSections();selectedItemsInstance=[]\\\">\\n                            <i class=\\\"material-icons\\\">\\n                                add_circle\\n                            </i>\\n                        </span>\\n\\n                    </div>\\n                </div>\\n\\n\\n                <div class=\\\"mt-4\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"clickUpload()\\\">\\n                        <i class=\\\"material-icons\\\">\\n                            vertical_align_top\\n                        </i>\\n                        Choose File\\n                    </button>\\n                    <small *ngIf=\\\"filesToUpload.length\\\" class=\\\"pl-5 blueColor\\\">{{filesToUpload[0].name}}</small>\\n                    <small *ngIf=\\\"filesToUpload.length\\\" class=\\\"pl-3 redCol\\\">{{getSize(filesToUpload[0].size)}}</small>\\n                    <input id=\\\"upload_file_btn\\\" [hidden]=\\\"true\\\" type=\\\"file\\\" (change)=\\\"uploadFile($event)\\\">\\n                </div>\\n                <div class=\\\"mt-5 mb-5\\\">\\n                    <button class=\\\"btn btn-success\\\" (click)=\\\"uploadBulkQues()\\\">\\n                        Upload\\n                    </button>\\n                </div>\\n                <div class=\\\"mt-4 mb-4\\\">\\n                    <button class=\\\"btn btn-link float-left\\\">\\n                        <a [href]=\\\"templateLink\\\" download> Download Template for Questions Bulk upload </a>\\n                    </button>\\n                </div>\\n            </div>\\n            <div class=\\\"modal-body animated fadeIn\\\" *ngIf=\\\"!oldSection\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-2\\\">\\n                        <div class=\\\"back_to_sec\\\">\\n                            <button class=\\\"btn btn-info\\\" (click)=\\\"toggleOldNewSections()\\\">\\n                                <i class=\\\"material-icons\\\">\\n                                    arrow_back\\n                                </i>\\n                                <span>Back</span>\\n                            </button>\\n\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <div class=\\\"row p-3\\\">\\n                            <div class=\\\"col-sm-4\\\">\\n                                <label>Test Instance : </label>\\n                            </div>\\n                            <div class=\\\"col-sm-7\\\">\\n                                <angular2-multiselect [data]=\\\"dropdownListInstance\\\" [(ngModel)]=\\\"selectedItemsInstance\\\" [settings]=\\\"dropdownSettingsInstance\\\" (onSelect)=\\\"onInstanceSelect($event)\\\" (onDeSelectAll)=\\\"clearCateg()\\\" (onDeselect)=\\\"clearCateg()\\\"></angular2-multiselect>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row p-3\\\">\\n                            <div class=\\\"col-sm-4\\\">\\n                                <label>Select Category : </label>\\n                            </div>\\n                            <div class=\\\"col-sm-7\\\">\\n                                <div [ngClass]=\\\"{'cursor_not':!dropdownListCateg.length}\\\">\\n                                    <angular2-multiselect [data]=\\\"dropdownListCateg\\\" [(ngModel)]=\\\"selectedCateg\\\" [settings]=\\\"dropdownCateg\\\" (onSelect)=\\\"onCategSelect($event)\\\" (onDeSelectAll)=\\\"heirarchy=null\\\"></angular2-multiselect>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row col-sm-12 pl-5 pb-3\\\">\\n                            <label for=\\\"exampleFormControlInput1\\\">\\n                                <b>{{this.heirarchy}}</b>\\n                            </label>\\n                        </div>\\n                        <div class=\\\"row p-3\\\">\\n                            <div class=\\\"col-sm-4\\\">\\n                                <label>Section Name </label>\\n                            </div>\\n                            <div class=\\\"col-sm-7\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"seactionName\\\" [(ngModel)]=\\\"secCatName\\\" placeholder=\\\"section name\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row p-5\\\">\\n                            <div class=\\\"col-sm-12 text-center\\\">\\n                                <button class=\\\"btn btn-primary\\\" (click)=\\\"createSection()\\\" [disabled]=\\\"!secCatName || !selectedCateg.length\\\">Create Section</button>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"alert alert-success\\\" *ngIf=\\\"this.seactionSuccessMessage\\\">\\n                                {{this.sectionStatusMessage}}\\n                            </div>\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"this.seactionFailMessage\\\">\\n                                {{this.sectionStatusMessage}}\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n            </div>\\n\\n\\n        </div>\\n    </div>\\n</div>\\n\\n<!-- add question modal -->\\n<div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-8 text-center\\\">\\n                        <h4 class=\\\"blueColor\\\">Add Questions</h4>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\n                            <span class=\\\"boxShadow\\\">\\n                                <i class=\\\"material-icons\\\">\\n                                    clear\\n                                </i>\\n                            </span>\\n\\n                        </button>\\n                    </div>\\n                    <div class=\\\"col-sm-12\\\">\\n                        <hr>\\n                    </div>\\n                </div>\\n                <!-- <div class=\\\"p-4 text-center\\\">\\n                    <h4 class=\\\"blueColor\\\">Add Questions</h4>\\n                    <hr>\\n                </div> -->\\n\\n                <!-- Created Question -->\\n                <div class=\\\"createdQuestion.length\\\">\\n                    <div *ngFor=\\\"let ques of createdQuestion\\\">\\n                        <div class=\\\"pl-4 pr-4\\\">\\n                            <h4 class=\\\"blueColor\\\">Q. {{ques.qustionText}}</h4>\\n                            <div *ngIf=\\\"ques.questionTypeId == '1' || ques.questionTypeId == '2'\\\">\\n                                <p *ngFor=\\\"let opt of ques['optionsList'];let i=index\\\">\\n                                    <b>{{i+1}}. </b>\\n                                    <span class=\\\"pl-4\\\">{{opt.optionText}}</span>\\n                                </p>\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\\"ques.questionTypeId == '3' || ques.questionTypeId == '4' || ques.questionTypeId == '5' || ques.questionTypeId == '6'\\\">\\n\\n                            <p>\\n                                {{ques.answer}}\\n                            </p>\\n                        </div>\\n                        <hr>\\n                    </div>\\n                </div>\\n                <!-- End Created QUestion -->\\n\\n                <div class=\\\"row pl-5\\\">\\n                    <div class=\\\"col-sm-3\\\">\\n                        <label>Select Section : </label>\\n                    </div>\\n                    <div class=\\\"col-sm-6\\\">\\n                        <angular2-multiselect [data]=\\\"dropdownListAll\\\" (onSelect)=\\\"onItemSelect($event)\\\" [(ngModel)]=\\\"selectedItemsAll\\\" [settings]=\\\"dropdownSettings\\\"></angular2-multiselect>\\n                    </div>\\n                </div>\\n                <!-- <ul class=\\\"nav nav-tabs\\\" id=\\\"myTab\\\" role=\\\"tablist\\\">\\n                    <li class=\\\"nav-item col\\\">\\n                        <a class=\\\"nav-link active\\\" style=\\\"text-align: center;\\\" id=\\\"home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#home\\\" role=\\\"tab\\\" aria-controls=\\\"home\\\"\\n                            aria-selected=\\\"true\\\">Add Questions</a>\\n                    </li>\\n                    <li class=\\\"nav-item col\\\">\\n                        <a class=\\\"nav-link\\\" id=\\\"profile-tab\\\" style=\\\"text-align: center;\\\" data-toggle=\\\"tab\\\" href=\\\"#profile\\\" role=\\\"tab\\\" aria-controls=\\\"profile\\\"\\n                            aria-selected=\\\"false\\\">Bulk Upload</a>\\n                    </li>\\n\\n                </ul> -->\\n\\n                <div class=\\\"tab-content\\\" id=\\\"myTabContent\\\">\\n\\n                    <div class=\\\"tab-pane fade show active\\\" id=\\\"home\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"home-tab\\\">\\n\\n                        <form #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"addQuestion(myForm)\\\">\\n\\n\\n                            <div style=\\\"padding: 2rem 3rem;\\n    text-align: left;\\n    font-size: 14px;\\\">\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-6\\\">\\n                                        <div class=\\\"form-row\\\">\\n\\n                                            <div class=\\\"col-md-10\\\">\\n                                                <label for=\\\"firstName\\\">Question Title\\n                                                    <sup class=\\\"errorTxt\\\">*</sup>\\n                                                </label>\\n                                                <input type=\\\"hidden\\\" name=\\\"sectionId\\\" [(ngModel)]=this.sectionId>\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"questionTitle\\\" name=\\\"questionText\\\" [(ngModel)]=\\\"questionTxt\\\" placeholder=\\\"\\\" required>\\n                                            </div>\\n\\n                                            <div class=\\\"col-md-2\\\" style=\\\"padding-top: 2rem;\\\" *ngIf=\\\"questionType && questionType =='7'\\\">\\n                                                <i class=\\\"material-icons\\\" (click)=\\\"questionImg()\\\" style=\\\"cursor: pointer;\\\">\\n                                                    image\\n                                                </i>\\n                                                <input type=\\\"file\\\" [hidden]=\\\"true\\\" (change)=\\\"onSelectedQuestionImage($event)\\\" id=\\\"imageId\\\">\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-3\\\">\\n                                        <label for=\\\"lastName\\\">Question type\\n                                            <sup class=\\\"errorTxt\\\">*</sup>\\n                                        </label>\\n\\n                                        <select class=\\\"form-control\\\" id=\\\"questionType\\\" name=\\\"questionTypeId\\\" #questionTypeId=ngModel [(ngModel)]=\\\"questionTypeEdit\\\" (change)=\\\"setType(questionTypeId.value)\\\" required>\\n                                            <option value=\\\"\\\" disabled> Select Type</option>\\n                                            <option value=\\\"{{questionType.questionTypeId}}\\\" [selected]=\\\"questionType.questionTypeId == questionTypeEdit\\\" *ngFor=\\\"let questionType of questionTypeArr\\\">{{questionType.questionType}}</option>\\n                                        </select>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-3\\\">\\n                                        <label for=\\\"lastName\\\">Complexity\\n                                            <sup class=\\\"errorTxt\\\">*</sup>\\n                                        </label>\\n                                        <select class=\\\"form-control\\\" id=\\\"complexity\\\" name=\\\"complexityId\\\" [(ngModel)]=\\\"questComplexity\\\" required>\\n                                            <option value=\\\"\\\" disabled>Select </option>\\n                                            <option value=\\\"{{complex.complexityId}}\\\" *ngFor=\\\"let complex of complexityArr\\\">{{complex.complexity}} </option>\\n                                        </select>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-6\\\">\\n                                        <p>\\n                                            <a (click)=\\\"onAccordion()\\\" style=\\\"float: right;margin-right: 4rem;\\\" data-toggle=\\\"collapse\\\" href=\\\"#collapseExample\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseExample\\\">\\n                                                + Additional data\\n                                            </a>\\n\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"collapse\\\" id=\\\"collapseExample\\\">\\n                                    <div style=\\\"\\\">\\n\\n                                        <h4>Text / Code</h4>\\n\\n                                        <div>\\n                                            <textarea id=\\\"txtarea2\\\" class=\\\"form-control \\\" name=\\\"questionCode\\\" ngModel style=\\\"\\\" spellcheck=\\\"false\\\" placeholder=\\\"Add Code..\\\"></textarea>\\n                                        </div>\\n                                        <!-- <ul class=\\\"nav nav-tabs\\\" id=\\\"myTab2\\\" role=\\\"tablist\\\">\\n                                            <li class=\\\"nav-item col\\\">\\n                                                <a (click)=\\\"onAccordion()\\\" class=\\\"nav-link active\\\" style=\\\"text-align: center;\\\" id=\\\"text-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#text\\\"\\n                                                    role=\\\"tab\\\" aria-controls=\\\"text\\\" aria-selected=\\\"true\\\">Text</a>\\n                                            </li>\\n                                            <li class=\\\"nav-item col\\\">\\n                                                <a (click)=\\\"onCode()\\\" class=\\\"nav-link\\\" id=\\\"code-tab\\\" style=\\\"text-align: center;\\\" data-toggle=\\\"tab\\\" href=\\\"#code\\\" role=\\\"tab\\\"\\n                                                    aria-controls=\\\"code\\\" aria-selected=\\\"false\\\">Code</a>\\n                                            </li>\\n\\n                                        </ul> -->\\n                                        <!-- <div class=\\\"tab-content\\\">\\n                                            <div class=\\\"tab-pane active\\\" id=\\\"text\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"text-tab\\\" style=\\\"padding:1rem\\\">\\n\\n                                                <textarea id=\\\"txtarea\\\" class=\\\"form-control \\\" style=\\\"border:none\\\" spellcheck=\\\"false\\\" placeholder=\\\"Add description..\\\"></textarea>\\n\\n\\n\\n                                            </div>\\n                                            <div class=\\\"tab-pane fade\\\" id=\\\"code\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"code-tab\\\" style=\\\"padding:1rem\\\">\\n                                                <textarea id=\\\"txtarea2\\\" class=\\\"form-control \\\" name=\\\"questionCode\\\" ngModel style=\\\"border:none\\\" spellcheck=\\\"false\\\" placeholder=\\\"Add Code..\\\"></textarea>\\n\\n                                            </div>\\n                                        </div> -->\\n\\n                                    </div>\\n                                </div>\\n\\n                                <div *ngIf=\\\"questionType == 1 || questionType == 2\\\">\\n                                    <h5>Options</h5>\\n                                    <hr>\\n                                    <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"mcaAns\\\" name=\\\"radio_btn\\\">\\n                                        <div *ngFor=\\\"let opt of optionList;let i=index\\\">\\n                                            <div class=\\\"form-row\\\" (mouseover)=\\\"showDelete(i)\\\" (mouseleave)=\\\"hideDelete(i)\\\">\\n                                                <div *ngIf=\\\"questionType == '1'\\\" class=\\\"col-sm-1\\\">\\n\\n                                                    <mat-radio-button class=\\\"example-radio-button\\\" (click)=\\\"setMcqAns(i)\\\" [value]=\\\"i\\\" class=\\\"correct_radio\\\">\\n\\n                                                    </mat-radio-button>\\n                                                </div>\\n                                                <div *ngIf=\\\"questionType == '2'\\\" class=\\\"check_green\\\">\\n                                                    <mat-checkbox class=\\\"example-margin\\\" [checked]=\\\"checkMaqAnsers(i)\\\" (click)=\\\"checkboxAns(i)\\\"></mat-checkbox>\\n                                                </div>\\n                                                <div class=\\\"form-group col-md-4\\\" *ngIf=\\\"questionType == '1' || questionType == '2'\\\">\\n                                                    <!-- <label for=\\\"email\\\">Option</label> -->\\n                                                    <!-- <input type=\\\"hidden\\\" class=\\\"form-control\\\" name=\\\"tempId\\\" ngModel=\\\"{{this.tempOptionImageId}}\\\"> -->\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"optionObj[i].optionText\\\" [ngModelOptions]=\\\"{standalone:true}\\\" id=\\\"option_field_{{i}}\\\">\\n                                                    <span id=\\\"close_{{i}}\\\" class=\\\"close_icon\\\" (click)=\\\"deleteOption(i)\\\" [hidden]=\\\"optionList.length == 1\\\">\\n                                                        <i class=\\\"material-icons\\\">\\n                                                            close\\n                                                        </i>\\n                                                    </span>\\n\\n                                                </div>\\n\\n                                                <div class=\\\" col-md-2 \\\" style=\\\"padding-top: 2.25rem; \\\" *ngIf=\\\"questionType == '7'\\\">\\n\\n                                                    <i class=\\\"material-icons\\\" (click)=\\\"optionImg(i)\\\" style=\\\"cursor:pointer;\\\">\\n                                                        image\\n                                                    </i>\\n                                                    <input type=\\\"file\\\" [hidden]=\\\"true\\\" (change)=\\\"onSelectedOptionImage($event,i)\\\" id=\\\"optionImageId{{i}}\\\">\\n\\n                                                </div>\\n\\n\\n                                            </div>\\n                                            <button class=\\\"btn btn-link \\\" (click)=\\\"incOptionList()\\\" style=\\\"margin-left: 18%;\\\" *ngIf=\\\"optionList.length == i+1\\\">\\n                                                + Add another option\\n                                            </button>\\n                                        </div>\\n                                    </mat-radio-group>\\n                                </div>\\n\\n\\n\\n                                <!-- <div class=\\\"form-row \\\">\\n    <div class=\\\"form-group col-md-4 \\\">\\n    <label for=\\\"email \\\">Option</label>\\n    <input type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"option \\\" name=\\\"optionText \\\" [(ngModel)]=\\\"this.optionObj \\\" placeholder=\\\" \\\">\\n    </div>\\n   \\n    <div class=\\\"col-md-2 \\\" style=\\\"padding-top: 2.25rem; \\\"> <i class=\\\"material-icons \\\" (click)=\\\"optionImg() \\\" style=\\\"cursor: pointer; \\\">\\n    image\\n    </i>\\n    <input type=\\\"file \\\" [hidden]=\\\"true \\\" (change)=\\\"onSelectedOptionImage($event) \\\" id=\\\"optionImageId \\\">\\n    </div>\\n   \\n    </div> -->\\n                                <!-- <div class=\\\"form-row \\\">\\n    <div class=\\\"form-group col-md-4 \\\">\\n    <label for=\\\"email \\\">Option</label>\\n    <input type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"option \\\" placeholder=\\\" \\\">\\n    <a href=\\\"JavaScript:Void(0); \\\" style=\\\"float: right \\\">\\n    + Add another option\\n    </a>\\n    </div>\\n    <div class=\\\"col-md-2 \\\" style=\\\"padding-top: 2.25rem; \\\"> <i class=\\\"material-icons \\\" (click)=\\\"optionImg1() \\\" style=\\\"cursor: pointer; \\\">\\n    image\\n    </i>\\n    <input type=\\\"file \\\" [hidden]=\\\"true \\\" (change)=\\\"onSelectedOptionImage($event) \\\" id=\\\"optionImageId1 \\\">\\n    </div>\\n    </div> -->\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-4 \\\">\\n                                        <div *ngIf=\\\"questionType == 3 || questionType == 4 || questionType == 5 || questionType == 6\\\">\\n                                            <label for=\\\"te \\\">Answer</label>\\n                                        </div>\\n                                        <div *ngIf=\\\"questionType == 3 || questionType == 4 || questionType == 5 || questionType == 6\\\">\\n                                            <textarea rows=\\\"6\\\" cols=\\\"80\\\" name=\\\"answer\\\" ngModel></textarea>\\n                                        </div>\\n                                        <!-- <div *ngIf=\\\"questionType == 1 ||  questionType == 2\\\">\\n                                            <input type=\\\"text \\\" class=\\\"form-control \\\" name=\\\"answer\\\" ngModel placeholder=\\\" \\\">\\n                                        </div> -->\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-md-12 pt-5 pl-0\\\">\\n                                    <div style=\\\"float:left;margin-left: -2rem \\\">\\n                                        <!-- <label>Mandatory</label> -->\\n                                        <!-- <label class=\\\"container \\\">\\n\\n                                            <input id=\\\"check\\\" type=\\\"checkbox\\\" name=\\\"isMandate\\\" ngModel class=\\\"pointer mr-2\\\">Mandatory\\n                                            <span class=\\\"checkmark \\\" style=\\\"top: -25px; right: -35px; \\\"></span>\\n                                        </label> -->\\n\\n                                    </div>\\n                                    <div>\\n                                        <section class=\\\"example-section\\\">\\n                                            <mat-slide-toggle class=\\\"example-margin\\\" [color]=\\\"color\\\" name=\\\"globaleShare\\\" ngModel>\\n                                                Contribute to Global Question Catalouge\\n                                            </mat-slide-toggle>\\n                                        </section>\\n                                    </div>\\n                                    <div style=\\\"float: right;\\\">\\n\\n                                        <!-- <button type=\\\"button \\\" class=\\\"btn btn-primary \\\" style=\\\"background: #fff;color: #3D70B2;margin-right:2rem; border: 1px solid #3D70B2; height: 30px; line-height: 17px; border-radius: 0px; font-weight:\\n    600; font-size: 15px; \\\" routerLink=\\\"sections \\\">+ Add Another Question</button>\\n                                        <button type=\\\"button \\\" class=\\\"btn btn-primary \\\" style=\\\"background: #fff;color: #3D70B2;margin-right:2rem; border: 1px solid #3D70B2; height: 30px; line-height: 17px; border-radius: 0px; font-weight:\\n    600; font-size: 15px; \\\" routerLink=\\\"sections \\\">Create New Section</button> -->\\n\\n                                        <button type=\\\"submit \\\" class=\\\"btn btn-primary add_ques_btn\\\" [ngClass]=\\\"{'cursor_not':!myForm.valid}\\\" [disabled]=\\\"!myForm.valid || !selectedItemsAll.length\\\">\\n                                            Add Question</button>\\n                                    </div>\\n\\n                                </div>\\n                            </div>\\n                        </form>\\n                        <!-- <div class=\\\"alert alert-success\\\" style=\\\"text-align:center\\\" *ngIf=\\\"questionSuccesMessage\\\">\\n                            <span style=\\\"text-align:center\\\">{{this.statusMessage}}</span>\\n                        </div>\\n                        <div class=\\\"alert alert-danger\\\" style=\\\"text-align:center\\\" *ngIf=\\\"questionFailMessage\\\">\\n                            <span>{{this.statusMessage}}</span>\\n                        </div>\\n\\n\\n\\n                        <div class=\\\"alert alert-success\\\" style=\\\"text-align:center\\\" *ngIf=\\\"optionImageSuccess\\\">\\n                            <span style=\\\"text-align:center\\\">{{this.optionStatusMessage}}</span>\\n                        </div>\\n                        <div class=\\\"alert alert-danger\\\" style=\\\"text-align:center\\\" *ngIf=\\\"optionImageFail\\\">\\n                            <span>{{this.optionStatusMessage}}</span>\\n                        </div> -->\\n\\n                    </div>\\n                    <div class=\\\"tab-pane fade \\\" id=\\\"profile \\\" role=\\\"tabpanel \\\" aria-labelledby=\\\"profile-tab \\\">...</div>\\n\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n<!--  end modal -->\\n\\n<!-- Modal -->\\n<div id=\\\"globQuesModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\">\\n\\n        <!-- Modal content-->\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n\\n                <div class=\\\"row col-sm-12\\\">\\n                    <h4 class=\\\"modal-title\\\" *ngIf=\\\"oldSection\\\">Add Section</h4>\\n                    <h4 class=\\\"modal-title\\\" *ngIf=\\\"!oldSection\\\">Create New Section</h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                </div>\\n            </div>\\n            <div class=\\\"modal-body animated fadeIn\\\" *ngIf=\\\"oldSection\\\">\\n                <div class=\\\"row pl-0\\\">\\n                    <div class=\\\"col-sm-4\\\">\\n                        <label class=\\\"float-right\\\">Test Instance : </label>\\n                    </div>\\n                    <div class=\\\"col-sm-5\\\">\\n                        <div id=\\\"mul_close\\\">\\n                            <angular2-multiselect [data]=\\\"dropdownListInstance\\\" [(ngModel)]=\\\"selectedItemsInstance\\\" [settings]=\\\"dropdownSettingsInstance\\\" (onSelect)=\\\"pushSections($event)\\\" (onDeSelect)=\\\"removeSections()\\\" (onDeSelectAll)=\\\"removeSections()\\\"></angular2-multiselect>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-2\\\">\\n                        <!-- <span title=\\\"Add New Section\\\" class=\\\"add_new_sec\\\" (click)=\\\"toggleOldNewSections()\\\">\\n                                <i class=\\\"material-icons\\\">\\n                                    add_circle\\n                                </i>\\n                            </span> -->\\n                    </div>\\n                </div>\\n                <div class=\\\"row pl-0 mt-4\\\">\\n                    <div class=\\\"col-sm-2 offset-sm-2\\\">\\n                        <label class=\\\"float-right\\\">Section : </label>\\n                    </div>\\n                    <div class=\\\"col-sm-5\\\">\\n                        <div [ngClass]=\\\"{'cursor_not':!dropdownList.length}\\\" id=\\\"sec_mul\\\">\\n                            <angular2-multiselect [data]=\\\"dropdownList\\\" [(ngModel)]=\\\"selectedItems\\\" [settings]=\\\"dropdownSettings\\\" (onSelect)=\\\"addSec()\\\" (onDeSelect)=\\\"removeSec()\\\" (onDeSelectAll)=\\\"removeSec()\\\"></angular2-multiselect>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-2\\\">\\n                        <span title=\\\"Add New Section\\\" class=\\\"add_new_sec\\\" (click)=\\\"toggleOldNewSections()\\\" *ngIf=\\\"selectedItemsInstance.length && selectedItemsInstance[0].isGlobal == '0'\\\">\\n                            <i class=\\\"material-icons\\\">\\n                                add_circle\\n                            </i>\\n                        </span>\\n                    </div>\\n                </div>\\n                <div class=\\\"row p-5\\\">\\n                    <div class=\\\"col-sm-12 text-center\\\">\\n                        <button class=\\\"btn btn-primary\\\" (click)=\\\"importQuesAns()\\\" [disabled]=\\\"!selectedItems.length\\\">Import</button>\\n                    </div>\\n\\n                </div>\\n            </div>\\n            <div class=\\\"modal-body animated fadeIn\\\" *ngIf=\\\"!oldSection\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-2\\\">\\n                        <div class=\\\"back_to_sec\\\">\\n                            <button class=\\\"btn btn-info\\\" (click)=\\\"toggleOldNewSections()\\\">\\n                                <i class=\\\"material-icons\\\">\\n                                    arrow_back\\n                                </i>\\n                                <span>Back</span>\\n                            </button>\\n\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <div class=\\\"row p-3\\\">\\n                            <div class=\\\"col-sm-4\\\">\\n                                <label>Test Instance : </label>\\n                            </div>\\n                            <div class=\\\"col-sm-7\\\">\\n                                <angular2-multiselect [data]=\\\"dropdownListInstance\\\" [(ngModel)]=\\\"selectedItemsInstance\\\" [settings]=\\\"dropdownSettingsInstance\\\" (onSelect)=\\\"onInstanceSelect($event)\\\" (onDeSelectAll)=\\\"clearCateg()\\\" (onDeselect)=\\\"clearCateg()\\\"></angular2-multiselect>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row p-3\\\">\\n                            <div class=\\\"col-sm-4\\\">\\n                                <label>Select Category : </label>\\n                            </div>\\n                            <div class=\\\"col-sm-7\\\">\\n                                <div [ngClass]=\\\"{'cursor_not':!dropdownListCateg.length}\\\">\\n                                    <angular2-multiselect [data]=\\\"dropdownListCateg\\\" [(ngModel)]=\\\"selectedCateg\\\" [settings]=\\\"dropdownCateg\\\" (onSelect)=\\\"onCategSelect($event)\\\" (onDeSelectAll)=\\\"heirarchy=null\\\"></angular2-multiselect>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row col-sm-12 pl-5 pb-3\\\">\\n                            <label for=\\\"exampleFormControlInput1\\\">\\n                                <b>{{this.heirarchy}}</b>\\n                            </label>\\n                        </div>\\n                        <div class=\\\"row p-3\\\">\\n                            <div class=\\\"col-sm-4\\\">\\n                                <label>Section Name </label>\\n                            </div>\\n                            <div class=\\\"col-sm-7\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"seactionName\\\" [(ngModel)]=\\\"secCatName\\\" placeholder=\\\"section name\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row p-5\\\">\\n                            <div class=\\\"col-sm-12 text-center\\\">\\n                                <button class=\\\"btn btn-primary\\\" (click)=\\\"createSection()\\\" [disabled]=\\\"!secCatName || !selectedCateg.length\\\">Create Section</button>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"alert alert-success\\\" *ngIf=\\\"this.seactionSuccessMessage\\\">\\n                                {{this.sectionStatusMessage}}\\n                            </div>\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"this.seactionFailMessage\\\">\\n                                {{this.sectionStatusMessage}}\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n<!-- Modal -->\\n<div id=\\\"addSectionModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\">\\n\\n        <!-- Modal content-->\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <div class=\\\"row col-sm-12\\\">\\n                    <h4 class=\\\"modal-title\\\">Create New Section</h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n\\n                </div>\\n\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"row p-3\\\">\\n                    <div class=\\\"col-sm-4\\\">\\n                        <label>Select Category : </label>\\n                    </div>\\n                    <div class=\\\"col-sm-7\\\">\\n                        <angular2-multiselect [data]=\\\"dropdownListCateg\\\" [(ngModel)]=\\\"selectedCateg\\\" [settings]=\\\"dropdownCateg\\\" (onSelect)=\\\"onCategSelect($event)\\\"></angular2-multiselect>\\n                    </div>\\n                </div>\\n                <div class=\\\"row col-sm-12 pl-5 pb-3\\\">\\n                    <label for=\\\"exampleFormControlInput1\\\">\\n                        <b>{{this.heirarchy}}</b>\\n                    </label>\\n                </div>\\n                <div class=\\\"row p-3\\\">\\n                    <div class=\\\"col-sm-4\\\">\\n                        <label>Section Name </label>\\n                    </div>\\n                    <div class=\\\"col-sm-7\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"seactionName\\\" [(ngModel)]=\\\"secCatName\\\" placeholder=\\\"section name\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"row p-5\\\">\\n                    <div class=\\\"col-sm-12 text-center\\\">\\n                        <button class=\\\"btn btn-primary\\\" (click)=\\\"createSection()\\\" [disabled]=\\\"!secCatName || !selectedCateg.length\\\">Create Section</button>\\n                    </div>\\n\\n                </div>\\n                <div class=\\\"col-sm-12\\\">\\n                    <div class=\\\"alert alert-success\\\" *ngIf=\\\"this.seactionSuccessMessage\\\">\\n                        {{this.sectionStatusMessage}}\\n                    </div>\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"this.seactionFailMessage\\\">\\n                        {{this.sectionStatusMessage}}\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n\\n    </div>\\n</div>\\n\\n<!-- Modal -->\\n<button type=\\\"button\\\" class=\\\"btn btn-info btn-lg\\\" data-toggle=\\\"modal\\\" id=\\\"uploaded_ques\\\" [hidden]=\\\"true\\\" data-target=\\\"#UploadedQuesModal\\\">Open Modal</button>\\n<div id=\\\"UploadedQuesModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\">\\n\\n        <!-- Modal content-->\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Bulk Upload Status</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <div class=\\\"modal-body pt-0 pb-0\\\">\\n\\n                <div class=\\\"row pt-4 pb-4\\\">\\n                    <div class=\\\"col-sm-4\\\">\\n                        <label><b>Total no of questions :</b></label>\\n                        <span class=\\\"pl-3 quesCountSize tot_count\\\">{{totalQuestionsCount}}</span>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <label><b>No .of success questions :</b></label>\\n                        <span class=\\\"pl-3 quesCountSize succ_count\\\">{{questionsSuccessCount}}</span>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <label><b>No .of already exist questions :</b></label>\\n                        <span class=\\\"pl-3 quesCountSize exist_count\\\">{{questionsExistCount}}</span>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                    <table class=\\\"table text-center\\\" *ngIf=\\\"uploadedQues && !uploadedQues['questionResponseList'].length\\\">\\n                        <tr class=\\\"text-center errorTxt\\\">\\n                            <th colspan=\\\"3\\\">No Questions Uploaded</th>\\n                        </tr>\\n                    </table>\\n                    <table class=\\\"table text-center\\\" *ngIf=\\\"uploadedQues && uploadedQues['questionResponseList'].length\\\">\\n                        <thead>\\n                            <tr>\\n                                <th>Question</th>\\n                                <!-- <th>Status</th> -->\\n                                <th>Message</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let ques of uploadedQues['questionResponseList']\\\">\\n                                <td>{{ques.questionName}}</td>\\n                                <!-- <td>\\n                                            <p *ngIf=\\\"ques.statusCode == 0\\\">Failed</p>\\n                                            <p *ngIf=\\\"ques.statusCode == 1\\\">Uploaded</p>\\n                                            <p *ngIf=\\\"ques.statusCode == 2\\\">Already Exists !</p>\\n                                        </td> -->\\n                                <td [ngClass]=\\\"{'red_col': ques.statusCode == 0, 'green_col':ques.statusCode == 1, 'yellow_col':ques.statusCode == 2}\\\">{{ques.statusMessage}}</td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n<!-- The Modal -->\\n<div class=\\\"modal\\\" id=\\\"quesViewModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content p-4 pb-5\\\" *ngIf=\\\"hoverGlobQues\\\">\\n\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n                <!-- <h4 class=\\\"modal-title\\\">Modal Heading</h4> -->\\n                <span class=\\\"ques_type_colr\\\">Questions Type:</span> &nbsp; &nbsp;\\n                <span class=\\\"\\\">{{hoverGlobQues.questionType}}</span>\\n                <span class=\\\"ques_type_colr pl-5\\\">Complexity Mode:</span> &nbsp; &nbsp;\\n                <span class=\\\"\\\">{{hoverGlobQues.questionComplexityType}}</span>\\n                <button type=\\\"button\\\" class=\\\"close boxShadow\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <!-- Modal body -->\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-12\\\">\\n                        <h5 class=\\\"mod_ques_clr\\\">1. &nbsp; {{hoverGlobQues.qustionText}}</h5>\\n                    </div>\\n\\n                    <div class=\\\"pl-3 pt-3 col-sm-12\\\">\\n                        <pre class=\\\"ques_type_colr pl-4\\\" *ngIf=\\\"hoverGlobQues.questionCode && hoverGlobQues.questionCode != 'null'\\\">{{hoverGlobQues.questionCode}}</pre>\\n                    </div>\\n\\n                    <div *ngIf=\\\"hoverGlobQues.questionTypeId =='1'\\\" class=\\\"pl-3 pt-3\\\">\\n                        <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"mcaAns\\\" name=\\\"radio_btn\\\">\\n                            <div *ngFor=\\\"let opt of hoverGlobQues.optionsList;let i=index\\\">\\n\\n                                <mat-radio-button class=\\\"example-radio-button\\\" [value]=\\\"i\\\" class=\\\"correct_radio\\\" [disabled]=\\\"true\\\">\\n                                    <span class=\\\"white_spac_rad\\\">{{opt.optionText}}</span>\\n                                </mat-radio-button>\\n                            </div>\\n                        </mat-radio-group>\\n                    </div>\\n                    <div *ngIf=\\\"hoverGlobQues.questionTypeId =='2'\\\" class=\\\"pl-3 pt-3\\\">\\n                        <mat-checkbox [color]=\\\"color\\\" class=\\\"example-margin view_ques_chkbox\\\" [checked]=\\\"this.checkBoxAnswers.includes(i)\\\" *ngFor=\\\"let opt of hoverGlobQues.optionsList;let i=index\\\">\\n                            <span class=\\\"white_spac_rad\\\">{{opt.optionText}}</span>\\n                        </mat-checkbox>\\n\\n                    </div>\\n\\n\\n\\n                    <div *ngIf=\\\"hoverGlobQues.questionTypeId =='3' || hoverGlobQues.questionTypeId =='4' || hoverGlobQues.questionTypeId =='5' || hoverGlobQues.questionTypeId =='6'\\\" class=\\\"pl-3 pt-3\\\">\\n\\n                        <p class=\\\"ques_type_colr\\\">\\n                            <span style=\\\"color:#000000\\\"> A.</span>\\n                            <span class=\\\"pl-4\\\"> {{hoverGlobQues.answer}}</span>\\n                        </p>\\n                    </div>\\n\\n                </div>\\n            </div>\\n\\n            <!-- Modal footer -->\\n            <!-- <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n            </div> -->\\n\\n        </div>\\n    </div>\\n</div>\"","module.exports = \".blueColor {\\n    color: #3D70B2\\n}\\n\\n.que_count {\\n    background-color: #41D6C3;\\n    padding: 3px 8px;\\n    border-radius: 11px;\\n    color: #ffffff;\\n}\\n\\n.table_div {\\n    background-color: #ffffff;\\n}\\n\\n.paginate_ctrl {\\n    position: relative;\\n    left: 50%;\\n    -webkit-transform: translateX(-50%);\\n            transform: translateX(-50%);\\n}\\n\\n.add_ques_Sec i,\\n#bulkUploadModal i {\\n    position: relative;\\n    top: 5px;\\n}\\n\\n.add_ques_Sec .btn-primary {\\n    /* background-color: #ffffff;\\n    color: #3D70B2;\\n    border-color: #3D70B2;\\n    width: 200px; */\\n    background-color: #ffffff;\\n    color: #3D70B2;\\n    border-color: #3D70B2;\\n    width: 138px;\\n    padding: 0px 0px;\\n}\\n\\n.redCol {\\n    color: #f44336;\\n}\\n\\n.add_ques_btn {\\n    background: #3D70B2;\\n    border: 1px solid #3D70B2;\\n    height: 30px;\\n    line-height: 17px;\\n    border-radius: 0px;\\n    font-weight: 600;\\n    font-size: 15px;\\n}\\n\\n.tbl_hdng {\\n    color: #ffffff;\\n    background-color: #425db5;\\n}\\n\\n.search_ques::-webkit-input-placeholder {\\n    opacity: 0.5\\n}\\n\\n.glob_ques:hover #menu_content {\\n    display: block;\\n    /* position: absolute;\\n    left: 0px; */\\n    background-color: #ffffff;\\n    box-shadow: 0 1px 5px #959595;\\n    margin: 0% 7%;\\n    z-index: 9;\\n    /* top: 182px; */\\n}\\n\\n#menu_content {\\n    display: none;\\n}\\n\\n#edit_ques {\\n    display: none;\\n}\\n\\n.ques_name {\\n    overflow: hidden;\\n    height: 83px;\\n    text-overflow: ellipsis;\\n    display: -webkit-box;\\n    -webkit-line-clamp: 2;\\n    line-height: 2;\\n    width: 400px;\\n}\\n\\n.maxWidth240 {\\n    max-width: 240px;\\n}\\n\\n.maxWidth320 {\\n    max-width: 320px;\\n}\\n\\n.red_col {\\n    color: #c0392b;\\n}\\n\\n.green_col {\\n    color: #2ecc71;\\n}\\n\\n.yellow_col {\\n    color: #f1c40f;\\n}\\n\\n#UploadedQuesModal .modal-dialog {\\n    max-width: 1000px;\\n}\\n\\n.global_search .input-group-addon {\\n    border: 1px solid #ced4da;\\n    border-left: none;\\n    background-color: #ffffff;\\n    padding: 0px 0px;\\n}\\n\\n.alphabets_cat {\\n    background-color: #ffffff;\\n}\\n\\n.alpha_letters {\\n    color: #2980B9;\\n}\\n\\n.alphabets_cat h5 {\\n    display: inline-block;\\n    margin: 0px;\\n    padding: 20px 0px;\\n    cursor: pointer;\\n}\\n\\n.alphabets_cat span {\\n    margin: 0px 10px;\\n    padding: 0px;\\n}\\n\\n.alpha_all h5 {\\n    border: 1px solid #707070;\\n    color: #707070 !important;\\n    padding: 0px 15px;\\n    border-radius: 10px;\\n    cursor: pointer;\\n}\\n\\n.categ_ques_tbl thead th {\\n    border: none;\\n    color: #000000;\\n}\\n\\n.categ_ques_tbl td,\\n.categ_ques_tbl th {\\n    border: none;\\n}\\n\\n.categ_ques_tbl table {\\n    border-collapse: separate;\\n    border-spacing: 0 15px;\\n}\\n\\n.categ_ques_tbl tbody tr {\\n    background-color: #ffffff;\\n    padding-bottom: 20px;\\n    cursor: pointer;\\n}\\n\\n.categ_ques_tbl tbody tr:hover {\\n    background-color: #7ED6DF !important;\\n    box-shadow: 0 1px 5px #959595;\\n    color: #ffffff;\\n    transition-duration: 0.2s;\\n}\\n\\n.sec_icon {\\n    color: #707070;\\n}\\n\\n.sub_cat_icon {\\n    color: #2ECC71;\\n}\\n\\n.categ_ques_tbl tbody tr:hover .sec_icon {\\n    color: #ffffff;\\n}\\n\\n.categ_ques_tbl tbody tr:hover .sub_cat_icon {\\n    color: #ffffff;\\n}\\n\\n.ques_cunt_circle {\\n    font-weight: bold;\\n    /* background-color: #41D6C3;\\n    color: #ffffff;\\n    padding: 3px 10px;\\n    border-radius: 15px;\\n    margin-left: 15px; */\\n}\\n\\n.sel_all_che {\\n    padding: 4px 13px;\\n}\\n\\n.sec_tr {\\n    background-color: #E2EBF2 !important;\\n}\\n\\n.cat_h4 {\\n    color: #2980B9;\\n    float: left;\\n}\\n\\n.catpath_arrow {\\n    margin: 0px 10px;\\n}\\n\\n.cat_h4 span {\\n    font-size: 20px;\\n}\\n\\n.ques_sec_name {\\n    color: #1ABC9C;\\n}\\n\\n.ques_sec_hr {\\n    border-top: 2px solid #707070;\\n    width: 70%;\\n}\\n\\n.import_ques_btn {\\n    background-color: #2980B9;\\n    border-color: #2980B9;\\n    color: #ffffff;\\n    padding: 5px 25px;\\n    border-radius: 0px;\\n}\\n\\n.ques_type_colr {\\n    color: #2980B9;\\n}\\n\\n.mod_ques_clr {\\n    color: #000000;\\n    word-break: break-all;\\n}\\n\\n#quesViewModal .modal-dialog {\\n    max-width: 1000px;\\n}\\n\\n#quesViewModal .close {\\n    background-color: #41D6C3;\\n    padding: 0px 6px;\\n    position: relative;\\n    top: 10px;\\n    right: 10px;\\n    color: #ffffff;\\n    border-radius: 17px;\\n}\\n\\n.close_icon {\\n    position: absolute;\\n    color: #f44336;\\n    right: -30px;\\n    z-index: 9999;\\n    top: 5px;\\n    visibility: hidden;\\n    transition-delay: 0.2s;\\n}\\n\\n.close_icon i {\\n    font-size: 18px;\\n    cursor: pointer;\\n    font-weight: bold;\\n}\\n\\n.add_new_sec {\\n    top: 5px;\\n    position: relative;\\n    cursor: pointer;\\n}\\n\\n.add_new_sec i {\\n    color: #41D6C3;\\n}\\n\\n#addSectionModal .modal-dialog {\\n    max-width: 600px;\\n}\\n\\n.back_to_sec button {\\n    padding: 0px 10px 5px 0px;\\n}\\n\\n.back_to_sec button i {\\n    position: relative;\\n    padding: 2px 4px;\\n    top: 5px;\\n}\\n\\n#globQuesModal .modal-dialog {\\n    max-width: 50%;\\n}\\n\\n.cursor_not {\\n    cursor: not-allowed;\\n    pointer-events: none;\\n}\\n\\n#bulkUploadModal .modal-dialog {\\n    max-width: 50%;\\n}\\n\\n.cursor_not {\\n    cursor: not-allowed;\\n    pointer-events: none;\\n}\\n\\n#exampleModalCenter .close span {\\n    background-color: #41D6C3;\\n    color: #fff;\\n    padding: 2px 5px 0px 5px;\\n    border-radius: 21px;\\n}\\n\\n#exampleModalCenter .close span i {\\n    font-size: 20px;\\n}\\n\\n.quesCountSize {\\n    font-size: 20px;\\n}\\n\\n.tot_count {\\n    color: #fc7b03\\n}\\n\\n.succ_count {\\n    color: #20BF6B;\\n}\\n\\n.exist_count {\\n    color: #f70800;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AllServicesService } from \"./../../Services/AllServices/all-services.service\";\nimport { NgForm } from '@angular/forms';\nimport { BlockUI, NgBlockUI } from 'ng-block-ui';\ndeclare var $;\n\n@Component({\n  selector: 'app-list-questions',\n  templateUrl: './list-questions.component.html',\n  styleUrls: ['./list-questions.component.css']\n})\nexport class ListQuestionsComponent implements OnInit {\n\n\n  questionsSuccessCount:any;\n  questionsExistCount:any;\n  totalQuestionsCount:any;\n\n  dropdownListInstance = [];\n    selectedItemsInstance = [];\n    dropdownSettingsInstance = {\n      singleSelection: true,\n      text:\"Select Test Instance\",\n      enableSearchFilter: true,\n      classes:\"myclass custom-class\",\n      showCheckbox:false\n    };\n\n  oldSection:boolean = true;\n\n  checked = false;\n  disabled = false;\n\n  public secCatName:any;\n  public seactionSuccessMessage: boolean = false;\n  public seactionFailMessage: boolean = false;\n  public sectionStatusMessage: String;\n  public obj: {\n    \"type\": null,\n    \"id\": null\n  };\n  public type: number;\n  subcategoryId;\n  public categoryId;\n  public heirarchy: String;\n\n  public impAllQues:boolean;\n  public categoryPath:any[]=[];\n  public isQues:boolean;\n  public isGlobQues:boolean;\n  public alphaArr: any[] = ['All', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n  public allCategory: object;\n  public allCategBack:object;\n  public globalQuesBack:object;\n\n  public newGlobQues:object ={};\n  public newGlobQuesBack:object = {};\n  public allGlobalCategory:object;\n  public allGlobalCategBack:object;\n  public p_glob_1:number = 1;\n  public p_glob_2:number = 1;\n  public p_glob_3:number = 1;\n  public isGlobal:boolean;\n  public categoryGlobalPath:any[]=[];\n\n  public selectedSecId: any = null;\n  public checkBoxAnswers: any[] = [];\n  public uploadedQues: object;\n  \n  public offset: number = 0;\n  public limitRecords: number = 10;\n  public globalSearchKey: any = null\n\n  templateLink: any;\n  questComplexity: any = null;\n  questionTypeEdit: any = null;\n  questionTxt: any = null;\n  hoverGlobQues: object;\n  globalQues: object;\n  impQues: object = {}\n  importQuesArr: any[] = [];\n  color: any = 'primary';\n  searchQues: any;\n  @BlockUI() blockUI: NgBlockUI;\n  mcaAns: any;\n  checkboxList: any[] = [];\n  p: number = 1;\n  p_one: number = 1;\n  p_two: number = 1;\n  p_three: number = 1;\n  p_four: number = 1;\n  filesToUpload: Array<File> = [];\n  public qustionList: any[] = []\n  public filterQuesList: any[] = [];\n  createdQuestion: any[] = [];\n  \n  public optionObj: any = {\n    '0': {\n      'optionText': null,\n      'tempId': 0\n    }\n  };\n  public optionList: any[] = [\"\"];\n  public complexityArr: any[];\n  getComplexCity() {\n    this.apiService.getAll(\"reports/questions/getcomplexity?token=\" + localStorage.getItem('token')).subscribe(\n      (data) => {\n        if (data['statusCode'] == 1) {\n          this.complexityArr = data['compelxityTypeDTO'];\n        } else {\n\n        }\n      }, (error) => {\n        // console.log(error)\n      },\n      () => {\n\n      }\n    );\n  }\n  public questionTypeArr: any[];\n  getQuestionType() {\n    this.apiService.getAll(\"reports/questions/getquestiontype?token=\" + localStorage.getItem('token')).subscribe(\n      (data) => {\n        if (data['statusCode'] == 1) {\n          // console.log(data)\n          this.questionTypeArr = data['questionType'];\n        }\n      },\n      (error) => {\n        // console.log(error)\n      },\n      () => { }\n    );\n  }\n  questionImageSelectedFile = null;\n  onSelectedQuestionImage(event) {\n    this.questionImageSelectedFile = event.target.files[0];\n    // console.log(this.questionImageSelectedFile)\n  }\n\n  public questionOptionImageFile = null;\n  public optionImageSuccess: boolean = false;\n  public optionImageFail: boolean = false;\n  public optionStatusMessage: String;\n  public tempOptionImageId: Number;\n  onSelectedOptionImage(event, ind) {\n    this.optionImageSuccess = false;\n    this.optionImageFail = false;\n\n    this.questionOptionImageFile = event.target.files[0];\n    const formData = new FormData();\n    formData.append(\"files\", this.questionOptionImageFile);\n    formData.append('token', localStorage.getItem('token'));\n    // console.log(this.questionOptionImageFile)\n    this.apiService.postData(\"notification/image/option/add\", formData).subscribe(\n      (data) => {\n        alert(data['statusMessage']);\n        if (data['statusCode'] == 1) {\n          // this.tempOptionImageId=data['tempoptionImageId'];\n          this.optionObj[ind].tempId = data['tempoptionImageId'];\n          // console.log(this.tempOptionImageId)\n          this.optionImageSuccess = true;\n          this.optionStatusMessage = data['statusMessage']\n          setTimeout(\n            () => {\n              this.optionImageSuccess = false;\n            }, 3000\n          )\n        } else {\n          this.optionImageFail = true;\n          this.optionStatusMessage = data['statusMessage'];\n          setTimeout(\n            () => {\n              this.optionImageFail = false;\n            }, 3000\n          )\n        }\n\n      },\n      (error) => {\n        // console.log(error)\n      },\n      () => { }\n    );\n\n  }\n\n  public statusMessage: String;\n  public questionSuccesMessage: boolean = false;\n  public questionFailMessage: boolean = false;\n  addQuestion(myForm: NgForm) {\n    if (!this.selectedItemsAll.length) {\n      this.apiService.errorAlert('Please Select the Section to Add Question')\n    }\n    // console.log(this.checkboxList)\n    // console.log(this.mcaAns)\n    this.blockUI.start('Please Wait ...');\n    var data = myForm.value;\n    this.questionFailMessage = false;\n    this.questionSuccesMessage = false;\n    var formListOptions: any[] = [];\n    // options\n    for (var key in this.optionObj) {\n      if (this.optionObj.hasOwnProperty(key)) {\n        var optionFilled: number = 0;\n        if (this.optionObj[key]['optionText'] != null && this.optionObj[key]['optionText'].trim() != \"\") {\n          optionFilled = 1;\n        }\n        formListOptions.push({\n          \"tempId\": this.optionObj[key]['tempId'],\n          \"optionText\": this.optionObj[key]['optionText']\n        })\n      }\n    }\n\n    // console.log(formListOptions)\n    // end\n    // if (!optionFilled) {\n    //   this.apiService.errorAlert(\"Please Enter the Options\");\n    //   this.blockUI.stop();\n    //   return false\n    // }\n    this.selectedSecId = this.selectedItems.length ? this.selectedItems[0].id : null;\n    const formData = new FormData();\n    formData.append(\"optionList\", JSON.stringify(formListOptions))\n    formData.append(\"sectionId\", this.selectedItemsAll.length ? this.selectedItemsAll[0].id : 0)\n    formData.append(\"questionText\", data.questionText)\n    formData.append(\"questionImage\", this.questionImageSelectedFile)\n    formData.append(\"questionTypeId\", data.questionTypeId)\n    formData.append(\"complexityId\", data.complexityId)\n    formData.append(\"questionCode\", data.questionCode)\n    if (data.globaleShare) {\n      formData.append(\"globaleShare\", 'yes')\n    } else {\n      formData.append(\"globaleShare\", 'no')\n    }\n\n    if (data.questionTypeId == '1' || data.questionTypeId == '2') {\n      if (!optionFilled) {\n        this.apiService.errorAlert(\"Please Enter the Options\");\n        this.blockUI.stop();\n        return false\n      }\n    }\n    if (data.questionTypeId == \"1\") {\n      if (this.mcaAns != null) {\n        formData.append(\"answer\", this.mcaAns)\n      } else {\n        this.apiService.errorAlert(\"Please Select the Answer\");\n        this.blockUI.stop();\n        return false\n      }\n    } else if (data.questionTypeId == \"2\") {\n      if (this.checkboxList.length) {\n        var checkboxSting = this.checkboxList.sort((a, b) => {\n          return a - b\n        })\n      } else {\n        this.apiService.errorAlert(\"Please Select the Answer\");\n        this.blockUI.stop();\n        return false\n      }\n      formData.append(\"answer\", checkboxSting.join(','))\n      // console.log(checkboxSting)\n    } else {\n      formData.append(\"answer\", data.answer)\n    }\n\n    formData.append(\"token\", localStorage.getItem('token'))\n    if (data.isMandate) {\n      formData.append(\"isMandate\", \"1\")\n    } else {\n      formData.append(\"isMandate\", \"0\")\n    }\n    //formData.append(\"\")\n    // console.log(data)\n\n    this.apiService.postData(\"reports/questions/addquestion\", formData).subscribe(\n      (data) => {\n        // console.log(data['statusMessage'])\n        if (data['statusCode'] == 1) {\n          this.mcaAns = null;\n          this.getQuestions();\n          this.checkboxList = []\n          // get ques by id\n          this.apiService.getAll('reports/questions/getquestionsbyquestionid?token=' + localStorage.getItem('token') + '&questionid=' + data['questionId'])\n            .subscribe(res => {\n              this.blockUI.stop()\n              this.createdQuestion = res['questionsList'];\n            }, error => {\n\n            })\n          //  end\n\n            // get questions by section\n            this.getQuestionsBySection(this.selectedItemsAll[0].id)\n\n          myForm.reset();\n          delete this.optionObj;\n          this.selectedItemsAll = []\n          // this.optionList = [\"\"];\n          this.optionList = [];\n          this.optionObj = {\n            '0': {\n              'optionText': null,\n              'tempId': 0\n            }\n          };\n          this.questionSuccesMessage = true;\n          this.statusMessage = data['statusMessage'];\n          setTimeout(() => {\n            this.questionSuccesMessage = false;\n            this.statusMessage = null\n          }, 4000)\n          this.apiService.successAlert(data['statusMessage'])\n        } else {\n          this.blockUI.stop();\n          this.questionFailMessage = true;\n          this.apiService.errorAlert(data['statusMessage']);\n          // this.statusMessage = data['statusMessage']\n          setTimeout(() => {\n            this.questionFailMessage = false;\n            // this.statusMessage = null\n          }, 3000)\n        }\n      },\n      (error) => {\n        // console.log(error)\n        this.blockUI.stop()\n      },\n      () => { }\n    );\n  }\n\n  onAccordion() {\n    document.getElementById('txtarea').addEventListener('keyup', function () {\n      this.style.overflow = 'hidden';\n      this.style.height = '0';\n      this.style.height = this.scrollHeight + 'px';\n    }, false);\n\n  }\n\n  onCode() {\n\n    document.getElementById('txtarea2').addEventListener('keyup', function () {\n      this.style.overflow = 'hidden';\n      this.style.height = '0';\n      this.style.height = this.scrollHeight + 'px';\n    }, false);\n  }\n\n  questionImg() {\n    document.getElementById('imageId').click();\n  }\n\n  optionImg(i) {\n    document.getElementById('optionImageId' + i).click();\n  }\n\n  incOptionList() {\n    this.optionList.push(\"\")\n    this.optionObj[this.optionList.length - 1] = {\n      'optionText': null,\n      'tempId': 0\n    }\n    // console.log(this.optionObj)\n  }\n\n  public sectionsData: any[];\n  serachBySection: String;\n  getAllSections() {\n    this.apiService.getAll(\"reports/questions/getsections?token=\" + localStorage.getItem('token')).subscribe(\n      (data) => {\n        // console.log(data)\n        if (data['statusCode'] == 1) {\n          this.sectionsData = data['sectionsList']\n          for (let i = 0; i < this.sectionsData.length; i++) {\n            if(this.sectionsData[i].isOwner){\n              this.dropdownListAll.push({\n                id: this.sectionsData[i].sectionId,\n                itemName: this.sectionsData[i].sectionName + '( ' + this.sectionsData[i].sectionCode + ' )'\n              })\n            }\n            \n          }\n        } else {\n\n        }\n      },\n      (error) => {\n        // console.log(error)\n      },\n      () => { }\n    );\n  }\n\n  public questionType: any;\n  setType(qType) {\n    this.mcaAns = null;\n    if (qType != 'Select Type') {\n      this.optionList = [\"\"];\n      this.optionObj = {\n        '0': {\n          'optionText': null,\n          'tempId': 0\n        }\n      };\n      this.questionType = qType;\n    }\n  }\n  dropdownListAll = [];\n  selectedItemsAll = [];\n\n  dropdownList = [];\n  selectedItems = [];\n  dropdownSettings = {\n    singleSelection: true,\n    text:\"Select Section\",\n    enableSearchFilter: true,\n    classes:\"myclass custom-class\",\n    showCheckbox:false\n  };\n  dropdownCateg = {\n    singleSelection: true,\n    text: \"Select Category\",\n    selectAllText: 'Select All',\n    unSelectAllText: 'UnSelect All',\n    enableSearchFilter: true,\n    classes: \"myclass custom-class\",\n    showCheckbox:false\n  };\n\n  selectedCateg = [];\n  dropdownListCateg = [];\n\n  public tenantName:any;\n  constructor(private apiService: AllServicesService, private router: Router) { \n    var domain = window.location.hostname;\n    this.tenantName = domain.split('.')[0]\n  }\n\n  ngOnInit() {\n    this.getQuestions();\n    this.getComplexCity();\n    this.getQuestionType();\n    this.getAllSections();\n\n    this.getAllCategories();\n    this.getAllGlobalCategories();\n    // this.getCategoryAndSubCategoryList();\n\n    this.getTestInstance();\n    var self = this;\n    $('#exampleModalCenter').on('hidden.bs.modal', function () {\n        self.createdQuestion = [];\n    })\n\n    \n    $('#bulkUploadModal').on('hidden.bs.modal', function () {\n      self.selectedItemsInstance = [];\n    self.selectedItems = [];\n    self.selectedCateg = [];\n    self.heirarchy = null;\n    self.secCatName = null;\n    self.oldSection = true;\n  })\n  $('#globQuesModal').on('hidden.bs.modal', function () {\n    self.selectedItemsInstance = [];\n  self.selectedItems = [];\n  self.selectedCateg = [];\n  self.heirarchy = null;\n  self.secCatName = null;\n  self.oldSection = true;\n})\n$('#UploadedQuesModal').on('hidden.bs.modal', function () {\n  $(\"body\").css(\"overflow\", \"auto\");\n  $(\"#UploadedQuesModal\").css(\"overflow\", \"hidden\");\n});\n$('#UploadedQuesModal').on('show.bs.modal', function () {\n  $(\"body\").css(\"overflow\", \"hidden\");\n  $(\"#UploadedQuesModal\").css(\"overflow\", \"auto\");\n});\n\n\n  }\n\n\n  getQuestions() {\n    this.blockUI.start('Please Wait ...');\n    this.apiService.getAll('reports/questions/getallquestions?token=' + localStorage.getItem('token'))\n      .subscribe(res => {\n        this.blockUI.stop();\n        this.qustionList = res['questionsList'];\n        this.filterQuesList = res['questionsList'];\n      }, error => {\n        this.blockUI.stop();\n      })\n  }\n\n  uploadFile(fileInput: any) {\n    this.filesToUpload = <Array<File>>fileInput.target.files;\n    // console.log(this.filesToUpload)\n  }\n\n  getSize(bytes, decimals = 2) {\n    if (bytes === 0) return '0 Bytes';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n\n  clickUpload() {\n    document.getElementById('upload_file_btn').click();\n  }\n\n  uploadBulkQues() {\n    this.blockUI.start('Please Wait We Are Uploading ')\n    var formData: any = new FormData();\n    const files: Array<File> = this.filesToUpload;\n    if(!this.dropdownList.length){\n      this.blockUI.stop()\n      this.apiService.errorAlert(\"Please Select Section\");\n      return\n    }\n\n    if (this.filesToUpload.length == 0) {\n      this.blockUI.stop()\n      this.apiService.errorAlert(\"No file selected!\");\n      return\n    }\n    // console.log(files[0])\n    formData.append(\"files\", files[0], files[0]['name']);\n    formData.append(\"token\", localStorage.getItem('token'))\n    formData.append('sectionid', this.selectedItems.length ? this.selectedItems[0].id : 0) \n   \n    if(this.apiService.cfs){\n \n      var cfsformData: any = new FormData();\n     // cfsformData.append(\"access-token\",this.service.secretKey);\n      cfsformData.append(\"files\",files[0]);\n      this.apiService.postDataCfs(cfsformData).subscribe(\n        res=>{\n          // console.log(res);\n          if(res.status==200){\n            formData.append(\"cfsId\",res.body[0].id);\n            formData.append(\"cfsViewURL\",res.body[0].selfLink.view);\n            formData.append(\"cfsDownloadURL\",res.body[0].selfLink.download);\n\n            this.apiService.postData('notification/cfs/bulkquestions', formData)\n            .subscribe(res => {\n              if (!res['statusCode']) {\n                this.blockUI.stop()\n                // document.getElementById('uploaded_ques').click();\n                this.apiService.errorAlert(res['statusMessage']);\n              } else {\n                this.blockUI.stop();\n                this.getQuestions();\n                this.dropdownList = [];\n                // this.dropdownListInstance = [];\n                this.selectedItemsInstance = [];\n                this.selectedItems = [];\n                document.getElementById('close_bul_btn').click();\n                this.uploadedQues = res;\n\n                this.filesToUpload = []\n                this.questionsSuccessCount=res['questionsSuccessCount'];\n                this.questionsExistCount=res['questionsExistCount'];\n                this.totalQuestionsCount=res['totalQuestionsCount'];\n                \n                document.getElementById('uploaded_ques').click();\n                this.apiService.successAlert(res['statusMessage']);\n              }\n      \n            }, error => {\n              this.blockUI.stop();\n            })\n\n          }else{\n            this.apiService.errorAlert(files[0].name+\"Upload Failed\");\n          }\n\n        },\n        error=>{\n          // console.log(error);\n        },\n        ()=>{\n\n        }\n      );\n\n\n      \n\n    }else{\n\n      this.apiService.postData('notification/upload/bulkquestions', formData)\n      .subscribe(res => {\n        if (!res['statusCode']) {\n          this.blockUI.stop()\n          // document.getElementById('uploaded_ques').click();\n          this.apiService.errorAlert(res['statusMessage']);\n        } else {\n          this.blockUI.stop();\n          this.getQuestions();\n          this.dropdownList = [];\n          // this.dropdownListInstance = [];\n          this.selectedItemsInstance = [];\n          this.selectedItems = [];\n          document.getElementById('close_bul_btn').click();\n          this.uploadedQues = res;\n\n          this.filesToUpload = []\n          this.questionsSuccessCount=res['questionsSuccessCount'];\n          this.questionsExistCount=res['questionsExistCount'];\n          this.totalQuestionsCount=res['totalQuestionsCount'];\n\n          document.getElementById('uploaded_ques').click();\n          this.apiService.successAlert(res['statusMessage']);\n        }\n\n      }, error => {\n        this.blockUI.stop();\n      })\n    }\n   \n  }\n  checkboxAns(i) {\n    if (!this.checkboxList.includes(i)) {\n      this.checkboxList.push(i)\n    } else {\n      var ind = this.checkboxList.indexOf(i);\n      this.checkboxList.splice(ind, 1)\n    }\n  }\n  setMcqAns(ind) {\n    this.mcaAns = ind;\n  }\n  searchQuestion(searchQues) {\n    this.qustionList = this.filterQuesList\n    if (searchQues.trim().length > 0) {\n      var filterArr = this.qustionList.filter((item) => {\n        return item.qustionText.includes(searchQues.trim())\n      })\n      // console.log(filterArr)\n      this.qustionList = filterArr;\n    } else {\n      this.getQuestions()\n    }\n  }\n\n\n  getNextGlob() {\n    this.offset += 10;\n    this.pickGlobalQUestions();\n  }\n  getPrevGlob() {\n    this.offset -= 10;\n    this.pickGlobalQUestions();\n  }\n  pickGlobalQUestions() {\n    this.isQues = true;\n    // console.log(this.globalSearchKey)\n    if (this.globalSearchKey.length) {\n      this.apiService.getAll('reports/questions/searchquestion?searchkey=' + this.globalSearchKey + '&limitRecords=' + this.limitRecords + '&offset=' + this.offset + '&token=' + localStorage.getItem('token'))\n        .subscribe(res => {\n          this.globalQues = res;\n          if (!res['questionsList'].length) {\n            this.offset = 10;\n          }\n        }, error => {\n\n        })\n    } else {\n      this.offset = 10;\n      this.globalQues = null;\n    }\n\n  }\n  setPos(ind, ques) {\n    if (ques) {\n      var answerArr: any[] = ques.questionAnswer.split(',');\n      var optLis: any[] = [];\n      for (let i = 0; i < ques.optionsList.length; i++) {\n        if (answerArr.includes(String(ques.optionsList[i].optionId))) {\n          optLis.push({\n            answer: true,\n            optionId: ques.optionsList[i].optionId,\n            optionText: ques.optionsList[i].optionText,\n            optionImageId: ques.optionsList[i].optionImageId,\n            optionImageUrl: ques.optionsList[i].optionImageUrl\n          })\n        } else {\n          optLis.push({\n            answer: false,\n            optionId: ques.optionsList[i].optionId,\n            optionText: ques.optionsList[i].optionText,\n            optionImageId: ques.optionsList[i].optionImageId,\n            optionImageUrl: ques.optionsList[i].optionImageUrl\n          })\n        }\n      }\n\n      ques.optionsList = optLis;\n\n    }\n    this.hoverGlobQues = ques;\n    $('#glob_ques_id' + ind).css('position', 'relative')\n    $('#glob_ques_id' + ind + ' #menu_content').css({ 'position': 'absolute', 'left': '0px' })\n  }\n  editQuestion(hoverGlobQues) {\n    // document.getElementById('edit_ques').click();\n    $('#exampleModalCenter').modal('show');\n    this.questionTxt = hoverGlobQues.questionTitle;\n    this.questionTypeEdit = hoverGlobQues.questionTypeId;\n    this.questionType = hoverGlobQues.questionTypeId;\n    this.questComplexity = hoverGlobQues.questionComplexityId;\n    this.optionList = hoverGlobQues.optionsList;\n    // console.log(this.optionList)\n\n    if (hoverGlobQues.questionTypeId == '1') {\n      var ind = this.optionList.findIndex((item) => {\n        return item.optionId == hoverGlobQues.questionAnswer;\n      })\n      if (ind > -1) {\n        this.mcaAns = ind\n      }\n    }\n\n    if (hoverGlobQues.questionTypeId == '2') {\n      var answerId = hoverGlobQues.questionAnswer.split(',');\n\n      for (let i = 0; i < answerId.length; i++) {\n        var ind = this.optionList.findIndex((item) => {\n          return item.optionId == answerId[i];\n        })\n        if (ind > -1) {\n          this.checkBoxAnswers.push(ind);\n        }\n      }\n      // console.log(\"this.checkBoxAnswers\", this.checkBoxAnswers)\n\n      // if(ind > -1){\n      //   this.mcaAns = ind\n      // }\n    }\n\n    for (let i = 0; this.optionList.length; i++) {\n      this.optionObj[i] = {\n        'optionText': this.optionList[i].optionText,\n        'tempId': 0\n      }\n    }\n\n  }\n  checkMaqAnsers(i) {\n    return this.checkBoxAnswers.includes(i)\n  }\n  getTemplateLink() {\n\n    if(this.apiService.cfs){\n    this.templateLink =this.apiService.cfsUrl + this.apiService.questionTemplateUrl;\n      \n     }else{\n      this.templateLink = this.apiService.url + 'notification/template/download?filetype=question&fileId=1&token=' + localStorage.getItem('token')\n     }\n    //this.templateLink = this.apiService.url + 'notification/template/download?filetype=question&fileId=1&token=' + localStorage.getItem('token')\n  }\n\n  importAllQues(impAllQues){\n    // // console.log('this.globalQuessssssssssssssssssssssss',this.globalQues)\n    if(!impAllQues){\n      var x:object = {\n        ...this.newGlobQues\n      }\n      this.importQuesArr =  [ ...x['questionsList']]\n    }else{\n      this.importQuesArr = []\n    }\n   \n  } \n\n  checkAllImported(){\n\n    if(this.importQuesArr.length == this.newGlobQues['questionsList'].length){\n      return true\n    }else{\n      return false;\n    }\n  }\n\n  checkImport(ques){\n    // // console.log('this.importQuesArrssssssssss',this.importQuesArr)\n    var ind = this.importQuesArr.findIndex((item)=>{\n      return item.questionId == ques.questionId;\n    })\n\n    if(ind > -1){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  stopProp(event){\n    event.stopPropagation();\n  }\n\n  importQues(globalQues, bool,event,i) {\n   \n\n    // if (!bool) {\n    //   // var ind = this.importQuesArr.findIndex(x=>x == globalQues);\n    //   // if(ind<0){\n    //   this.importQuesArr.push(globalQues);\n    //   // }else{\n    //   //   this.importQuesArr.splice(ind,1);\n    //   // }\n    // } else {\n    //   var ind = this.importQuesArr.findIndex(x => x == globalQues);\n    //   if (ind < 0) {\n    //     this.importQuesArr.push(globalQues);\n    //   } else {\n    //     this.importQuesArr.splice(ind, 1);\n    //   }\n    // }\n    if(event.checked){\n      var ind = this.importQuesArr.findIndex(x => {\n        return x.questionId == globalQues.questionId;\n      });\n      if (ind < 0) {\n        this.importQuesArr.push(globalQues);\n      } else {\n        this.importQuesArr.splice(ind, 1);\n        // this.getGlobalQuestionsBySection(globalQues.sectionName);\n        if(this.importQuesArr.length == this.newGlobQues['questionsList'].length){\n          this.impAllQues = true;\n        }else{\n          this.impAllQues = false;\n        }\n        // this.getQuestionsBySection(this.categoryGlobalPath[this.categoryPath.length-1].sectionName)\n      }\n      if(this.importQuesArr.length == this.newGlobQuesBack['questionsList'].length){\n        this.impAllQues = true;\n      }else{\n        this.impAllQues = false;\n      }\n    }else{\n      var ind = this.importQuesArr.findIndex(x => {\n        return x.questionId == globalQues.questionId;\n      });\n      if (ind < 0) {\n        this.importQuesArr.push(globalQues);\n      } else {\n        this.importQuesArr.splice(ind, 1);\n        // this.getGlobalQuestionsBySection(globalQues.sectionName)\n\n        if(this.importQuesArr.length == this.newGlobQuesBack['questionsList'].length){\n          this.impAllQues = true;\n        }else{\n          this.impAllQues = false;\n        }\n        \n      }\n    }\n\n    \n//     // console.log(this.importQuesArr)\n//     // console.log(\"this.globalQues\",this.globalQues)\n// // console.log(\"this.globalQuesBack\",this.globalQuesBack)\n\n\n  }\n\n  importQuesAns() {\n\n    var questionList: any[] = []\n    for (let i = 0; i < this.importQuesArr.length; i++) {\n      var optionList: any[] = this.importQuesArr[i].optionsList;\n      if (this.selectedItems.length) {\n        this.importQuesArr[i].sectionId = this.selectedItems[0].id\n      }\n      if (this.importQuesArr[i].questionTypeId == '2') {\n        var arr: any[] = []\n        var multiIndArr: any[] = []\n        this.importQuesArr[i].optionsList.filter(\n          item => {\n            arr = this.importQuesArr[i].answer.split(',')\n            if (arr.includes(String(item.optionId))) {\n              multiIndArr.push(item)\n            }\n           \n          }\n        )\n\n        // console.log(\"multiIndArr\", multiIndArr)\n\n        var indArr = [];\n        for (let j = 0; j < multiIndArr.length; j++) {\n          let indx = this.importQuesArr[i].optionsList.findIndex(item => item == this.importQuesArr[i].optionsList[j])\n          if (indx > -1) {\n            indArr.push(indx)\n          }\n\n        }\n\n        indArr.sort((a, b) => {\n          return a - b;\n        })\n\n        this.importQuesArr[i].answer = indArr.join(',')\n\n      } else if (this.importQuesArr[i].questionTypeId == '1') {\n        var optInd = this.importQuesArr[i].optionsList.findIndex(\n          item => item.optionId == this.importQuesArr[i].answer\n        )\n        if (optInd > -1) {\n          this.importQuesArr[i].answer = String(optInd)\n        }\n      } else {\n        this.importQuesArr[i].answer = this.importQuesArr[i].answer\n      }\n\n    }\n\n    // console.log(\"this.importQuesArr\", this.importQuesArr)\n    var data = {\n      \"questionsList\": this.importQuesArr,\n      \"token\": localStorage.getItem('token')\n    }\n    this.apiService.postData('reports/questions/multiquestionimport', data)\n      .subscribe(res => {\n        if (res['statusCode'] == \"1\") {\n          this.apiService.successAlert(res['statusMessage'])\n          this.impQues = {}\n          this.importQuesArr = []\n          this.questionsSuccessCount=res['questionsSuccessCount'];\n          this.questionsExistCount=res['questionsExistCount'];\n          this.totalQuestionsCount=res['totalQuestionsCount'];\n          this.selectedItems = []\n          $('#globQuesModal').modal('hide')\n          this.getQuestions();\n          this.uploadedQues = res;\n          document.getElementById('uploaded_ques').click();\n          this.impAllQues = false;\n        }\n\n      }, error => {\n\n      })\n\n  }\n  onItemSelect(item: any) {\n    if (this.selectedSecId && this.selectedSecId != item.id) {\n      this.createdQuestion = [];\n    }\n    // // console.log(item);\n    // // console.log(this.selectedItems);\n  }\n\n  getAllCategories() {\n    // this.isQues = true;\n    this.categoryPath = [];\n    this.apiService.getAll('testmanagement/testsetup/listoftestcategorys?token=' + localStorage.getItem('token'))\n      .subscribe(res => {\n        if (res['statusCode'] == '1') {\n          this.allCategory = res;\n          this.allCategBack = {\n            ...this.allCategory\n            }\n        }\n      })\n  }\n\n  getAllGlobalCategories() {\n    // this.isQues = true;\n    this.categoryGlobalPath = [];\n    this.apiService.getAll('reports/questions/getglobalcategories?token=' + localStorage.getItem('token'))\n      .subscribe(res => {\n        if (res['statusCode'] == '1') {\n          this.allGlobalCategory = res;\n          this.allGlobalCategBack = {\n            ...this.allGlobalCategory\n            }\n        }else{\n          this.allGlobalCategory = res;\n          this.allGlobalCategBack = {\n            ...this.allGlobalCategory\n            }\n        }\n      })\n  }\n\n  getSubCategories(cat) {\n    this.allCategory = {};\n    this.categoryPath = [];\n    this.categoryPath.push(cat);\n    this.apiService.getAll('testmanagement/testsetup/gettestcatelogdetails?token=' + localStorage.getItem('token') + '&id=' + cat.testCategoryId + '&type=' + cat.type)\n      .subscribe(res => {\n        if (res['statusCode'] == '1') {\n          this.allCategory['listOfTestSubCategory'] = res['children'];\n          this.allCategBack = {};\n          this.allCategBack['listOfTestSubCategory'] = res['children'];\n        }\n      })\n\n  }\n\n  getGlobalSubCategories(cat) {\n    this.allGlobalCategory = {};\n    this.categoryGlobalPath = [];\n    this.categoryGlobalPath.push(cat);\n    this.apiService.getAll('reports/questions/getglobalsubcatandsectionsbycategory?token=' + localStorage.getItem('token') + '&categoryname=' + cat.categoryName)\n      .subscribe(res => {\n        if (res['statusCode'] == '1') {\n          this.allGlobalCategory['listOfGlobalSubCategory'] = res['children'];\n          this.allGlobalCategBack = {};\n          this.allGlobalCategBack['listOfGlobalSubCategory'] = res['children'];\n        }\n      })\n\n  }\n\n  getSubCategoriesBy(cat) {\n    this.categoryPath.push(cat);\n\n    this.allCategory = {};\n    if (cat.type == '2') {\n      this.apiService.getAll('testmanagement/testsetup/gettestcatelogdetails?token=' + localStorage.getItem('token') + '&id=' + cat.id + '&type=' + cat.type)\n        .subscribe(res => {\n          if (res['statusCode'] == '1') {\n            this.allCategory['listOfTestSubCategory'] = res['children'];\n            this.allCategBack = {\n              ...this.allCategory\n            }\n          }\n        })\n    } else if (cat.type == '3') {\n      this.getQuestionsBySection(cat.id)\n    }\n\n  }\n\n  getGlobalSubCategoriesBy(cat) {\n    this.categoryGlobalPath.push(cat);\n\n    this.allGlobalCategory = {};\n    if (cat.type == '2') {\n      this.apiService.getAll('reports/questions/getglobalsectionsbycatandsubcatnames?token=' + localStorage.getItem('token') + '&categoryname=' + this.categoryGlobalPath[0].categoryName + '&subcategoryname=' + this.categoryGlobalPath[this.categoryGlobalPath.length-1].subCategoryName)\n        .subscribe(res => {\n          if (res['statusCode'] == '1') {\n            this.allGlobalCategory['listOfGlobalSubCategory'] = res['children'];\n            this.allGlobalCategBack = {\n              ...this.allGlobalCategory\n            }\n          }\n        })\n    } else if (cat.type == '3') {\n      this.getGlobalQuestionsBySection(cat.sectionName)\n    }\n\n  }\n\n  getGlobalQuestionsBySection(sec) {\n    this.blockUI.start('Please Wait We Are Fetching Questions ...')\n    // console.log(this.categoryGlobalPath)\n    var url:any;\n    if(this.categoryGlobalPath.length>2){\n       url = 'reports/questions/getglobalquestionsbycatandsubcatandsectionsnames?token='+localStorage.getItem('token')+'&sectionName='+this.categoryGlobalPath[this.categoryGlobalPath.length-1].sectionName+'&subcategoryname='+this.categoryGlobalPath[this.categoryGlobalPath.length-2].subCategoryName+'&categoryname='+this.categoryGlobalPath[0].categoryName+'&hierarchy='+this.categoryGlobalPath[this.categoryGlobalPath.length-1].hierarchy\n    }else{\n      url = 'reports/questions/getglobalquestionsbycatandsubcatandsectionsnames?token='+localStorage.getItem('token')+'&sectionName='+this.categoryGlobalPath[this.categoryGlobalPath.length-1].sectionName+'&subcategoryname='+this.categoryGlobalPath[0].categoryName+'&categoryname='+this.categoryGlobalPath[0].categoryName+'&hierarchy='+this.categoryGlobalPath[this.categoryGlobalPath.length-1].hierarchy\n    }\n    this.apiService.getAll(url)\n      .subscribe(res => {\n        this.blockUI.stop();\n        if(res['statusCode'] == '1'){\n          this.isGlobQues = true;\n          this.newGlobQues = res;\n          this.newGlobQuesBack = {\n            ...res\n          }\n\n          // if(res['questionsList'].length){\n          //   // this.categoryGlobalPath.push({\n          //   //   sectionName:res['questionsList'][0].sectionName\n          //   // })\n          // }\n\n          if(this.importQuesArr.length == this.newGlobQuesBack['questionsList'].length){\n            this.impAllQues = true;\n          }else{\n            this.impAllQues = false;\n          }\n\n        }else{\n          this.apiService.errorAlert(res['statusMessage'])\n        }\n       \n      }, error => {\n        this.blockUI.stop();\n      })\n\n  }\n\n  getQuestionsBySection(sec) {\n    this.blockUI.start('Please Wait We Are Fetching Questions ...')\n    this.apiService.getAll('reports/questions/getquestionsbysectionid?token='+localStorage.getItem('token')+'&sectionId='+sec)\n      .subscribe(res => {\n        this.blockUI.stop()\n        if(res['statusCode'] == '1'){\n          this.isQues = true;\n          this.globalQues = res;\n          this.globalQuesBack = {\n            ...this.globalQues\n          }\n          if(res['questionsList'].length){\n            // this.categoryPath[0] = {\n            //   id:res['questionsList'][0].sectionId,\n            //   name:res['questionsList'][0].sectionName\n            // }\n          }\n          \n        }else{\n          this.apiService.errorAlert(res['statusMessage'])\n          this.blockUI.stop()\n        }\n       \n      }, error => {\n        this.blockUI.stop()\n      })\n\n  }\n\n  getByAlphaGlob(alpha){\n    if (alpha == 'All') {\n      this.isGlobQues = false;\n      this.getAllGlobalCategories();\n    }else{\n      var listCatSubCat:any;\n      if(!this.isGlobQues){\n        if(this.allGlobalCategBack && this.allGlobalCategBack['globalCategoriesList']){\n          listCatSubCat =   this.allGlobalCategBack['globalCategoriesList'].filter((item)=>{\n           return  item.categoryName.toLowerCase()[0] == alpha; \n          })\n\n          this.allGlobalCategory['globalCategoriesList'] = listCatSubCat;\n        }else if(this.allGlobalCategBack && this.allGlobalCategBack['listOfGlobalSubCategory']){\n          listCatSubCat =   this.allGlobalCategBack['listOfGlobalSubCategory'].filter((item)=>{\n            if(item && item.subCategoryName){\n              return  item.subCategoryName.toLowerCase()[0] == alpha; \n            }else if(item && item.sectionName){\n              return  item.sectionName.toLowerCase()[0] == alpha;\n            }\n            \n           })\n \n           this.allGlobalCategory['listOfGlobalSubCategory'] = listCatSubCat;\n        }   \n      }else{\n        if(this.newGlobQuesBack && this.newGlobQuesBack['questionsList']){\n          listCatSubCat = this.newGlobQuesBack['questionsList'].filter((item)=>{\n            return item.qustionText.toLowerCase()[0] == alpha;\n          })\n          this.newGlobQues['questionsList'] = listCatSubCat;\n        }\n      }\n  }\n  }\n\n  getByAlpha(alpha) {\n    if (alpha == 'All') {\n      this.isQues = false;\n      this.getAllCategories();\n    }else{\n        var listCatSubCat:any;\n        if(!this.isQues){\n          if(this.allCategBack && this.allCategBack['listOfTestCategory']){\n            listCatSubCat =   this.allCategBack['listOfTestCategory'].filter((item)=>{\n             return  item.testCategoryName.toLowerCase()[0] == alpha; \n            })\n  \n            this.allCategory['listOfTestCategory'] = listCatSubCat;\n          }else if(this.allCategBack && this.allCategBack['listOfTestSubCategory']){\n            listCatSubCat =   this.allCategBack['listOfTestSubCategory'].filter((item)=>{\n              return  item.name.toLowerCase()[0] == alpha; \n             })\n   \n             this.allCategory['listOfTestSubCategory'] = listCatSubCat;\n          }   \n        }else{\n          if(this.globalQuesBack && this.globalQuesBack['questionsList']){\n            listCatSubCat = this.globalQuesBack['questionsList'].filter((item)=>{\n              return item.qustionText.toLowerCase()[0] == alpha;\n            })\n            this.globalQues['questionsList'] = listCatSubCat;\n          }\n        }\n    }\n  }\n\n  gotoPath(catPath,i){\n    if(catPath.type == '1'){\n      this.isQues = false;\n      this.getSubCategories(catPath);\n      this.categoryPath.splice(i,this.categoryPath.length-i-1)\n    }else if(catPath.type == '2'){\n      this.isQues = false;\n      this.getSubCategoriesBy(catPath);\n      this.categoryPath.splice(i,this.categoryPath.length-i-1)\n    }else if(catPath.type == '3'){\n      this.getSubCategoriesBy(catPath);\n      this.categoryPath.splice(i,this.categoryPath.length-i-1)\n    }\n  }\n  gotoPathGlobal(catPath,i){\n    if(catPath.type == '1'){\n      this.isGlobQues = false;\n      this.getGlobalSubCategories(catPath);\n      this.categoryGlobalPath.splice(i,this.categoryGlobalPath.length-i-1)\n    }else if(catPath.type == '2'){\n      this.isGlobQues = false;\n      this.getGlobalSubCategoriesBy(catPath);\n      this.categoryGlobalPath.splice(i,this.categoryGlobalPath.length-i-1)\n    }else if(catPath.type == '3'){\n      this.getGlobalQuestionsBySection(catPath);\n      this.categoryGlobalPath.splice(i,this.categoryGlobalPath.length-i-1)\n    }\n  }\n\n  viewQuestion(ques){\n    this.hoverGlobQues = ques;\n\n    if (this.hoverGlobQues['questionTypeId'] == '1') {\n      var ind = this.hoverGlobQues['optionsList'].findIndex((item) => {\n        return item.optionId == this.hoverGlobQues['answer'];\n      })\n      if (ind > -1) {\n        this.mcaAns = ind\n      }\n    }\n\n    if (this.hoverGlobQues['questionTypeId']== '2') {\n      var answerId = this.hoverGlobQues['answer'].split(',');\n\n      for (let i = 0; i < answerId.length; i++) {\n        var ind = this.hoverGlobQues['optionsList'].findIndex((item) => {\n          return item.optionId == answerId[i];\n        })\n        if (ind > -1) {\n          this.checkBoxAnswers.push(ind);\n        }\n      }\n\n\n    }\n\n    // console.log(\"this.checkBoxAnswers\",this.checkBoxAnswers)\n\n  }\n  onLinkClick(event){\n    // // console.log(event)\n    // if(event.index == 1){\n    //   this.isGlobal = false;\n    // }else if (event.index == 2){\n    //   this.isGlobal = true;\n    // }\n    // console.log(event)\n    if(!event.checked){\n      this.isGlobal = false;\n    }else{\n      this.isGlobal = true;\n\n      this.getTestInstance();\n    }\n  }\n\n  getTestInstance(){\n    this.dropdownListInstance = []\n      this.apiService.getAll('reports/questions/listoftestinstance?token='+localStorage.getItem('token'))\n        .subscribe(res=>{\n          if(res['statusCode'] == '1'){\n            for(let i=0;i<res['tsetInstancesList'].length;i++){\n              this.dropdownListInstance.push({\n                id: res['tsetInstancesList'][i].testInstanceId,\n                itemName: res['tsetInstancesList'][i].testInstanceName,\n                sections: res['tsetInstancesList'][i].sectionList,\n                isGlobal: res['tsetInstancesList'][i].isGlobalInstance\n              })\n            }\n          }\n        })\n  }\n\n  deleteOption(i) {\n    if (this.optionList.length > 1) {\n      this.optionList.splice(i, 1)\n      delete this.optionObj[i]\n\n      var alignObj = {}\n      var objList = Object.keys(this.optionObj);\n      for(let i=0;i<objList.length;i++){\n        alignObj[i] = this.optionObj[objList[i]]\n      }\n      this.optionObj = alignObj;\n    }\n\n  }\n\n  showDelete(i){\n  $('#close_'+i).css('visibility','visible')\n  }\n\n  hideDelete(i){\n    $('#close_'+i).css('visibility','hidden')\n  }\n  \n  getCategoryAndSubCategoryList() {\n    this.apiService.getAll(\"testmanagement/globalcategorylist?token=\" + localStorage.getItem('token')).subscribe(\n      (data) => {\n        if (data['statusCode'] == 1) {\n          for(let i=0;i<data['globalCategoryList'].length;i++){\n            this.dropdownListCateg.push({\n              id : data['globalCategoryList'][i].id,\n              itemName: data['globalCategoryList'][i].name,\n              type: data['globalCategoryList'][i].type\n            })\n          }\n         \n        }\n      },\n      (error) => {\n        // console.log(error)\n      },\n      () => {\n\n      }\n    )\n  }\n\n  onCategSelect(){\n    this.obj = this.selectedCateg[0];\n    // // console.log(\"Type=\" + this.obj.type)\n    // // console.log(\"Id=\" + this.obj.id)\n    if (this.obj.type != 0 && this.obj.id != 0) {\n      this.apiService.getAll(\"testmanagement/getsubcategorylist?token=\" + localStorage.getItem('token') + \"&type=\" + this.obj.type + \"&id=\" + this.obj.id).subscribe(\n        (data) => {\n          if (data['statusCode'] == 1) {\n            // console.log(data)\n            this.heirarchy = data['categoryName'];\n            this.categoryId = data['categoryId'];\n          } else {\n\n          }\n        },\n        (error) => {\n          // console.log(error)\n        },\n        () => { }\n      );\n    }\n  }\n\n  // createSection(data) {\n  //   this.seactionSuccessMessage = false;\n  //   this.seactionFailMessage = false;\n  //   // console.log(data)\n  //   const formData = new FormData();\n  //   if (this.obj.type != 0) {\n  //     this.type = this.obj.type;\n  //     this.subcategoryId = this.obj.id\n  //     if (this.type == 2) {\n  //       formData.append(\"testCategoryId\", this.categoryId)\n  //       formData.append(\"testSubCategoryId\", this.subcategoryId)\n  //     } if (this.type == 1) {\n  //       this.subcategoryId = 0;\n  //       formData.append(\"testCategoryId\", this.categoryId)\n  //       formData.append(\"testSubCategoryId\", this.subcategoryId)\n  //     }\n  //   }\n  //   formData.append(\"testSectionName\", this.secCatName);\n  //   formData.append(\"token\", localStorage.getItem('token'))\n  //   this.apiService.postData(\"testmanagement/createsection\", formData).subscribe(\n  //     (data) => {\n  //       if (data['statusCode'] == 1) {\n  //         this.seactionSuccessMessage = true;\n  //         this.sectionStatusMessage = data['statusMessage'];\n  //         this.getAllSections();\n  //         $('#addSectionModal').modal('hide');\n  //         setTimeout(() => {\n  //           this.seactionSuccessMessage = false;\n  //         }, 3000)\n  //         this.apiService.successAlert(data['statusMessage'])\n  //         this.selectedCateg = [];\n  //         this.secCatName  = []\n  //         this.oldSection = !this.oldSection;\n  //       } else {\n  //         this.seactionFailMessage = true;\n  //         this.sectionStatusMessage = data['statusMessage'];\n  //         setTimeout(() => {\n  //           this.seactionFailMessage = false;\n  //         }, 3000)\n  //       }\n  //     },\n  //     (error) => {\n  //       // console.log(error)\n  //     },\n  //     () => { \n        \n  //     }\n  //   );\n  // }\n  createSection(data) {\n    this.seactionSuccessMessage = false;\n    this.seactionFailMessage = false;\n    const formData = new FormData();\n   \n    formData.append(\"testSectionName\", this.secCatName);\n    formData.append(\"token\", localStorage.getItem('token'))\n    formData.append(\"id\", this.selectedCateg.length ? this.selectedCateg[0].id : 0);\n    formData.append(\"type\", this.selectedCateg.length ? this.selectedCateg[0].type : 0)\n    formData.append(\"testInstanceId\", this.selectedItemsInstance.length ? this.selectedItemsInstance[0].id : 0);\n\n    this.apiService.postData(\"testmanagement/testsetup/createcatalogueinstancesection\", formData).subscribe(\n      (data) => {\n        if (data['statusCode'] == 1) {\n          this.getTestInstance();\n          this.seactionSuccessMessage = true;\n          this.sectionStatusMessage = data['statusMessage'];\n          // this.getAllSections();\n          $('#addSectionModal').modal('hide');\n          setTimeout(() => {\n            this.seactionSuccessMessage = false;\n          }, 3000)\n          this.apiService.successAlert(data['statusMessage'])\n          this.selectedCateg = [];\n          this.selectedItemsInstance = [];\n          this.secCatName = null;\n          this.oldSection = !this.oldSection;\n        } else {\n          this.seactionFailMessage = true;\n          this.sectionStatusMessage = data['statusMessage'];\n          setTimeout(() => {\n            this.seactionFailMessage = false;\n          }, 3000)\n        }\n      },\n      (error) => {\n        // console.log(error)\n      },\n      () => { \n        \n      }\n    );\n  }\n\n  toggleOldNewSections(){\n      this.oldSection = !this.oldSection;\n  }\n\n  pushSections(event){\n    this.dropdownList = []\n    if(event.sections){\n      for(let i=0;i<event.sections.length;i++){\n        this.dropdownList.push({\n          id:  event.sections[i].sectionId,\n          itemName: event.sections[i].sectionName\n        })\n      }\n    }\n    document.getElementById('mul_close').click();\n  }\n\n  removeSections(){\n    this.dropdownList = [];\n    this.selectedItems = [];\n    document.getElementById('mul_close').click();\n  }\n  removeSec(){\n    this.selectedItems = [];\n    document.getElementById('sec_mul').click();\n  }\n  addSec(){\n    document.getElementById('sec_mul').click(); \n  } \n\n  impQuestoSec(){\n    this.selectedItemsInstance =  [];\n    this.selectedItems = [];\n  }\n  onInstanceSelect(event){\n    this.dropdownListCateg = [];\n    this.selectedCateg = []\n    this.apiService.getAll('testmanagement/testsetup/listoftestinstancerootconfigs?token='+localStorage.getItem('token')+'&testInstanceId='+event.id)\n      .subscribe(res=>{\n        if (res['statusCode'] == 1) {\n          for(let i=0;i<res['testInstanceConfigList'].length;i++){\n            this.dropdownListCateg.push({\n              id : res['testInstanceConfigList'][i].id,\n              itemName: res['testInstanceConfigList'][i].name,\n              type: res['testInstanceConfigList'][i].type\n            })\n          }\n         \n        }\n      })\n  }\n\n  clearCateg(){\n    this.selectedCateg = [];\n    this.dropdownListCateg = [];\n    this.heirarchy = null;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms'\nimport { QuestionFilterPipe } from './../../Pipes/question-filter.pipe';\nimport { ListQuestionsComponent } from './../../Components/list-questions/list-questions.component';\n\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\nimport { BlockUIModule } from 'ng-block-ui';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatMenuModule} from '@angular/material/menu';\n\nimport {PopoverModule} from \"ngx-smart-popover\";\n\nconst routes: Routes = [{\n  path : \"\",\n  component : ListQuestionsComponent\n}];\n\n@NgModule({\n  declarations: [ListQuestionsComponent,QuestionFilterPipe],\n  imports: [RouterModule.forChild(routes),CommonModule,FormsModule,NgxPaginationModule,\n    AngularMultiSelectModule,BlockUIModule.forRoot(),MatCheckboxModule,MatRadioModule,\n      MatSlideToggleModule,MatTabsModule,MatMenuModule,PopoverModule],\n  exports: [RouterModule]\n})\nexport class ListQuestionsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { ListQuestionsRoutingModule } from './list-questions-routing.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    ListQuestionsRoutingModule\n  ]\n})\nexport class ListQuestionsModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'questionFilter'\n})\nexport class QuestionFilterPipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): any {\n    // console.log(value)\n    return null;\n  }\n\n}\n"],"sourceRoot":""}