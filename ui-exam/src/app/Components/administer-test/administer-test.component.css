.filter_tbl{
    background-color:#ffffff;
}
.filter_tbl tr:hover{
    background-color: #E7F8EF;
    color: #4B4B4B;
    box-shadow: 0 1px 5px #959595;
    cursor: pointer;
    transition-delay: 0.3s;
}

 
 
.no_filter_tr:hover,.no_filter_tr{
    background-color: inherit !important;
    cursor: inherit !important;
}
hr{
    border-top: 1px solid #707070;
    margin-top: 0px;
}
.test_inst_tag i,.test_inst_view i{
    color: #4B4B4B;
    position: relative;
    top: 2px;
    margin: 0px 15px 0px 0px;
}
.test_tag{
    margin: 0px 15px 0px 0px;
}
.test_inst_tag i,.test_tag i{
    color: #3D70B2;
}

/* view instance */
#instanceViewModal .modal-dialog,#instanceGlobalViewModal .modal-dialog{
    max-width: 95%;
}
#instanceViewModal .close,#instanceGlobalViewModal .close{
    background-color: #41D6C3;
    padding: 5px 10px;
    margin: 0px 0px 0px auto;
    border-radius: 20px;
    color: #000000;
    text-shadow: none;
}
.inst_title{
    color: #2C2C2C;
    font-weight: bold;
}
.tags_view{
    border:1px solid #707070;
    padding:15px;
}
.tags_view_tbl{
    padding:15px;
    display:none;
}
.tags_view_tbl p{
    background-color: #C4FFE0;
    padding: 5px 11px;
    margin: 0px 10px;
}
.test_inst_tag{
    position: relative;
}
.test_inst_tag:hover .tags_view_tbl{
    display: block;
    position: absolute;
    right: 50px;
    background-color: #4B4B4B;
    white-space: nowrap;
}
.tags_view_tbl span{
    background-color: #C4FFE0;
    padding: 5px 11px;
    margin: 0px 10px;
    color:#000000;
}
.tags_view span{
    background-color: #C4FFE0;
    padding: 5px 11px;
    margin: 3px 10px;
    display: inline-block;
}

tag-input-form input{
    height: 28px;
}
.edit_inst_btn{
    border: 1px solid #707070;
}
.edit_inst_btn i{
    position: relative;
    top: 5px;
}
.loading {
   
    position: relative;
    margin: 0 15px 15px 0;
    padding: 15px;
    border: 1px #ccc solid;
    border-radius: 4px;
  }
.card {
    padding: 0rem;
    padding-top: 15px !important;
    border: none;
    margin-left: 20px;
    box-shadow: 0px 1px 6px 2px #cec9c9;
}

hr {
    margin: 0rem -1.2rem;
    border-top: 2px solid rgba(4, 2, 2, 0.31);
}

.card-body {
    padding-bottom: 0rem;
}

.card-link {
    padding: 0.5rem;
    color: #3D70B2;
    text-decoration: none;
    background-color: transparent;
    font-size: 12px;
}

.card-body {
    font-family: Roboto, "Helvetica Neue", sans-serif;
}

.card-title {
    font-size: 18px;
    font-weight: 700;
    color: #2C2C2C;
    padding-bottom: 0.4rem;
    margin-top: -1.5rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    width: 250px;
}

.card-subtitle {
    font-size: 14px;
    color: #707070!important;
    padding-bottom: 0.4rem;
}

.card-text {
    font-size: 12px;
    opacity: 0.7;
    color: #707070!important;
    margin: 2px 0px;
    
}

.col-md-4 {
    flex: 0 0 27.333333%;
    max-width: 33.333333%;
    margin-bottom: 1rem;
}

h4{
    padding: 1rem;
    color: #3D70B2;
    font-size: 24px;
    font-weight: 300;
}
hr{
    border-top: 1px solid #707070;
    margin-top: 0px;
}

.modal-lg{
    max-width: 1000px;
}

/* The container */

.container {
    display: block;
    position: relative;
    padding-left: 35px;
    padding-top: 10px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 12px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}


/* Hide the browser's default checkbox */

.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

.container-mand input {
    /* position: absolute;
    cursor: pointer;
    left: 15px;
    top: 12px; */
}


/* Create a custom checkbox */

.checkmark {
    position: absolute;
    top: 0;
    right: 0;
    height: 20px;
    width: 20px;
    margin-top: -3px;
    background-color: #fff;
    border: 1px solid black;
}


/* On mouse-over, add a grey background color */

.container:hover input~.checkmark {
    background-color: #fff;
    border: 1px solid black;
}


/* When the checkbox is checked, add a blue background */

.container input:checked~.checkmark {
    background-color: #fff;
    border: 1px solid black;
}


/* Create the checkmark/indicator (hidden when not checked) */

.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}


/* Show the checkmark when checked */

.container input:checked~.checkmark:after {
    display: block;
}


/* Style the checkmark/indicator */

.container .checkmark:after {
    left: 6px;
    top: 0px;
    width: 7px;
    height: 15px;
    border: solid #000;
    border-width: 0 2px 2px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}

#ad {
    display: -ms-flexbox;
    -ms-flex-pack: center;
    -ms-flex-align: center;
    /* Firefox */
    display: -moz-box;
    -moz-box-pack: center;
    -moz-box-align: center;
    /* Safari, Opera, and Chrome */
    display: -webkit-box;
    -webkit-box-pack: center;
    -webkit-box-align: center;
}
.add_anoth_option{
    background: inherit;
    line-height: inherit;
    color: #007ad9;
    border-radius: inherit;
    box-shadow: inherit;
}
.close_icon{
    position: absolute;
    color: #f44336;
    right: -30px;
    z-index: 9999;
    top: 5px;
    transition-delay: 0.2s;
    visibility: hidden;
}
.close_icon i{
    font-size:18px;
    cursor: pointer;
    font-weight:bold;
}
 

.sec-container{
    background-color: #fbfbfb;
    width: 91%;
    margin: 20px 5px;
    border: 1px solid #707070;
}
/* end */
.vert_Btn{
    position: relative;
    top: 1px;
    height:30px;
}
.not_fung_inst{
    background-color: #ffffff;
    margin: 35px 0px;
    padding: 20px 0px;
    font-size: 20px;
}
.not_allowed{
    cursor: not-allowed;
    opacity: 0.5;
}
.upward_arrow i{
    color:#40BF37;
}
.downward_arrow i{
    color:#FA7070;
}
.downward_arrow,.upward_arrow{
    position: relative;
    top: 6px;
}


@keyframes blink {
    /**
     * At the start of the animation the dot
     * has an opacity of .2
     */
    0% {
      opacity: .2;
    }
    /**
     * At 20% the dot is fully visible and
     * then fades out slowly
     */
    20% {
      opacity: 1;
    }
    /**
     * Until it reaches an opacity of .2 and
     * the animation can start again
     */
    100% {
      opacity: .2;
    }
}

.saving span {
    /**
     * Use the blink animation, which is defined above
     */
    animation-name: blink;
    /**
     * The animation should take 1.4 seconds
     */
    animation-duration: 1.4s;
    /**
     * It will repeat itself forever
     */
    animation-iteration-count: infinite;
    /**
     * This makes sure that the starting style (opacity: .2)
     * of the animation is applied before the animation starts.
     * Otherwise we would see a short flash or would have
     * to set the default styling of the dots to the same
     * as the animation. Same applies for the ending styles.
     */
    animation-fill-mode: both;
}

.saving span:nth-child(2) {
    /**
     * Starts the animation of the third dot
     * with a delay of .2s, otherwise all dots
     * would animate at the same time
     */
    animation-delay: .2s;
}

.saving span:nth-child(3) {
    /**
     * Starts the animation of the third dot
     * with a delay of .4s, otherwise all dots
     * would animate at the same time
     */
    animation-delay: .4s;
}